

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 05 18:06:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1947
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    12                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,noexec
    13                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    22                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    23                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    24                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,noexec
    28                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text37,local,class=CODE,merge=1,delta=2
    71                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	intentry,global,class=CODE,delta=2
    81                           	psect	text48,local,class=CODE,merge=1,delta=2
    82                           	psect	text49,local,class=CODE,merge=1,delta=2
    83                           	psect	text50,local,class=CODE,merge=1,delta=2
    84                           	psect	text51,local,class=CODE,merge=1,delta=2
    85                           	psect	text52,local,class=CODE,merge=1,delta=2
    86                           	psect	text53,local,class=CODE,merge=1,delta=2
    87                           	psect	text54,local,class=CODE,merge=1,delta=2
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    89                           	dabs	1,0x7E,2
    90  0000                     
    91                           ; Version 2.20
    92                           ; Generated 12/02/2020 GMT
    93                           ; 
    94                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC16F1947 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  008F                     	;# 
   161  0090                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0097                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009A                     	;# 
   172  009B                     	;# 
   173  009B                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  0110                     	;# 
   182  0111                     	;# 
   183  0112                     	;# 
   184  0113                     	;# 
   185  0114                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0117                     	;# 
   189  0118                     	;# 
   190  0119                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011D                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  018C                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0193                     	;# 
   202  0193                     	;# 
   203  0193                     	;# 
   204  0194                     	;# 
   205  0195                     	;# 
   206  0196                     	;# 
   207  0199                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019A                     	;# 
   211  019B                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019C                     	;# 
   217  019D                     	;# 
   218  019D                     	;# 
   219  019E                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  020D                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0216                     	;# 
   236  0216                     	;# 
   237  0217                     	;# 
   238  0217                     	;# 
   239  0219                     	;# 
   240  021A                     	;# 
   241  021B                     	;# 
   242  021C                     	;# 
   243  021D                     	;# 
   244  021E                     	;# 
   245  021F                     	;# 
   246  028C                     	;# 
   247  028D                     	;# 
   248  0291                     	;# 
   249  0291                     	;# 
   250  0292                     	;# 
   251  0293                     	;# 
   252  0294                     	;# 
   253  0295                     	;# 
   254  0295                     	;# 
   255  0296                     	;# 
   256  0298                     	;# 
   257  0298                     	;# 
   258  0299                     	;# 
   259  029A                     	;# 
   260  029B                     	;# 
   261  029C                     	;# 
   262  029C                     	;# 
   263  029D                     	;# 
   264  029E                     	;# 
   265  029F                     	;# 
   266  030C                     	;# 
   267  030D                     	;# 
   268  0311                     	;# 
   269  0311                     	;# 
   270  0312                     	;# 
   271  0313                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031C                     	;# 
   281  031C                     	;# 
   282  031D                     	;# 
   283  031E                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  0394                     	;# 
   287  0395                     	;# 
   288  0396                     	;# 
   289  040C                     	;# 
   290  040D                     	;# 
   291  0415                     	;# 
   292  0416                     	;# 
   293  0417                     	;# 
   294  041C                     	;# 
   295  041D                     	;# 
   296  041E                     	;# 
   297  048D                     	;# 
   298  0491                     	;# 
   299  0492                     	;# 
   300  0493                     	;# 
   301  0493                     	;# 
   302  0494                     	;# 
   303  0495                     	;# 
   304  0496                     	;# 
   305  0497                     	;# 
   306  0791                     	;# 
   307  0792                     	;# 
   308  0793                     	;# 
   309  0794                     	;# 
   310  0795                     	;# 
   311  0798                     	;# 
   312  0799                     	;# 
   313  079A                     	;# 
   314  079B                     	;# 
   315  079C                     	;# 
   316  079D                     	;# 
   317  07A0                     	;# 
   318  07A1                     	;# 
   319  07A2                     	;# 
   320  07A3                     	;# 
   321  07A4                     	;# 
   322  07A5                     	;# 
   323  07A6                     	;# 
   324  07A7                     	;# 
   325  07A8                     	;# 
   326  07A9                     	;# 
   327  07AA                     	;# 
   328  07AB                     	;# 
   329  07AC                     	;# 
   330  07AD                     	;# 
   331  07AE                     	;# 
   332  07AF                     	;# 
   333  07B0                     	;# 
   334  07B1                     	;# 
   335  07B2                     	;# 
   336  07B3                     	;# 
   337  07B4                     	;# 
   338  07B5                     	;# 
   339  07B6                     	;# 
   340  07B7                     	;# 
   341  0FE4                     	;# 
   342  0FE5                     	;# 
   343  0FE6                     	;# 
   344  0FE7                     	;# 
   345  0FE8                     	;# 
   346  0FE9                     	;# 
   347  0FEA                     	;# 
   348  0FEB                     	;# 
   349  0FED                     	;# 
   350  0FEE                     	;# 
   351  0FEF                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0008                     	;# 
   361  0009                     	;# 
   362  000A                     	;# 
   363  000B                     	;# 
   364  000C                     	;# 
   365  000D                     	;# 
   366  000E                     	;# 
   367  000F                     	;# 
   368  0010                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0014                     	;# 
   373  0015                     	;# 
   374  0016                     	;# 
   375  0016                     	;# 
   376  0017                     	;# 
   377  0018                     	;# 
   378  0019                     	;# 
   379  001A                     	;# 
   380  001B                     	;# 
   381  001C                     	;# 
   382  001E                     	;# 
   383  001F                     	;# 
   384  008C                     	;# 
   385  008D                     	;# 
   386  008E                     	;# 
   387  008F                     	;# 
   388  0090                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009B                     	;# 
   401  009C                     	;# 
   402  009D                     	;# 
   403  009E                     	;# 
   404  010C                     	;# 
   405  010D                     	;# 
   406  010E                     	;# 
   407  010F                     	;# 
   408  0110                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011D                     	;# 
   421  011E                     	;# 
   422  011F                     	;# 
   423  018C                     	;# 
   424  0190                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  0199                     	;# 
   436  019A                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019C                     	;# 
   443  019C                     	;# 
   444  019D                     	;# 
   445  019D                     	;# 
   446  019E                     	;# 
   447  019E                     	;# 
   448  019F                     	;# 
   449  019F                     	;# 
   450  020D                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0219                     	;# 
   467  021A                     	;# 
   468  021B                     	;# 
   469  021C                     	;# 
   470  021D                     	;# 
   471  021E                     	;# 
   472  021F                     	;# 
   473  028C                     	;# 
   474  028D                     	;# 
   475  0291                     	;# 
   476  0291                     	;# 
   477  0292                     	;# 
   478  0293                     	;# 
   479  0294                     	;# 
   480  0295                     	;# 
   481  0295                     	;# 
   482  0296                     	;# 
   483  0298                     	;# 
   484  0298                     	;# 
   485  0299                     	;# 
   486  029A                     	;# 
   487  029B                     	;# 
   488  029C                     	;# 
   489  029C                     	;# 
   490  029D                     	;# 
   491  029E                     	;# 
   492  029F                     	;# 
   493  030C                     	;# 
   494  030D                     	;# 
   495  0311                     	;# 
   496  0311                     	;# 
   497  0312                     	;# 
   498  0313                     	;# 
   499  0314                     	;# 
   500  0315                     	;# 
   501  0315                     	;# 
   502  0316                     	;# 
   503  0318                     	;# 
   504  0318                     	;# 
   505  0319                     	;# 
   506  031A                     	;# 
   507  031C                     	;# 
   508  031C                     	;# 
   509  031D                     	;# 
   510  031E                     	;# 
   511  038C                     	;# 
   512  038D                     	;# 
   513  0394                     	;# 
   514  0395                     	;# 
   515  0396                     	;# 
   516  040C                     	;# 
   517  040D                     	;# 
   518  0415                     	;# 
   519  0416                     	;# 
   520  0417                     	;# 
   521  041C                     	;# 
   522  041D                     	;# 
   523  041E                     	;# 
   524  048D                     	;# 
   525  0491                     	;# 
   526  0492                     	;# 
   527  0493                     	;# 
   528  0493                     	;# 
   529  0494                     	;# 
   530  0495                     	;# 
   531  0496                     	;# 
   532  0497                     	;# 
   533  0791                     	;# 
   534  0792                     	;# 
   535  0793                     	;# 
   536  0794                     	;# 
   537  0795                     	;# 
   538  0798                     	;# 
   539  0799                     	;# 
   540  079A                     	;# 
   541  079B                     	;# 
   542  079C                     	;# 
   543  079D                     	;# 
   544  07A0                     	;# 
   545  07A1                     	;# 
   546  07A2                     	;# 
   547  07A3                     	;# 
   548  07A4                     	;# 
   549  07A5                     	;# 
   550  07A6                     	;# 
   551  07A7                     	;# 
   552  07A8                     	;# 
   553  07A9                     	;# 
   554  07AA                     	;# 
   555  07AB                     	;# 
   556  07AC                     	;# 
   557  07AD                     	;# 
   558  07AE                     	;# 
   559  07AF                     	;# 
   560  07B0                     	;# 
   561  07B1                     	;# 
   562  07B2                     	;# 
   563  07B3                     	;# 
   564  07B4                     	;# 
   565  07B5                     	;# 
   566  07B6                     	;# 
   567  07B7                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000D                     	;# 
   593  000E                     	;# 
   594  000F                     	;# 
   595  0010                     	;# 
   596  0011                     	;# 
   597  0012                     	;# 
   598  0013                     	;# 
   599  0014                     	;# 
   600  0015                     	;# 
   601  0016                     	;# 
   602  0016                     	;# 
   603  0017                     	;# 
   604  0018                     	;# 
   605  0019                     	;# 
   606  001A                     	;# 
   607  001B                     	;# 
   608  001C                     	;# 
   609  001E                     	;# 
   610  001F                     	;# 
   611  008C                     	;# 
   612  008D                     	;# 
   613  008E                     	;# 
   614  008F                     	;# 
   615  0090                     	;# 
   616  0091                     	;# 
   617  0092                     	;# 
   618  0093                     	;# 
   619  0094                     	;# 
   620  0095                     	;# 
   621  0096                     	;# 
   622  0097                     	;# 
   623  0098                     	;# 
   624  0099                     	;# 
   625  009A                     	;# 
   626  009B                     	;# 
   627  009B                     	;# 
   628  009C                     	;# 
   629  009D                     	;# 
   630  009E                     	;# 
   631  010C                     	;# 
   632  010D                     	;# 
   633  010E                     	;# 
   634  010F                     	;# 
   635  0110                     	;# 
   636  0111                     	;# 
   637  0112                     	;# 
   638  0113                     	;# 
   639  0114                     	;# 
   640  0115                     	;# 
   641  0116                     	;# 
   642  0117                     	;# 
   643  0118                     	;# 
   644  0119                     	;# 
   645  011A                     	;# 
   646  011B                     	;# 
   647  011D                     	;# 
   648  011E                     	;# 
   649  011F                     	;# 
   650  018C                     	;# 
   651  0190                     	;# 
   652  0191                     	;# 
   653  0191                     	;# 
   654  0192                     	;# 
   655  0193                     	;# 
   656  0193                     	;# 
   657  0193                     	;# 
   658  0194                     	;# 
   659  0195                     	;# 
   660  0196                     	;# 
   661  0199                     	;# 
   662  0199                     	;# 
   663  019A                     	;# 
   664  019A                     	;# 
   665  019B                     	;# 
   666  019B                     	;# 
   667  019B                     	;# 
   668  019B                     	;# 
   669  019C                     	;# 
   670  019C                     	;# 
   671  019D                     	;# 
   672  019D                     	;# 
   673  019E                     	;# 
   674  019E                     	;# 
   675  019F                     	;# 
   676  019F                     	;# 
   677  020D                     	;# 
   678  0211                     	;# 
   679  0211                     	;# 
   680  0212                     	;# 
   681  0212                     	;# 
   682  0213                     	;# 
   683  0213                     	;# 
   684  0214                     	;# 
   685  0214                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0215                     	;# 
   689  0216                     	;# 
   690  0216                     	;# 
   691  0217                     	;# 
   692  0217                     	;# 
   693  0219                     	;# 
   694  021A                     	;# 
   695  021B                     	;# 
   696  021C                     	;# 
   697  021D                     	;# 
   698  021E                     	;# 
   699  021F                     	;# 
   700  028C                     	;# 
   701  028D                     	;# 
   702  0291                     	;# 
   703  0291                     	;# 
   704  0292                     	;# 
   705  0293                     	;# 
   706  0294                     	;# 
   707  0295                     	;# 
   708  0295                     	;# 
   709  0296                     	;# 
   710  0298                     	;# 
   711  0298                     	;# 
   712  0299                     	;# 
   713  029A                     	;# 
   714  029B                     	;# 
   715  029C                     	;# 
   716  029C                     	;# 
   717  029D                     	;# 
   718  029E                     	;# 
   719  029F                     	;# 
   720  030C                     	;# 
   721  030D                     	;# 
   722  0311                     	;# 
   723  0311                     	;# 
   724  0312                     	;# 
   725  0313                     	;# 
   726  0314                     	;# 
   727  0315                     	;# 
   728  0315                     	;# 
   729  0316                     	;# 
   730  0318                     	;# 
   731  0318                     	;# 
   732  0319                     	;# 
   733  031A                     	;# 
   734  031C                     	;# 
   735  031C                     	;# 
   736  031D                     	;# 
   737  031E                     	;# 
   738  038C                     	;# 
   739  038D                     	;# 
   740  0394                     	;# 
   741  0395                     	;# 
   742  0396                     	;# 
   743  040C                     	;# 
   744  040D                     	;# 
   745  0415                     	;# 
   746  0416                     	;# 
   747  0417                     	;# 
   748  041C                     	;# 
   749  041D                     	;# 
   750  041E                     	;# 
   751  048D                     	;# 
   752  0491                     	;# 
   753  0492                     	;# 
   754  0493                     	;# 
   755  0493                     	;# 
   756  0494                     	;# 
   757  0495                     	;# 
   758  0496                     	;# 
   759  0497                     	;# 
   760  0791                     	;# 
   761  0792                     	;# 
   762  0793                     	;# 
   763  0794                     	;# 
   764  0795                     	;# 
   765  0798                     	;# 
   766  0799                     	;# 
   767  079A                     	;# 
   768  079B                     	;# 
   769  079C                     	;# 
   770  079D                     	;# 
   771  07A0                     	;# 
   772  07A1                     	;# 
   773  07A2                     	;# 
   774  07A3                     	;# 
   775  07A4                     	;# 
   776  07A5                     	;# 
   777  07A6                     	;# 
   778  07A7                     	;# 
   779  07A8                     	;# 
   780  07A9                     	;# 
   781  07AA                     	;# 
   782  07AB                     	;# 
   783  07AC                     	;# 
   784  07AD                     	;# 
   785  07AE                     	;# 
   786  07AF                     	;# 
   787  07B0                     	;# 
   788  07B1                     	;# 
   789  07B2                     	;# 
   790  07B3                     	;# 
   791  07B4                     	;# 
   792  07B5                     	;# 
   793  07B6                     	;# 
   794  07B7                     	;# 
   795  0FE4                     	;# 
   796  0FE5                     	;# 
   797  0FE6                     	;# 
   798  0FE7                     	;# 
   799  0FE8                     	;# 
   800  0FE9                     	;# 
   801  0FEA                     	;# 
   802  0FEB                     	;# 
   803  0FED                     	;# 
   804  0FEE                     	;# 
   805  0FEF                     	;# 
   806  0000                     	;# 
   807  0001                     	;# 
   808  0002                     	;# 
   809  0003                     	;# 
   810  0004                     	;# 
   811  0005                     	;# 
   812  0006                     	;# 
   813  0007                     	;# 
   814  0008                     	;# 
   815  0009                     	;# 
   816  000A                     	;# 
   817  000B                     	;# 
   818  000C                     	;# 
   819  000D                     	;# 
   820  000E                     	;# 
   821  000F                     	;# 
   822  0010                     	;# 
   823  0011                     	;# 
   824  0012                     	;# 
   825  0013                     	;# 
   826  0014                     	;# 
   827  0015                     	;# 
   828  0016                     	;# 
   829  0016                     	;# 
   830  0017                     	;# 
   831  0018                     	;# 
   832  0019                     	;# 
   833  001A                     	;# 
   834  001B                     	;# 
   835  001C                     	;# 
   836  001E                     	;# 
   837  001F                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0094                     	;# 
   847  0095                     	;# 
   848  0096                     	;# 
   849  0097                     	;# 
   850  0098                     	;# 
   851  0099                     	;# 
   852  009A                     	;# 
   853  009B                     	;# 
   854  009B                     	;# 
   855  009C                     	;# 
   856  009D                     	;# 
   857  009E                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  010F                     	;# 
   862  0110                     	;# 
   863  0111                     	;# 
   864  0112                     	;# 
   865  0113                     	;# 
   866  0114                     	;# 
   867  0115                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  0118                     	;# 
   871  0119                     	;# 
   872  011A                     	;# 
   873  011B                     	;# 
   874  011D                     	;# 
   875  011E                     	;# 
   876  011F                     	;# 
   877  018C                     	;# 
   878  0190                     	;# 
   879  0191                     	;# 
   880  0191                     	;# 
   881  0192                     	;# 
   882  0193                     	;# 
   883  0193                     	;# 
   884  0193                     	;# 
   885  0194                     	;# 
   886  0195                     	;# 
   887  0196                     	;# 
   888  0199                     	;# 
   889  0199                     	;# 
   890  019A                     	;# 
   891  019A                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019C                     	;# 
   898  019D                     	;# 
   899  019D                     	;# 
   900  019E                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  020D                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0216                     	;# 
   917  0216                     	;# 
   918  0217                     	;# 
   919  0217                     	;# 
   920  0219                     	;# 
   921  021A                     	;# 
   922  021B                     	;# 
   923  021C                     	;# 
   924  021D                     	;# 
   925  021E                     	;# 
   926  021F                     	;# 
   927  028C                     	;# 
   928  028D                     	;# 
   929  0291                     	;# 
   930  0291                     	;# 
   931  0292                     	;# 
   932  0293                     	;# 
   933  0294                     	;# 
   934  0295                     	;# 
   935  0295                     	;# 
   936  0296                     	;# 
   937  0298                     	;# 
   938  0298                     	;# 
   939  0299                     	;# 
   940  029A                     	;# 
   941  029B                     	;# 
   942  029C                     	;# 
   943  029C                     	;# 
   944  029D                     	;# 
   945  029E                     	;# 
   946  029F                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  0311                     	;# 
   950  0311                     	;# 
   951  0312                     	;# 
   952  0313                     	;# 
   953  0314                     	;# 
   954  0315                     	;# 
   955  0315                     	;# 
   956  0316                     	;# 
   957  0318                     	;# 
   958  0318                     	;# 
   959  0319                     	;# 
   960  031A                     	;# 
   961  031C                     	;# 
   962  031C                     	;# 
   963  031D                     	;# 
   964  031E                     	;# 
   965  038C                     	;# 
   966  038D                     	;# 
   967  0394                     	;# 
   968  0395                     	;# 
   969  0396                     	;# 
   970  040C                     	;# 
   971  040D                     	;# 
   972  0415                     	;# 
   973  0416                     	;# 
   974  0417                     	;# 
   975  041C                     	;# 
   976  041D                     	;# 
   977  041E                     	;# 
   978  048D                     	;# 
   979  0491                     	;# 
   980  0492                     	;# 
   981  0493                     	;# 
   982  0493                     	;# 
   983  0494                     	;# 
   984  0495                     	;# 
   985  0496                     	;# 
   986  0497                     	;# 
   987  0791                     	;# 
   988  0792                     	;# 
   989  0793                     	;# 
   990  0794                     	;# 
   991  0795                     	;# 
   992  0798                     	;# 
   993  0799                     	;# 
   994  079A                     	;# 
   995  079B                     	;# 
   996  079C                     	;# 
   997  079D                     	;# 
   998  07A0                     	;# 
   999  07A1                     	;# 
  1000  07A2                     	;# 
  1001  07A3                     	;# 
  1002  07A4                     	;# 
  1003  07A5                     	;# 
  1004  07A6                     	;# 
  1005  07A7                     	;# 
  1006  07A8                     	;# 
  1007  07A9                     	;# 
  1008  07AA                     	;# 
  1009  07AB                     	;# 
  1010  07AC                     	;# 
  1011  07AD                     	;# 
  1012  07AE                     	;# 
  1013  07AF                     	;# 
  1014  07B0                     	;# 
  1015  07B1                     	;# 
  1016  07B2                     	;# 
  1017  07B3                     	;# 
  1018  07B4                     	;# 
  1019  07B5                     	;# 
  1020  07B6                     	;# 
  1021  07B7                     	;# 
  1022  0FE4                     	;# 
  1023  0FE5                     	;# 
  1024  0FE6                     	;# 
  1025  0FE7                     	;# 
  1026  0FE8                     	;# 
  1027  0FE9                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000D                     	;# 
  1047  000E                     	;# 
  1048  000F                     	;# 
  1049  0010                     	;# 
  1050  0011                     	;# 
  1051  0012                     	;# 
  1052  0013                     	;# 
  1053  0014                     	;# 
  1054  0015                     	;# 
  1055  0016                     	;# 
  1056  0016                     	;# 
  1057  0017                     	;# 
  1058  0018                     	;# 
  1059  0019                     	;# 
  1060  001A                     	;# 
  1061  001B                     	;# 
  1062  001C                     	;# 
  1063  001E                     	;# 
  1064  001F                     	;# 
  1065  008C                     	;# 
  1066  008D                     	;# 
  1067  008E                     	;# 
  1068  008F                     	;# 
  1069  0090                     	;# 
  1070  0091                     	;# 
  1071  0092                     	;# 
  1072  0093                     	;# 
  1073  0094                     	;# 
  1074  0095                     	;# 
  1075  0096                     	;# 
  1076  0097                     	;# 
  1077  0098                     	;# 
  1078  0099                     	;# 
  1079  009A                     	;# 
  1080  009B                     	;# 
  1081  009B                     	;# 
  1082  009C                     	;# 
  1083  009D                     	;# 
  1084  009E                     	;# 
  1085  010C                     	;# 
  1086  010D                     	;# 
  1087  010E                     	;# 
  1088  010F                     	;# 
  1089  0110                     	;# 
  1090  0111                     	;# 
  1091  0112                     	;# 
  1092  0113                     	;# 
  1093  0114                     	;# 
  1094  0115                     	;# 
  1095  0116                     	;# 
  1096  0117                     	;# 
  1097  0118                     	;# 
  1098  0119                     	;# 
  1099  011A                     	;# 
  1100  011B                     	;# 
  1101  011D                     	;# 
  1102  011E                     	;# 
  1103  011F                     	;# 
  1104  018C                     	;# 
  1105  0190                     	;# 
  1106  0191                     	;# 
  1107  0191                     	;# 
  1108  0192                     	;# 
  1109  0193                     	;# 
  1110  0193                     	;# 
  1111  0193                     	;# 
  1112  0194                     	;# 
  1113  0195                     	;# 
  1114  0196                     	;# 
  1115  0199                     	;# 
  1116  0199                     	;# 
  1117  019A                     	;# 
  1118  019A                     	;# 
  1119  019B                     	;# 
  1120  019B                     	;# 
  1121  019B                     	;# 
  1122  019B                     	;# 
  1123  019C                     	;# 
  1124  019C                     	;# 
  1125  019D                     	;# 
  1126  019D                     	;# 
  1127  019E                     	;# 
  1128  019E                     	;# 
  1129  019F                     	;# 
  1130  019F                     	;# 
  1131  020D                     	;# 
  1132  0211                     	;# 
  1133  0211                     	;# 
  1134  0212                     	;# 
  1135  0212                     	;# 
  1136  0213                     	;# 
  1137  0213                     	;# 
  1138  0214                     	;# 
  1139  0214                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0216                     	;# 
  1144  0216                     	;# 
  1145  0217                     	;# 
  1146  0217                     	;# 
  1147  0219                     	;# 
  1148  021A                     	;# 
  1149  021B                     	;# 
  1150  021C                     	;# 
  1151  021D                     	;# 
  1152  021E                     	;# 
  1153  021F                     	;# 
  1154  028C                     	;# 
  1155  028D                     	;# 
  1156  0291                     	;# 
  1157  0291                     	;# 
  1158  0292                     	;# 
  1159  0293                     	;# 
  1160  0294                     	;# 
  1161  0295                     	;# 
  1162  0295                     	;# 
  1163  0296                     	;# 
  1164  0298                     	;# 
  1165  0298                     	;# 
  1166  0299                     	;# 
  1167  029A                     	;# 
  1168  029B                     	;# 
  1169  029C                     	;# 
  1170  029C                     	;# 
  1171  029D                     	;# 
  1172  029E                     	;# 
  1173  029F                     	;# 
  1174  030C                     	;# 
  1175  030D                     	;# 
  1176  0311                     	;# 
  1177  0311                     	;# 
  1178  0312                     	;# 
  1179  0313                     	;# 
  1180  0314                     	;# 
  1181  0315                     	;# 
  1182  0315                     	;# 
  1183  0316                     	;# 
  1184  0318                     	;# 
  1185  0318                     	;# 
  1186  0319                     	;# 
  1187  031A                     	;# 
  1188  031C                     	;# 
  1189  031C                     	;# 
  1190  031D                     	;# 
  1191  031E                     	;# 
  1192  038C                     	;# 
  1193  038D                     	;# 
  1194  0394                     	;# 
  1195  0395                     	;# 
  1196  0396                     	;# 
  1197  040C                     	;# 
  1198  040D                     	;# 
  1199  0415                     	;# 
  1200  0416                     	;# 
  1201  0417                     	;# 
  1202  041C                     	;# 
  1203  041D                     	;# 
  1204  041E                     	;# 
  1205  048D                     	;# 
  1206  0491                     	;# 
  1207  0492                     	;# 
  1208  0493                     	;# 
  1209  0493                     	;# 
  1210  0494                     	;# 
  1211  0495                     	;# 
  1212  0496                     	;# 
  1213  0497                     	;# 
  1214  0791                     	;# 
  1215  0792                     	;# 
  1216  0793                     	;# 
  1217  0794                     	;# 
  1218  0795                     	;# 
  1219  0798                     	;# 
  1220  0799                     	;# 
  1221  079A                     	;# 
  1222  079B                     	;# 
  1223  079C                     	;# 
  1224  079D                     	;# 
  1225  07A0                     	;# 
  1226  07A1                     	;# 
  1227  07A2                     	;# 
  1228  07A3                     	;# 
  1229  07A4                     	;# 
  1230  07A5                     	;# 
  1231  07A6                     	;# 
  1232  07A7                     	;# 
  1233  07A8                     	;# 
  1234  07A9                     	;# 
  1235  07AA                     	;# 
  1236  07AB                     	;# 
  1237  07AC                     	;# 
  1238  07AD                     	;# 
  1239  07AE                     	;# 
  1240  07AF                     	;# 
  1241  07B0                     	;# 
  1242  07B1                     	;# 
  1243  07B2                     	;# 
  1244  07B3                     	;# 
  1245  07B4                     	;# 
  1246  07B5                     	;# 
  1247  07B6                     	;# 
  1248  07B7                     	;# 
  1249  0FE4                     	;# 
  1250  0FE5                     	;# 
  1251  0FE6                     	;# 
  1252  0FE7                     	;# 
  1253  0FE8                     	;# 
  1254  0FE9                     	;# 
  1255  0FEA                     	;# 
  1256  0FEB                     	;# 
  1257  0FED                     	;# 
  1258  0FEE                     	;# 
  1259  0FEF                     	;# 
  1260  0000                     	;# 
  1261  0001                     	;# 
  1262  0002                     	;# 
  1263  0003                     	;# 
  1264  0004                     	;# 
  1265  0005                     	;# 
  1266  0006                     	;# 
  1267  0007                     	;# 
  1268  0008                     	;# 
  1269  0009                     	;# 
  1270  000A                     	;# 
  1271  000B                     	;# 
  1272  000C                     	;# 
  1273  000D                     	;# 
  1274  000E                     	;# 
  1275  000F                     	;# 
  1276  0010                     	;# 
  1277  0011                     	;# 
  1278  0012                     	;# 
  1279  0013                     	;# 
  1280  0014                     	;# 
  1281  0015                     	;# 
  1282  0016                     	;# 
  1283  0016                     	;# 
  1284  0017                     	;# 
  1285  0018                     	;# 
  1286  0019                     	;# 
  1287  001A                     	;# 
  1288  001B                     	;# 
  1289  001C                     	;# 
  1290  001E                     	;# 
  1291  001F                     	;# 
  1292  008C                     	;# 
  1293  008D                     	;# 
  1294  008E                     	;# 
  1295  008F                     	;# 
  1296  0090                     	;# 
  1297  0091                     	;# 
  1298  0092                     	;# 
  1299  0093                     	;# 
  1300  0094                     	;# 
  1301  0095                     	;# 
  1302  0096                     	;# 
  1303  0097                     	;# 
  1304  0098                     	;# 
  1305  0099                     	;# 
  1306  009A                     	;# 
  1307  009B                     	;# 
  1308  009B                     	;# 
  1309  009C                     	;# 
  1310  009D                     	;# 
  1311  009E                     	;# 
  1312  010C                     	;# 
  1313  010D                     	;# 
  1314  010E                     	;# 
  1315  010F                     	;# 
  1316  0110                     	;# 
  1317  0111                     	;# 
  1318  0112                     	;# 
  1319  0113                     	;# 
  1320  0114                     	;# 
  1321  0115                     	;# 
  1322  0116                     	;# 
  1323  0117                     	;# 
  1324  0118                     	;# 
  1325  0119                     	;# 
  1326  011A                     	;# 
  1327  011B                     	;# 
  1328  011D                     	;# 
  1329  011E                     	;# 
  1330  011F                     	;# 
  1331  018C                     	;# 
  1332  0190                     	;# 
  1333  0191                     	;# 
  1334  0191                     	;# 
  1335  0192                     	;# 
  1336  0193                     	;# 
  1337  0193                     	;# 
  1338  0193                     	;# 
  1339  0194                     	;# 
  1340  0195                     	;# 
  1341  0196                     	;# 
  1342  0199                     	;# 
  1343  0199                     	;# 
  1344  019A                     	;# 
  1345  019A                     	;# 
  1346  019B                     	;# 
  1347  019B                     	;# 
  1348  019B                     	;# 
  1349  019B                     	;# 
  1350  019C                     	;# 
  1351  019C                     	;# 
  1352  019D                     	;# 
  1353  019D                     	;# 
  1354  019E                     	;# 
  1355  019E                     	;# 
  1356  019F                     	;# 
  1357  019F                     	;# 
  1358  020D                     	;# 
  1359  0211                     	;# 
  1360  0211                     	;# 
  1361  0212                     	;# 
  1362  0212                     	;# 
  1363  0213                     	;# 
  1364  0213                     	;# 
  1365  0214                     	;# 
  1366  0214                     	;# 
  1367  0215                     	;# 
  1368  0215                     	;# 
  1369  0215                     	;# 
  1370  0216                     	;# 
  1371  0216                     	;# 
  1372  0217                     	;# 
  1373  0217                     	;# 
  1374  0219                     	;# 
  1375  021A                     	;# 
  1376  021B                     	;# 
  1377  021C                     	;# 
  1378  021D                     	;# 
  1379  021E                     	;# 
  1380  021F                     	;# 
  1381  028C                     	;# 
  1382  028D                     	;# 
  1383  0291                     	;# 
  1384  0291                     	;# 
  1385  0292                     	;# 
  1386  0293                     	;# 
  1387  0294                     	;# 
  1388  0295                     	;# 
  1389  0295                     	;# 
  1390  0296                     	;# 
  1391  0298                     	;# 
  1392  0298                     	;# 
  1393  0299                     	;# 
  1394  029A                     	;# 
  1395  029B                     	;# 
  1396  029C                     	;# 
  1397  029C                     	;# 
  1398  029D                     	;# 
  1399  029E                     	;# 
  1400  029F                     	;# 
  1401  030C                     	;# 
  1402  030D                     	;# 
  1403  0311                     	;# 
  1404  0311                     	;# 
  1405  0312                     	;# 
  1406  0313                     	;# 
  1407  0314                     	;# 
  1408  0315                     	;# 
  1409  0315                     	;# 
  1410  0316                     	;# 
  1411  0318                     	;# 
  1412  0318                     	;# 
  1413  0319                     	;# 
  1414  031A                     	;# 
  1415  031C                     	;# 
  1416  031C                     	;# 
  1417  031D                     	;# 
  1418  031E                     	;# 
  1419  038C                     	;# 
  1420  038D                     	;# 
  1421  0394                     	;# 
  1422  0395                     	;# 
  1423  0396                     	;# 
  1424  040C                     	;# 
  1425  040D                     	;# 
  1426  0415                     	;# 
  1427  0416                     	;# 
  1428  0417                     	;# 
  1429  041C                     	;# 
  1430  041D                     	;# 
  1431  041E                     	;# 
  1432  048D                     	;# 
  1433  0491                     	;# 
  1434  0492                     	;# 
  1435  0493                     	;# 
  1436  0493                     	;# 
  1437  0494                     	;# 
  1438  0495                     	;# 
  1439  0496                     	;# 
  1440  0497                     	;# 
  1441  0791                     	;# 
  1442  0792                     	;# 
  1443  0793                     	;# 
  1444  0794                     	;# 
  1445  0795                     	;# 
  1446  0798                     	;# 
  1447  0799                     	;# 
  1448  079A                     	;# 
  1449  079B                     	;# 
  1450  079C                     	;# 
  1451  079D                     	;# 
  1452  07A0                     	;# 
  1453  07A1                     	;# 
  1454  07A2                     	;# 
  1455  07A3                     	;# 
  1456  07A4                     	;# 
  1457  07A5                     	;# 
  1458  07A6                     	;# 
  1459  07A7                     	;# 
  1460  07A8                     	;# 
  1461  07A9                     	;# 
  1462  07AA                     	;# 
  1463  07AB                     	;# 
  1464  07AC                     	;# 
  1465  07AD                     	;# 
  1466  07AE                     	;# 
  1467  07AF                     	;# 
  1468  07B0                     	;# 
  1469  07B1                     	;# 
  1470  07B2                     	;# 
  1471  07B3                     	;# 
  1472  07B4                     	;# 
  1473  07B5                     	;# 
  1474  07B6                     	;# 
  1475  07B7                     	;# 
  1476  0FE4                     	;# 
  1477  0FE5                     	;# 
  1478  0FE6                     	;# 
  1479  0FE7                     	;# 
  1480  0FE8                     	;# 
  1481  0FE9                     	;# 
  1482  0FEA                     	;# 
  1483  0FEB                     	;# 
  1484  0FED                     	;# 
  1485  0FEE                     	;# 
  1486  0FEF                     	;# 
  1487  0000                     	;# 
  1488  0001                     	;# 
  1489  0002                     	;# 
  1490  0003                     	;# 
  1491  0004                     	;# 
  1492  0005                     	;# 
  1493  0006                     	;# 
  1494  0007                     	;# 
  1495  0008                     	;# 
  1496  0009                     	;# 
  1497  000A                     	;# 
  1498  000B                     	;# 
  1499  000C                     	;# 
  1500  000D                     	;# 
  1501  000E                     	;# 
  1502  000F                     	;# 
  1503  0010                     	;# 
  1504  0011                     	;# 
  1505  0012                     	;# 
  1506  0013                     	;# 
  1507  0014                     	;# 
  1508  0015                     	;# 
  1509  0016                     	;# 
  1510  0016                     	;# 
  1511  0017                     	;# 
  1512  0018                     	;# 
  1513  0019                     	;# 
  1514  001A                     	;# 
  1515  001B                     	;# 
  1516  001C                     	;# 
  1517  001E                     	;# 
  1518  001F                     	;# 
  1519  008C                     	;# 
  1520  008D                     	;# 
  1521  008E                     	;# 
  1522  008F                     	;# 
  1523  0090                     	;# 
  1524  0091                     	;# 
  1525  0092                     	;# 
  1526  0093                     	;# 
  1527  0094                     	;# 
  1528  0095                     	;# 
  1529  0096                     	;# 
  1530  0097                     	;# 
  1531  0098                     	;# 
  1532  0099                     	;# 
  1533  009A                     	;# 
  1534  009B                     	;# 
  1535  009B                     	;# 
  1536  009C                     	;# 
  1537  009D                     	;# 
  1538  009E                     	;# 
  1539  010C                     	;# 
  1540  010D                     	;# 
  1541  010E                     	;# 
  1542  010F                     	;# 
  1543  0110                     	;# 
  1544  0111                     	;# 
  1545  0112                     	;# 
  1546  0113                     	;# 
  1547  0114                     	;# 
  1548  0115                     	;# 
  1549  0116                     	;# 
  1550  0117                     	;# 
  1551  0118                     	;# 
  1552  0119                     	;# 
  1553  011A                     	;# 
  1554  011B                     	;# 
  1555  011D                     	;# 
  1556  011E                     	;# 
  1557  011F                     	;# 
  1558  018C                     	;# 
  1559  0190                     	;# 
  1560  0191                     	;# 
  1561  0191                     	;# 
  1562  0192                     	;# 
  1563  0193                     	;# 
  1564  0193                     	;# 
  1565  0193                     	;# 
  1566  0194                     	;# 
  1567  0195                     	;# 
  1568  0196                     	;# 
  1569  0199                     	;# 
  1570  0199                     	;# 
  1571  019A                     	;# 
  1572  019A                     	;# 
  1573  019B                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019C                     	;# 
  1578  019C                     	;# 
  1579  019D                     	;# 
  1580  019D                     	;# 
  1581  019E                     	;# 
  1582  019E                     	;# 
  1583  019F                     	;# 
  1584  019F                     	;# 
  1585  020D                     	;# 
  1586  0211                     	;# 
  1587  0211                     	;# 
  1588  0212                     	;# 
  1589  0212                     	;# 
  1590  0213                     	;# 
  1591  0213                     	;# 
  1592  0214                     	;# 
  1593  0214                     	;# 
  1594  0215                     	;# 
  1595  0215                     	;# 
  1596  0215                     	;# 
  1597  0216                     	;# 
  1598  0216                     	;# 
  1599  0217                     	;# 
  1600  0217                     	;# 
  1601  0219                     	;# 
  1602  021A                     	;# 
  1603  021B                     	;# 
  1604  021C                     	;# 
  1605  021D                     	;# 
  1606  021E                     	;# 
  1607  021F                     	;# 
  1608  028C                     	;# 
  1609  028D                     	;# 
  1610  0291                     	;# 
  1611  0291                     	;# 
  1612  0292                     	;# 
  1613  0293                     	;# 
  1614  0294                     	;# 
  1615  0295                     	;# 
  1616  0295                     	;# 
  1617  0296                     	;# 
  1618  0298                     	;# 
  1619  0298                     	;# 
  1620  0299                     	;# 
  1621  029A                     	;# 
  1622  029B                     	;# 
  1623  029C                     	;# 
  1624  029C                     	;# 
  1625  029D                     	;# 
  1626  029E                     	;# 
  1627  029F                     	;# 
  1628  030C                     	;# 
  1629  030D                     	;# 
  1630  0311                     	;# 
  1631  0311                     	;# 
  1632  0312                     	;# 
  1633  0313                     	;# 
  1634  0314                     	;# 
  1635  0315                     	;# 
  1636  0315                     	;# 
  1637  0316                     	;# 
  1638  0318                     	;# 
  1639  0318                     	;# 
  1640  0319                     	;# 
  1641  031A                     	;# 
  1642  031C                     	;# 
  1643  031C                     	;# 
  1644  031D                     	;# 
  1645  031E                     	;# 
  1646  038C                     	;# 
  1647  038D                     	;# 
  1648  0394                     	;# 
  1649  0395                     	;# 
  1650  0396                     	;# 
  1651  040C                     	;# 
  1652  040D                     	;# 
  1653  0415                     	;# 
  1654  0416                     	;# 
  1655  0417                     	;# 
  1656  041C                     	;# 
  1657  041D                     	;# 
  1658  041E                     	;# 
  1659  048D                     	;# 
  1660  0491                     	;# 
  1661  0492                     	;# 
  1662  0493                     	;# 
  1663  0493                     	;# 
  1664  0494                     	;# 
  1665  0495                     	;# 
  1666  0496                     	;# 
  1667  0497                     	;# 
  1668  0791                     	;# 
  1669  0792                     	;# 
  1670  0793                     	;# 
  1671  0794                     	;# 
  1672  0795                     	;# 
  1673  0798                     	;# 
  1674  0799                     	;# 
  1675  079A                     	;# 
  1676  079B                     	;# 
  1677  079C                     	;# 
  1678  079D                     	;# 
  1679  07A0                     	;# 
  1680  07A1                     	;# 
  1681  07A2                     	;# 
  1682  07A3                     	;# 
  1683  07A4                     	;# 
  1684  07A5                     	;# 
  1685  07A6                     	;# 
  1686  07A7                     	;# 
  1687  07A8                     	;# 
  1688  07A9                     	;# 
  1689  07AA                     	;# 
  1690  07AB                     	;# 
  1691  07AC                     	;# 
  1692  07AD                     	;# 
  1693  07AE                     	;# 
  1694  07AF                     	;# 
  1695  07B0                     	;# 
  1696  07B1                     	;# 
  1697  07B2                     	;# 
  1698  07B3                     	;# 
  1699  07B4                     	;# 
  1700  07B5                     	;# 
  1701  07B6                     	;# 
  1702  07B7                     	;# 
  1703  0FE4                     	;# 
  1704  0FE5                     	;# 
  1705  0FE6                     	;# 
  1706  0FE7                     	;# 
  1707  0FE8                     	;# 
  1708  0FE9                     	;# 
  1709  0FEA                     	;# 
  1710  0FEB                     	;# 
  1711  0FED                     	;# 
  1712  0FEE                     	;# 
  1713  0FEF                     	;# 
  1714  0000                     	;# 
  1715  0001                     	;# 
  1716  0002                     	;# 
  1717  0003                     	;# 
  1718  0004                     	;# 
  1719  0005                     	;# 
  1720  0006                     	;# 
  1721  0007                     	;# 
  1722  0008                     	;# 
  1723  0009                     	;# 
  1724  000A                     	;# 
  1725  000B                     	;# 
  1726  000C                     	;# 
  1727  000D                     	;# 
  1728  000E                     	;# 
  1729  000F                     	;# 
  1730  0010                     	;# 
  1731  0011                     	;# 
  1732  0012                     	;# 
  1733  0013                     	;# 
  1734  0014                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0016                     	;# 
  1738  0017                     	;# 
  1739  0018                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001B                     	;# 
  1743  001C                     	;# 
  1744  001E                     	;# 
  1745  001F                     	;# 
  1746  008C                     	;# 
  1747  008D                     	;# 
  1748  008E                     	;# 
  1749  008F                     	;# 
  1750  0090                     	;# 
  1751  0091                     	;# 
  1752  0092                     	;# 
  1753  0093                     	;# 
  1754  0094                     	;# 
  1755  0095                     	;# 
  1756  0096                     	;# 
  1757  0097                     	;# 
  1758  0098                     	;# 
  1759  0099                     	;# 
  1760  009A                     	;# 
  1761  009B                     	;# 
  1762  009B                     	;# 
  1763  009C                     	;# 
  1764  009D                     	;# 
  1765  009E                     	;# 
  1766  010C                     	;# 
  1767  010D                     	;# 
  1768  010E                     	;# 
  1769  010F                     	;# 
  1770  0110                     	;# 
  1771  0111                     	;# 
  1772  0112                     	;# 
  1773  0113                     	;# 
  1774  0114                     	;# 
  1775  0115                     	;# 
  1776  0116                     	;# 
  1777  0117                     	;# 
  1778  0118                     	;# 
  1779  0119                     	;# 
  1780  011A                     	;# 
  1781  011B                     	;# 
  1782  011D                     	;# 
  1783  011E                     	;# 
  1784  011F                     	;# 
  1785  018C                     	;# 
  1786  0190                     	;# 
  1787  0191                     	;# 
  1788  0191                     	;# 
  1789  0192                     	;# 
  1790  0193                     	;# 
  1791  0193                     	;# 
  1792  0193                     	;# 
  1793  0194                     	;# 
  1794  0195                     	;# 
  1795  0196                     	;# 
  1796  0199                     	;# 
  1797  0199                     	;# 
  1798  019A                     	;# 
  1799  019A                     	;# 
  1800  019B                     	;# 
  1801  019B                     	;# 
  1802  019B                     	;# 
  1803  019B                     	;# 
  1804  019C                     	;# 
  1805  019C                     	;# 
  1806  019D                     	;# 
  1807  019D                     	;# 
  1808  019E                     	;# 
  1809  019E                     	;# 
  1810  019F                     	;# 
  1811  019F                     	;# 
  1812  020D                     	;# 
  1813  0211                     	;# 
  1814  0211                     	;# 
  1815  0212                     	;# 
  1816  0212                     	;# 
  1817  0213                     	;# 
  1818  0213                     	;# 
  1819  0214                     	;# 
  1820  0214                     	;# 
  1821  0215                     	;# 
  1822  0215                     	;# 
  1823  0215                     	;# 
  1824  0216                     	;# 
  1825  0216                     	;# 
  1826  0217                     	;# 
  1827  0217                     	;# 
  1828  0219                     	;# 
  1829  021A                     	;# 
  1830  021B                     	;# 
  1831  021C                     	;# 
  1832  021D                     	;# 
  1833  021E                     	;# 
  1834  021F                     	;# 
  1835  028C                     	;# 
  1836  028D                     	;# 
  1837  0291                     	;# 
  1838  0291                     	;# 
  1839  0292                     	;# 
  1840  0293                     	;# 
  1841  0294                     	;# 
  1842  0295                     	;# 
  1843  0295                     	;# 
  1844  0296                     	;# 
  1845  0298                     	;# 
  1846  0298                     	;# 
  1847  0299                     	;# 
  1848  029A                     	;# 
  1849  029B                     	;# 
  1850  029C                     	;# 
  1851  029C                     	;# 
  1852  029D                     	;# 
  1853  029E                     	;# 
  1854  029F                     	;# 
  1855  030C                     	;# 
  1856  030D                     	;# 
  1857  0311                     	;# 
  1858  0311                     	;# 
  1859  0312                     	;# 
  1860  0313                     	;# 
  1861  0314                     	;# 
  1862  0315                     	;# 
  1863  0315                     	;# 
  1864  0316                     	;# 
  1865  0318                     	;# 
  1866  0318                     	;# 
  1867  0319                     	;# 
  1868  031A                     	;# 
  1869  031C                     	;# 
  1870  031C                     	;# 
  1871  031D                     	;# 
  1872  031E                     	;# 
  1873  038C                     	;# 
  1874  038D                     	;# 
  1875  0394                     	;# 
  1876  0395                     	;# 
  1877  0396                     	;# 
  1878  040C                     	;# 
  1879  040D                     	;# 
  1880  0415                     	;# 
  1881  0416                     	;# 
  1882  0417                     	;# 
  1883  041C                     	;# 
  1884  041D                     	;# 
  1885  041E                     	;# 
  1886  048D                     	;# 
  1887  0491                     	;# 
  1888  0492                     	;# 
  1889  0493                     	;# 
  1890  0493                     	;# 
  1891  0494                     	;# 
  1892  0495                     	;# 
  1893  0496                     	;# 
  1894  0497                     	;# 
  1895  0791                     	;# 
  1896  0792                     	;# 
  1897  0793                     	;# 
  1898  0794                     	;# 
  1899  0795                     	;# 
  1900  0798                     	;# 
  1901  0799                     	;# 
  1902  079A                     	;# 
  1903  079B                     	;# 
  1904  079C                     	;# 
  1905  079D                     	;# 
  1906  07A0                     	;# 
  1907  07A1                     	;# 
  1908  07A2                     	;# 
  1909  07A3                     	;# 
  1910  07A4                     	;# 
  1911  07A5                     	;# 
  1912  07A6                     	;# 
  1913  07A7                     	;# 
  1914  07A8                     	;# 
  1915  07A9                     	;# 
  1916  07AA                     	;# 
  1917  07AB                     	;# 
  1918  07AC                     	;# 
  1919  07AD                     	;# 
  1920  07AE                     	;# 
  1921  07AF                     	;# 
  1922  07B0                     	;# 
  1923  07B1                     	;# 
  1924  07B2                     	;# 
  1925  07B3                     	;# 
  1926  07B4                     	;# 
  1927  07B5                     	;# 
  1928  07B6                     	;# 
  1929  07B7                     	;# 
  1930  0FE4                     	;# 
  1931  0FE5                     	;# 
  1932  0FE6                     	;# 
  1933  0FE7                     	;# 
  1934  0FE8                     	;# 
  1935  0FE9                     	;# 
  1936  0FEA                     	;# 
  1937  0FEB                     	;# 
  1938  0FED                     	;# 
  1939  0FEE                     	;# 
  1940  0FEF                     	;# 
  1941  0000                     	;# 
  1942  0001                     	;# 
  1943  0002                     	;# 
  1944  0003                     	;# 
  1945  0004                     	;# 
  1946  0005                     	;# 
  1947  0006                     	;# 
  1948  0007                     	;# 
  1949  0008                     	;# 
  1950  0009                     	;# 
  1951  000A                     	;# 
  1952  000B                     	;# 
  1953  000C                     	;# 
  1954  000D                     	;# 
  1955  000E                     	;# 
  1956  000F                     	;# 
  1957  0010                     	;# 
  1958  0011                     	;# 
  1959  0012                     	;# 
  1960  0013                     	;# 
  1961  0014                     	;# 
  1962  0015                     	;# 
  1963  0016                     	;# 
  1964  0016                     	;# 
  1965  0017                     	;# 
  1966  0018                     	;# 
  1967  0019                     	;# 
  1968  001A                     	;# 
  1969  001B                     	;# 
  1970  001C                     	;# 
  1971  001E                     	;# 
  1972  001F                     	;# 
  1973  008C                     	;# 
  1974  008D                     	;# 
  1975  008E                     	;# 
  1976  008F                     	;# 
  1977  0090                     	;# 
  1978  0091                     	;# 
  1979  0092                     	;# 
  1980  0093                     	;# 
  1981  0094                     	;# 
  1982  0095                     	;# 
  1983  0096                     	;# 
  1984  0097                     	;# 
  1985  0098                     	;# 
  1986  0099                     	;# 
  1987  009A                     	;# 
  1988  009B                     	;# 
  1989  009B                     	;# 
  1990  009C                     	;# 
  1991  009D                     	;# 
  1992  009E                     	;# 
  1993  010C                     	;# 
  1994  010D                     	;# 
  1995  010E                     	;# 
  1996  010F                     	;# 
  1997  0110                     	;# 
  1998  0111                     	;# 
  1999  0112                     	;# 
  2000  0113                     	;# 
  2001  0114                     	;# 
  2002  0115                     	;# 
  2003  0116                     	;# 
  2004  0117                     	;# 
  2005  0118                     	;# 
  2006  0119                     	;# 
  2007  011A                     	;# 
  2008  011B                     	;# 
  2009  011D                     	;# 
  2010  011E                     	;# 
  2011  011F                     	;# 
  2012  018C                     	;# 
  2013  0190                     	;# 
  2014  0191                     	;# 
  2015  0191                     	;# 
  2016  0192                     	;# 
  2017  0193                     	;# 
  2018  0193                     	;# 
  2019  0193                     	;# 
  2020  0194                     	;# 
  2021  0195                     	;# 
  2022  0196                     	;# 
  2023  0199                     	;# 
  2024  0199                     	;# 
  2025  019A                     	;# 
  2026  019A                     	;# 
  2027  019B                     	;# 
  2028  019B                     	;# 
  2029  019B                     	;# 
  2030  019B                     	;# 
  2031  019C                     	;# 
  2032  019C                     	;# 
  2033  019D                     	;# 
  2034  019D                     	;# 
  2035  019E                     	;# 
  2036  019E                     	;# 
  2037  019F                     	;# 
  2038  019F                     	;# 
  2039  020D                     	;# 
  2040  0211                     	;# 
  2041  0211                     	;# 
  2042  0212                     	;# 
  2043  0212                     	;# 
  2044  0213                     	;# 
  2045  0213                     	;# 
  2046  0214                     	;# 
  2047  0214                     	;# 
  2048  0215                     	;# 
  2049  0215                     	;# 
  2050  0215                     	;# 
  2051  0216                     	;# 
  2052  0216                     	;# 
  2053  0217                     	;# 
  2054  0217                     	;# 
  2055  0219                     	;# 
  2056  021A                     	;# 
  2057  021B                     	;# 
  2058  021C                     	;# 
  2059  021D                     	;# 
  2060  021E                     	;# 
  2061  021F                     	;# 
  2062  028C                     	;# 
  2063  028D                     	;# 
  2064  0291                     	;# 
  2065  0291                     	;# 
  2066  0292                     	;# 
  2067  0293                     	;# 
  2068  0294                     	;# 
  2069  0295                     	;# 
  2070  0295                     	;# 
  2071  0296                     	;# 
  2072  0298                     	;# 
  2073  0298                     	;# 
  2074  0299                     	;# 
  2075  029A                     	;# 
  2076  029B                     	;# 
  2077  029C                     	;# 
  2078  029C                     	;# 
  2079  029D                     	;# 
  2080  029E                     	;# 
  2081  029F                     	;# 
  2082  030C                     	;# 
  2083  030D                     	;# 
  2084  0311                     	;# 
  2085  0311                     	;# 
  2086  0312                     	;# 
  2087  0313                     	;# 
  2088  0314                     	;# 
  2089  0315                     	;# 
  2090  0315                     	;# 
  2091  0316                     	;# 
  2092  0318                     	;# 
  2093  0318                     	;# 
  2094  0319                     	;# 
  2095  031A                     	;# 
  2096  031C                     	;# 
  2097  031C                     	;# 
  2098  031D                     	;# 
  2099  031E                     	;# 
  2100  038C                     	;# 
  2101  038D                     	;# 
  2102  0394                     	;# 
  2103  0395                     	;# 
  2104  0396                     	;# 
  2105  040C                     	;# 
  2106  040D                     	;# 
  2107  0415                     	;# 
  2108  0416                     	;# 
  2109  0417                     	;# 
  2110  041C                     	;# 
  2111  041D                     	;# 
  2112  041E                     	;# 
  2113  048D                     	;# 
  2114  0491                     	;# 
  2115  0492                     	;# 
  2116  0493                     	;# 
  2117  0493                     	;# 
  2118  0494                     	;# 
  2119  0495                     	;# 
  2120  0496                     	;# 
  2121  0497                     	;# 
  2122  0791                     	;# 
  2123  0792                     	;# 
  2124  0793                     	;# 
  2125  0794                     	;# 
  2126  0795                     	;# 
  2127  0798                     	;# 
  2128  0799                     	;# 
  2129  079A                     	;# 
  2130  079B                     	;# 
  2131  079C                     	;# 
  2132  079D                     	;# 
  2133  07A0                     	;# 
  2134  07A1                     	;# 
  2135  07A2                     	;# 
  2136  07A3                     	;# 
  2137  07A4                     	;# 
  2138  07A5                     	;# 
  2139  07A6                     	;# 
  2140  07A7                     	;# 
  2141  07A8                     	;# 
  2142  07A9                     	;# 
  2143  07AA                     	;# 
  2144  07AB                     	;# 
  2145  07AC                     	;# 
  2146  07AD                     	;# 
  2147  07AE                     	;# 
  2148  07AF                     	;# 
  2149  07B0                     	;# 
  2150  07B1                     	;# 
  2151  07B2                     	;# 
  2152  07B3                     	;# 
  2153  07B4                     	;# 
  2154  07B5                     	;# 
  2155  07B6                     	;# 
  2156  07B7                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168  0000                     	;# 
  2169  0001                     	;# 
  2170  0002                     	;# 
  2171  0003                     	;# 
  2172  0004                     	;# 
  2173  0005                     	;# 
  2174  0006                     	;# 
  2175  0007                     	;# 
  2176  0008                     	;# 
  2177  0009                     	;# 
  2178  000A                     	;# 
  2179  000B                     	;# 
  2180  000C                     	;# 
  2181  000D                     	;# 
  2182  000E                     	;# 
  2183  000F                     	;# 
  2184  0010                     	;# 
  2185  0011                     	;# 
  2186  0012                     	;# 
  2187  0013                     	;# 
  2188  0014                     	;# 
  2189  0015                     	;# 
  2190  0016                     	;# 
  2191  0016                     	;# 
  2192  0017                     	;# 
  2193  0018                     	;# 
  2194  0019                     	;# 
  2195  001A                     	;# 
  2196  001B                     	;# 
  2197  001C                     	;# 
  2198  001E                     	;# 
  2199  001F                     	;# 
  2200  008C                     	;# 
  2201  008D                     	;# 
  2202  008E                     	;# 
  2203  008F                     	;# 
  2204  0090                     	;# 
  2205  0091                     	;# 
  2206  0092                     	;# 
  2207  0093                     	;# 
  2208  0094                     	;# 
  2209  0095                     	;# 
  2210  0096                     	;# 
  2211  0097                     	;# 
  2212  0098                     	;# 
  2213  0099                     	;# 
  2214  009A                     	;# 
  2215  009B                     	;# 
  2216  009B                     	;# 
  2217  009C                     	;# 
  2218  009D                     	;# 
  2219  009E                     	;# 
  2220  010C                     	;# 
  2221  010D                     	;# 
  2222  010E                     	;# 
  2223  010F                     	;# 
  2224  0110                     	;# 
  2225  0111                     	;# 
  2226  0112                     	;# 
  2227  0113                     	;# 
  2228  0114                     	;# 
  2229  0115                     	;# 
  2230  0116                     	;# 
  2231  0117                     	;# 
  2232  0118                     	;# 
  2233  0119                     	;# 
  2234  011A                     	;# 
  2235  011B                     	;# 
  2236  011D                     	;# 
  2237  011E                     	;# 
  2238  011F                     	;# 
  2239  018C                     	;# 
  2240  0190                     	;# 
  2241  0191                     	;# 
  2242  0191                     	;# 
  2243  0192                     	;# 
  2244  0193                     	;# 
  2245  0193                     	;# 
  2246  0193                     	;# 
  2247  0194                     	;# 
  2248  0195                     	;# 
  2249  0196                     	;# 
  2250  0199                     	;# 
  2251  0199                     	;# 
  2252  019A                     	;# 
  2253  019A                     	;# 
  2254  019B                     	;# 
  2255  019B                     	;# 
  2256  019B                     	;# 
  2257  019B                     	;# 
  2258  019C                     	;# 
  2259  019C                     	;# 
  2260  019D                     	;# 
  2261  019D                     	;# 
  2262  019E                     	;# 
  2263  019E                     	;# 
  2264  019F                     	;# 
  2265  019F                     	;# 
  2266  020D                     	;# 
  2267  0211                     	;# 
  2268  0211                     	;# 
  2269  0212                     	;# 
  2270  0212                     	;# 
  2271  0213                     	;# 
  2272  0213                     	;# 
  2273  0214                     	;# 
  2274  0214                     	;# 
  2275  0215                     	;# 
  2276  0215                     	;# 
  2277  0215                     	;# 
  2278  0216                     	;# 
  2279  0216                     	;# 
  2280  0217                     	;# 
  2281  0217                     	;# 
  2282  0219                     	;# 
  2283  021A                     	;# 
  2284  021B                     	;# 
  2285  021C                     	;# 
  2286  021D                     	;# 
  2287  021E                     	;# 
  2288  021F                     	;# 
  2289  028C                     	;# 
  2290  028D                     	;# 
  2291  0291                     	;# 
  2292  0291                     	;# 
  2293  0292                     	;# 
  2294  0293                     	;# 
  2295  0294                     	;# 
  2296  0295                     	;# 
  2297  0295                     	;# 
  2298  0296                     	;# 
  2299  0298                     	;# 
  2300  0298                     	;# 
  2301  0299                     	;# 
  2302  029A                     	;# 
  2303  029B                     	;# 
  2304  029C                     	;# 
  2305  029C                     	;# 
  2306  029D                     	;# 
  2307  029E                     	;# 
  2308  029F                     	;# 
  2309  030C                     	;# 
  2310  030D                     	;# 
  2311  0311                     	;# 
  2312  0311                     	;# 
  2313  0312                     	;# 
  2314  0313                     	;# 
  2315  0314                     	;# 
  2316  0315                     	;# 
  2317  0315                     	;# 
  2318  0316                     	;# 
  2319  0318                     	;# 
  2320  0318                     	;# 
  2321  0319                     	;# 
  2322  031A                     	;# 
  2323  031C                     	;# 
  2324  031C                     	;# 
  2325  031D                     	;# 
  2326  031E                     	;# 
  2327  038C                     	;# 
  2328  038D                     	;# 
  2329  0394                     	;# 
  2330  0395                     	;# 
  2331  0396                     	;# 
  2332  040C                     	;# 
  2333  040D                     	;# 
  2334  0415                     	;# 
  2335  0416                     	;# 
  2336  0417                     	;# 
  2337  041C                     	;# 
  2338  041D                     	;# 
  2339  041E                     	;# 
  2340  048D                     	;# 
  2341  0491                     	;# 
  2342  0492                     	;# 
  2343  0493                     	;# 
  2344  0493                     	;# 
  2345  0494                     	;# 
  2346  0495                     	;# 
  2347  0496                     	;# 
  2348  0497                     	;# 
  2349  0791                     	;# 
  2350  0792                     	;# 
  2351  0793                     	;# 
  2352  0794                     	;# 
  2353  0795                     	;# 
  2354  0798                     	;# 
  2355  0799                     	;# 
  2356  079A                     	;# 
  2357  079B                     	;# 
  2358  079C                     	;# 
  2359  079D                     	;# 
  2360  07A0                     	;# 
  2361  07A1                     	;# 
  2362  07A2                     	;# 
  2363  07A3                     	;# 
  2364  07A4                     	;# 
  2365  07A5                     	;# 
  2366  07A6                     	;# 
  2367  07A7                     	;# 
  2368  07A8                     	;# 
  2369  07A9                     	;# 
  2370  07AA                     	;# 
  2371  07AB                     	;# 
  2372  07AC                     	;# 
  2373  07AD                     	;# 
  2374  07AE                     	;# 
  2375  07AF                     	;# 
  2376  07B0                     	;# 
  2377  07B1                     	;# 
  2378  07B2                     	;# 
  2379  07B3                     	;# 
  2380  07B4                     	;# 
  2381  07B5                     	;# 
  2382  07B6                     	;# 
  2383  07B7                     	;# 
  2384  0FE4                     	;# 
  2385  0FE5                     	;# 
  2386  0FE6                     	;# 
  2387  0FE7                     	;# 
  2388  0FE8                     	;# 
  2389  0FE9                     	;# 
  2390  0FEA                     	;# 
  2391  0FEB                     	;# 
  2392  0FED                     	;# 
  2393  0FEE                     	;# 
  2394  0FEF                     	;# 
  2395                           
  2396 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  2397  0000                     
  2398 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  2399  0000                     
  2400 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  2401  0000                     
  2402 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  2403  0000                     
  2404 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  2405  0000                     
  2406 ;; Function _rd1RegCompleteHandler@i2c1_master_example$F143 is unused but had its address taken
  2407  0000                     
  2408 ;; Function _rd2RegCompleteHandler@i2c1_master_example$F154 is unused but had its address taken
  2409  0000                     
  2410 ;; Function _wr1RegCompleteHandler@i2c1_master_example$F160 is unused but had its address taken
  2411  0000                     
  2412 ;; Function _wr2RegCompleteHandler@i2c1_master_example$F166 is unused but had its address taken
  2413  0000                     
  2414 ;; Function _rdBlkRegCompleteHandler@i2c1_master_example$F177 is unused but had its address taken
  2415  0000                     
  2416 ;; Function _rd1RegCompleteHandler@i2c2_master_example$F254 is unused but had its address taken
  2417  0000                     
  2418 ;; Function _rd2RegCompleteHandler@i2c2_master_example$F281 is unused but had its address taken
  2419  0000                     
  2420 ;; Function _wr1RegCompleteHandler@i2c2_master_example$F287 is unused but had its address taken
  2421  0000                     
  2422 ;; Function _wr2RegCompleteHandler@i2c2_master_example$F293 is unused but had its address taken
  2423  0000                     
  2424 ;; Function _rdBlkRegCompleteHandler@i2c2_master_example$F307 is unused but had its address taken
  2425  0000                     
  2426 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  2427  0000                     
  2428 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  2429  0000                     
  2430 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  2431  0000                     
  2432 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  2433  0000                     
  2434 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  2435  0000                     
  2436 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  2437  0000                     
  2438 ;; Function _I2C1_DO_TX is unused but had its address taken
  2439  0000                     
  2440 ;; Function _I2C1_DO_RX is unused but had its address taken
  2441  0000                     
  2442 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  2443  0000                     
  2444 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  2445  0000                     
  2446 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  2447  0000                     
  2448 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  2449  0000                     
  2450 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  2451  0000                     
  2452 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  2453  0000                     
  2454 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  2455  0000                     
  2456 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  2457  0000                     
  2458 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  2459  0000                     
  2460 ;; Function _I2C1_DO_RESET is unused but had its address taken
  2461  0000                     
  2462 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  2463  0000                     
  2464 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  2465  0000                     
  2466 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  2467  0000                     
  2468 ;; Function _I2C2_DO_IDLE is unused but had its address taken
  2469  0000                     
  2470 ;; Function _I2C2_DO_SEND_ADR_READ is unused but had its address taken
  2471  0000                     
  2472 ;; Function _I2C2_DO_SEND_ADR_WRITE is unused but had its address taken
  2473  0000                     
  2474 ;; Function _I2C2_DO_TX is unused but had its address taken
  2475  0000                     
  2476 ;; Function _I2C2_DO_RX is unused but had its address taken
  2477  0000                     
  2478 ;; Function _I2C2_DO_RCEN is unused but had its address taken
  2479  0000                     
  2480 ;; Function _I2C2_DO_TX_EMPTY is unused but had its address taken
  2481  0000                     
  2482 ;; Function _I2C2_DO_SEND_RESTART_READ is unused but had its address taken
  2483  0000                     
  2484 ;; Function _I2C2_DO_SEND_RESTART_WRITE is unused but had its address taken
  2485  0000                     
  2486 ;; Function _I2C2_DO_SEND_RESTART is unused but had its address taken
  2487  0000                     
  2488 ;; Function _I2C2_DO_SEND_STOP is unused but had its address taken
  2489  0000                     
  2490 ;; Function _I2C2_DO_RX_ACK is unused but had its address taken
  2491  0000                     
  2492 ;; Function _I2C2_DO_RX_NACK_STOP is unused but had its address taken
  2493  0000                     
  2494 ;; Function _I2C2_DO_RX_NACK_RESTART is unused but had its address taken
  2495  0000                     
  2496 ;; Function _I2C2_DO_RESET is unused but had its address taken
  2497  0000                     
  2498 ;; Function _I2C2_DO_ADDRESS_NACK is unused but had its address taken
  2499  0000                     
  2500 ;; Function _I2C2_CallbackReturnStop is unused but had its address taken
  2501  0000                     
  2502 ;; Function _I2C2_CallbackReturnReset is unused but had its address taken
  2503  0000                     
  2504 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
  2505  0000                     
  2506 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
  2507  0000                     
  2508 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
  2509  0000                     
  2510                           	psect	idataBANK0
  2511  0002                     __pidataBANK0:
  2512                           
  2513                           ;initializer for _t_dp
  2514  0002  34E8               	retlw	232
  2515  0003  3403               	retlw	3
  2516                           
  2517                           	psect	idataBANK2
  2518  25E5                     __pidataBANK2:
  2519                           
  2520                           ;initializer for _t_right
  2521  25E5  34E8               	retlw	232
  2522  25E6  3403               	retlw	3
  2523                           
  2524                           ;initializer for _t_left
  2525  25E7  34E8               	retlw	232
  2526  25E8  3403               	retlw	3
  2527                           
  2528                           ;initializer for _in_ramp
  2529  25E9  3401               	retlw	1
  2530                           
  2531                           	psect	idataBANK4
  2532  25DC                     __pidataBANK4:
  2533                           
  2534                           ;initializer for _velocity_TL
  2535  25DC  3400               	retlw	0
  2536  25DD  3400               	retlw	0
  2537  25DE  34F0               	retlw	240
  2538  25DF  3441               	retlw	65
  2539                           
  2540                           	psect	stringtext1
  2541  2800                     __pstringtext1:
  2542  2800                     _i2c2_fsmStateTable:
  2543  2800  3400               	retlw	0
  2544  2801  3400               	retlw	0
  2545  2802  3400               	retlw	0
  2546  2803  3400               	retlw	0
  2547  2804  3400               	retlw	0
  2548  2805  3400               	retlw	0
  2549  2806  3400               	retlw	0
  2550  2807  3400               	retlw	0
  2551  2808  3400               	retlw	0
  2552  2809  3400               	retlw	0
  2553  280A  3400               	retlw	0
  2554  280B  3400               	retlw	0
  2555  280C  3400               	retlw	0
  2556  280D  3400               	retlw	0
  2557  280E  3400               	retlw	0
  2558  280F  3400               	retlw	0
  2559  2810  3400               	retlw	0
  2560  2811  3400               	retlw	0
  2561  2812  3400               	retlw	0
  2562  2813  3400               	retlw	0
  2563  2814  3400               	retlw	0
  2564  2815  3400               	retlw	0
  2565  2816  3400               	retlw	0
  2566  2817  3400               	retlw	0
  2567  2818  3400               	retlw	0
  2568  2819  3400               	retlw	0
  2569  281A  3400               	retlw	0
  2570  281B  3400               	retlw	0
  2571  281C  3400               	retlw	0
  2572  281D  3400               	retlw	0
  2573  281E  3400               	retlw	0
  2574  281F  3400               	retlw	0
  2575  2820                     __end_of_i2c2_fsmStateTable:
  2576                           
  2577                           	psect	stringtext2
  2578  2820                     __pstringtext2:
  2579  2820                     _i2c1_fsmStateTable:
  2580  2820  3400               	retlw	0
  2581  2821  3400               	retlw	0
  2582  2822  3400               	retlw	0
  2583  2823  3400               	retlw	0
  2584  2824  3400               	retlw	0
  2585  2825  3400               	retlw	0
  2586  2826  3400               	retlw	0
  2587  2827  3400               	retlw	0
  2588  2828  3400               	retlw	0
  2589  2829  3400               	retlw	0
  2590  282A  3400               	retlw	0
  2591  282B  3400               	retlw	0
  2592  282C  3400               	retlw	0
  2593  282D  3400               	retlw	0
  2594  282E  3400               	retlw	0
  2595  282F  3400               	retlw	0
  2596  2830  3400               	retlw	0
  2597  2831  3400               	retlw	0
  2598  2832  3400               	retlw	0
  2599  2833  3400               	retlw	0
  2600  2834  3400               	retlw	0
  2601  2835  3400               	retlw	0
  2602  2836  3400               	retlw	0
  2603  2837  3400               	retlw	0
  2604  2838  3400               	retlw	0
  2605  2839  3400               	retlw	0
  2606  283A  3400               	retlw	0
  2607  283B  3400               	retlw	0
  2608  283C  3400               	retlw	0
  2609  283D  3400               	retlw	0
  2610  283E  3400               	retlw	0
  2611  283F  3400               	retlw	0
  2612  2840                     __end_of_i2c1_fsmStateTable:
  2613                           
  2614                           	psect	nvBANK2
  2615  016B                     __pnvBANK2:
  2616  016B                     _timer1ReloadVal:
  2617  016B                     	ds	2
  2618                           
  2619                           	psect	nvBANK3
  2620  01EE                     __pnvBANK3:
  2621  01EE                     _TMR1_InterruptHandler:
  2622  01EE                     	ds	2
  2623                           
  2624                           	psect	nvBANK4
  2625  026E                     __pnvBANK4:
  2626  026E                     _EUSART1_FramingErrorHandler:
  2627  026E                     	ds	2
  2628                           
  2629                           	psect	nvBANK5
  2630  02DA                     __pnvBANK5:
  2631  02DA                     _EUSART2_ErrorHandler:
  2632  02DA                     	ds	2
  2633  02DC                     _EUSART2_OverrunErrorHandler:
  2634  02DC                     	ds	2
  2635  02DE                     _EUSART2_FramingErrorHandler:
  2636  02DE                     	ds	2
  2637  02E0                     _EUSART1_ErrorHandler:
  2638  02E0                     	ds	2
  2639  02E2                     _EUSART1_OverrunErrorHandler:
  2640  02E2                     	ds	2
  2641  0014                     _PIR4bits	set	20
  2642  0012                     _PIR2bits	set	18
  2643  000B                     _INTCONbits	set	11
  2644  0019                     _T1GCONbits	set	25
  2645  0018                     _T1CONbits	set	24
  2646  0018                     _T1CON	set	24
  2647  0011                     _PIR1bits	set	17
  2648  0016                     _TMR1L	set	22
  2649  0017                     _TMR1H	set	23
  2650  0019                     _T1GCON	set	25
  2651  0094                     _PIE4bits	set	148
  2652  0091                     _PIE1bits	set	145
  2653  0097                     _WDTCON	set	151
  2654  0098                     _OSCTUNE	set	152
  2655  0099                     _OSCCON	set	153
  2656  0095                     _OPTION_REGbits	set	149
  2657  008F                     _TRISD	set	143
  2658  008E                     _TRISC	set	142
  2659  008D                     _TRISB	set	141
  2660  008C                     _TRISA	set	140
  2661  0090                     _TRISE	set	144
  2662  010E                     _LATCbits	set	270
  2663  010D                     _LATBbits	set	269
  2664  0116                     _BORCON	set	278
  2665  011D                     _APFCON	set	285
  2666  010E                     _LATC	set	270
  2667  010D                     _LATB	set	269
  2668  010C                     _LATA	set	268
  2669  010F                     _LATD	set	271
  2670  0110                     _LATE	set	272
  2671  019A                     _TX1REG	set	410
  2672  0199                     _RC1REG	set	409
  2673  019D                     _RC1STAbits	set	413
  2674  019E                     _TX1STAbits	set	414
  2675  019C                     _SP1BRGH	set	412
  2676  019B                     _SP1BRGL	set	411
  2677  019E                     _TX1STA	set	414
  2678  019D                     _RC1STA	set	413
  2679  019F                     _BAUD1CON	set	415
  2680  018C                     _ANSELA	set	396
  2681  0190                     _ANSELE	set	400
  2682  021C                     _SSP2STATbits	set	540
  2683  021E                     _SSP2CON2bits	set	542
  2684  0219                     _SSP2BUF	set	537
  2685  021D                     _SSP2CON1bits	set	541
  2686  021A                     _SSP2ADD	set	538
  2687  021E                     _SSP2CON2	set	542
  2688  021D                     _SSP2CON1	set	541
  2689  021C                     _SSP2STAT	set	540
  2690  0214                     _SSP1STATbits	set	532
  2691  0216                     _SSP1CON2bits	set	534
  2692  0211                     _SSP1BUF	set	529
  2693  0215                     _SSP1CON1bits	set	533
  2694  0212                     _SSP1ADD	set	530
  2695  0216                     _SSP1CON2	set	534
  2696  0215                     _SSP1CON1	set	533
  2697  0214                     _SSP1STAT	set	532
  2698  020D                     _WPUB	set	525
  2699  030D                     _TRISG	set	781
  2700  030C                     _TRISF	set	780
  2701  038C                     _LATFbits	set	908
  2702  038D                     _LATG	set	909
  2703  038C                     _LATF	set	908
  2704  040C                     _ANSELF	set	1036
  2705  040D                     _ANSELG	set	1037
  2706  0492                     _TX2REG	set	1170
  2707  0491                     _RC2REG	set	1169
  2708  0495                     _RC2STAbits	set	1173
  2709  0496                     _TX2STAbits	set	1174
  2710  0494                     _SP2BRGH	set	1172
  2711  0493                     _SP2BRGL	set	1171
  2712  0496                     _TX2STA	set	1174
  2713  0495                     _RC2STA	set	1173
  2714  0497                     _BAUD2CON	set	1175
  2715  048D                     _WPUG	set	1165
  2716                           
  2717                           	psect	stringtext3
  2718  2840                     __pstringtext3:
  2719  2840                     STR_1:
  2720  2840  3425               	retlw	37	;'%'
  2721  2841  3466               	retlw	102	;'f'
  2722  2842  3420               	retlw	32	;' '
  2723  2843  340A               	retlw	10
  2724  2844  3400               	retlw	0
  2725                           
  2726                           	psect	stringtext4
  2727  0000                     __pstringtext4:
  2728                           
  2729                           	psect	cinit
  2730  001B                     start_initialization:	
  2731                           ; #config settings
  2732                           
  2733  001B                     __initialization:
  2734                           
  2735                           ; Initialize objects allocated to BANK0
  2736  001B  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  2737  001E  00E0               	movwf	__pdataBANK0& (0+127)
  2738  001F  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  2739  0022  00E1               	movwf	(__pdataBANK0+1)& (0+127)
  2740                           
  2741                           ; Initialize objects allocated to BANK2
  2742  0023  30E5               	movlw	low __pidataBANK2
  2743  0024  0084               	movwf	4
  2744  0025  30A5               	movlw	(high __pidataBANK2)| (0+128)
  2745  0026  0085               	movwf	5
  2746  0027  3066               	movlw	low __pdataBANK2
  2747  0028  0086               	movwf	6
  2748  0029  3001               	movlw	high __pdataBANK2
  2749  002A  0087               	movwf	7
  2750  002B  3005               	movlw	5
  2751  002C  31A5  25F0  3180   	fcall	init_ram
  2752                           
  2753                           ; Initialize objects allocated to BANK4
  2754  002F  30DC               	movlw	low __pidataBANK4
  2755  0030  0084               	movwf	4
  2756  0031  30A5               	movlw	(high __pidataBANK4)| (0+128)
  2757  0032  0085               	movwf	5
  2758  0033  306A               	movlw	low __pdataBANK4
  2759  0034  0086               	movwf	6
  2760  0035  3002               	movlw	high __pdataBANK4
  2761  0036  0087               	movwf	7
  2762  0037  3004               	movlw	4
  2763  0038  31A5  25F0  3180   	fcall	init_ram
  2764                           
  2765                           ; Clear objects allocated to BANK0
  2766  003B  3054               	movlw	low __pbssBANK0
  2767  003C  0084               	movwf	4
  2768  003D  3000               	movlw	high __pbssBANK0
  2769  003E  0085               	movwf	5
  2770  003F  300C               	movlw	12
  2771  0040  31A5  25EA  3180   	fcall	clear_ram0
  2772                           
  2773                           ; Clear objects allocated to BANK1
  2774  0043  0021               	movlb	1	; select bank1
  2775  0044  01EF               	clrf	__pbssBANK1& (0+127)
  2776                           
  2777                           ; Clear objects allocated to BANK2
  2778  0045  3044               	movlw	low __pbssBANK2
  2779  0046  0084               	movwf	4
  2780  0047  3001               	movlw	high __pbssBANK2
  2781  0048  0085               	movwf	5
  2782  0049  3022               	movlw	34
  2783  004A  31A5  25EA  3180   	fcall	clear_ram0
  2784                           
  2785                           ; Clear objects allocated to BANK3
  2786  004D  30A0               	movlw	low __pbssBANK3
  2787  004E  0084               	movwf	4
  2788  004F  3001               	movlw	high __pbssBANK3
  2789  0050  0085               	movwf	5
  2790  0051  304E               	movlw	78
  2791  0052  31A5  25EA  3180   	fcall	clear_ram0
  2792                           
  2793                           ; Clear objects allocated to BANK4
  2794  0055  3020               	movlw	low __pbssBANK4
  2795  0056  0084               	movwf	4
  2796  0057  3002               	movlw	high __pbssBANK4
  2797  0058  0085               	movwf	5
  2798  0059  304A               	movlw	74
  2799  005A  31A5  25EA  3180   	fcall	clear_ram0
  2800                           
  2801                           ; Clear objects allocated to BANK5
  2802  005D  30A0               	movlw	low __pbssBANK5
  2803  005E  0084               	movwf	4
  2804  005F  3002               	movlw	high __pbssBANK5
  2805  0060  0085               	movwf	5
  2806  0061  303A               	movlw	58
  2807  0062  31A5  25EA  3180   	fcall	clear_ram0
  2808  0065                     end_of_initialization:	
  2809                           ;End of C runtime variable initialization code
  2810                           
  2811  0065                     __end_of__initialization:
  2812  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2813  0066  0020               	movlb	0
  2814  0067  31A7  2F82         	ljmp	_main	;jump to C main() function
  2815                           
  2816                           	psect	bssBANK0
  2817  0054                     __pbssBANK0:
  2818  0054                     _totalTime:
  2819  0054                     	ds	2
  2820  0056                     _cntACircle:
  2821  0056                     	ds	1
  2822  0057                     _flagACircle:
  2823  0057                     	ds	1
  2824  0058                     _cntALine:
  2825  0058                     	ds	1
  2826  0059                     _flag_stop:
  2827  0059                     	ds	1
  2828  005A                     _errorOmega:
  2829  005A                     	ds	4
  2830  005E                     _direct_ALine:
  2831  005E                     	ds	2
  2832                           
  2833                           	psect	dataBANK0
  2834  0060                     __pdataBANK0:
  2835  0060                     _t_dp:
  2836  0060                     	ds	2
  2837                           
  2838                           	psect	bssBANK1
  2839  00EF                     __pbssBANK1:
  2840  00EF                     _flagALine:
  2841  00EF                     	ds	1
  2842                           
  2843                           	psect	bssBANK2
  2844  0144                     __pbssBANK2:
  2845  0144                     _velocity_sys:
  2846  0144                     	ds	4
  2847  0148                     _velACircle:
  2848  0148                     	ds	4
  2849  014C                     _timeALine:
  2850  014C                     	ds	4
  2851  0150                     _velManual:
  2852  0150                     	ds	4
  2853  0154                     _errorOmega_sum:
  2854  0154                     	ds	4
  2855  0158                     _cntManual:
  2856  0158                     	ds	2
  2857  015A                     _cntTime:
  2858  015A                     	ds	2
  2859  015C                     _cnt_sys:
  2860  015C                     	ds	1
  2861  015D                     _flagCamera:
  2862  015D                     	ds	1
  2863  015E                     _cntCamera:
  2864  015E                     	ds	1
  2865  015F                     _flagManual:
  2866  015F                     	ds	1
  2867  0160                     _shift_one:
  2868  0160                     	ds	1
  2869  0161                     _shift:
  2870  0161                     	ds	1
  2871  0162                     _eusart2RxLastError:
  2872  0162                     	ds	1
  2873  0163                     _eusart1RxLastError:
  2874  0163                     	ds	1
  2875  0164                     _sum_frame:
  2876  0164                     	ds	2
  2877                           
  2878                           	psect	dataBANK2
  2879  0166                     __pdataBANK2:
  2880  0166                     _t_right:
  2881  0166                     	ds	2
  2882  0168                     _t_left:
  2883  0168                     	ds	2
  2884  016A                     _in_ramp:
  2885  016A                     	ds	1
  2886                           
  2887                           	psect	bssBANK3
  2888  01A0                     __pbssBANK3:
  2889  01A0                     _time_move:
  2890  01A0                     	ds	4
  2891  01A4                     _angle_move:
  2892  01A4                     	ds	4
  2893  01A8                     _valTime_TL:
  2894  01A8                     	ds	4
  2895  01AC                     _valVLength_TL:
  2896  01AC                     	ds	4
  2897  01B0                     _timeACircle:
  2898  01B0                     	ds	4
  2899  01B4                     _omegaACircle:
  2900  01B4                     	ds	4
  2901  01B8                     _omegaALine:
  2902  01B8                     	ds	4
  2903  01BC                     _velALine:
  2904  01BC                     	ds	4
  2905  01C0                     _omegaManual:
  2906  01C0                     	ds	4
  2907  01C4                     _velManual_t:
  2908  01C4                     	ds	4
  2909  01C8                     _PID_Omega:
  2910  01C8                     	ds	4
  2911  01CC                     _errorOmega_pre:
  2912  01CC                     	ds	4
  2913  01D0                     _DistanceValueBottom:
  2914  01D0                     	ds	4
  2915  01D4                     _DistanceValueTop:
  2916  01D4                     	ds	4
  2917  01D8                     _cnt_frame:
  2918  01D8                     	ds	2
  2919  01DA                     _delay_frame:
  2920  01DA                     	ds	2
  2921  01DC                     _angle_ACircle:
  2922  01DC                     	ds	2
  2923  01DE                     _length_ALine:
  2924  01DE                     	ds	2
  2925  01E0                     _cntDp:
  2926  01E0                     	ds	2
  2927  01E2                     _cntRight:
  2928  01E2                     	ds	2
  2929  01E4                     _cntLeft:
  2930  01E4                     	ds	2
  2931  01E6                     _valRadius_TL:
  2932  01E6                     	ds	4
  2933  01EA                     _valRadius_AC:
  2934  01EA                     	ds	4
  2935                           
  2936                           	psect	bssBANK4
  2937  0220                     __pbssBANK4:
  2938  0220                     _I2C2_Status:
  2939  0220                     	ds	29
  2940  023D                     _I2C1_Status:
  2941  023D                     	ds	29
  2942  025A                     _distance_raw:
  2943  025A                     	ds	8
  2944  0262                     _omega_sys:
  2945  0262                     	ds	4
  2946  0266                     _omega_TL:
  2947  0266                     	ds	4
  2948                           
  2949                           	psect	dataBANK4
  2950  026A                     __pdataBANK4:
  2951  026A                     _velocity_TL:
  2952  026A                     	ds	4
  2953                           
  2954                           	psect	bssBANK5
  2955  02A0                     __pbssBANK5:
  2956  02A0                     _distance_raw_one:
  2957  02A0                     	ds	8
  2958  02A8                     _buffer_sys:
  2959  02A8                     	ds	50
  2960                           
  2961                           	psect	inittext
  2962  25F0                     init_ram:
  2963  25F0  00FE               	movwf	btemp
  2964  25F1                     initloop:
  2965  25F1  0012               	moviw fsr0++
  2966  25F2  001E               	movwi fsr1++
  2967  25F3  0BFE               	decfsz	btemp,f
  2968  25F4  2DF1               	goto	initloop
  2969  25F5  3400               	retlw	0
  2970                           
  2971                           	psect	clrtext
  2972  25EA                     clear_ram0:	
  2973                           ;	Called with FSR0 containing the base address, and
  2974                           ;	WREG with the size to clear
  2975                           
  2976  25EA  0064               	clrwdt	;clear the watchdog before getting into this loop
  2977  25EB                     clrloop0:
  2978  25EB  0180               	clrf	0	;clear RAM location pointed to by FSR
  2979  25EC  3101               	addfsr 0,1
  2980  25ED  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2981  25EE  2DEB               	goto	clrloop0	;have we reached the end yet?
  2982  25EF  3400               	retlw	0	;all done for this memory range, return
  2983                           
  2984                           	psect	cstackBANK6
  2985  0320                     __pcstackBANK6:
  2986  0320                     _AutoCircleControl$3324:
  2987  0320                     TimeLapseHandle@bufferCamera_t:	
  2988                           ; 4 bytes @ 0x0
  2989                           
  2990                           
  2991                           ; 20 bytes @ 0x0
  2992  0320                     	ds	4
  2993  0324                     _AutoCircleControl$3325:
  2994                           
  2995                           ; 4 bytes @ 0x4
  2996  0324                     	ds	16
  2997  0334                     _TimeLapseHandle$3328:
  2998                           
  2999                           ; 4 bytes @ 0x14
  3000  0334                     	ds	4
  3001  0338                     _TimeLapseHandle$3327:
  3002                           
  3003                           ; 4 bytes @ 0x18
  3004  0338                     	ds	4
  3005  033C                     TimeLapseHandle@j:
  3006                           
  3007                           ; 2 bytes @ 0x1C
  3008  033C                     	ds	2
  3009  033E                     TimeLapseHandle@j_2381:
  3010                           
  3011                           ; 2 bytes @ 0x1E
  3012  033E                     	ds	2
  3013  0340                     TimeLapseHandle@j_2382:
  3014                           
  3015                           ; 2 bytes @ 0x20
  3016  0340                     	ds	2
  3017  0342                     TimeLapseHandle@j_2383:
  3018                           
  3019                           ; 2 bytes @ 0x22
  3020  0342                     	ds	2
  3021  0344                     TimeLapseHandle@i:
  3022                           
  3023                           ; 2 bytes @ 0x24
  3024  0344                     	ds	2
  3025                           
  3026                           	psect	cstackBANK5
  3027  02E4                     __pcstackBANK5:
  3028  02E4                     ramp_step_function@omega_ramp:
  3029                           
  3030                           ; 4 bytes @ 0x0
  3031  02E4                     	ds	4
  3032  02E8                     ramp_step_function@i:
  3033                           
  3034                           ; 2 bytes @ 0x4
  3035  02E8                     	ds	2
  3036  02EA                     ramp_step_function@velocity_ramp:
  3037                           
  3038                           ; 4 bytes @ 0x6
  3039  02EA                     	ds	4
  3040                           
  3041                           	psect	cstackBANK2
  3042  0120                     __pcstackBANK2:
  3043  0120                     ??___fltol:
  3044  0120                     ?___flsub:	
  3045                           ; 1 bytes @ 0x0
  3046                           
  3047  0120                     ___flsub@a:	
  3048                           ; 4 bytes @ 0x0
  3049                           
  3050                           
  3051                           ; 4 bytes @ 0x0
  3052  0120                     	ds	4
  3053  0124                     ___flsub@b:
  3054                           
  3055                           ; 4 bytes @ 0x4
  3056  0124                     	ds	4
  3057  0128                     ?_KE:
  3058  0128                     KE@Omega_body:	
  3059                           ; 1 bytes @ 0x8
  3060                           
  3061                           
  3062                           ; 4 bytes @ 0x8
  3063  0128                     	ds	4
  3064  012C                     KE@Velocity_body:
  3065                           
  3066                           ; 4 bytes @ 0xC
  3067  012C                     	ds	4
  3068  0130                     KE@OmegaLeft:
  3069                           
  3070                           ; 4 bytes @ 0x10
  3071  0130                     	ds	4
  3072  0134                     KE@OmegaRight:
  3073                           
  3074                           ; 4 bytes @ 0x14
  3075  0134                     	ds	4
  3076  0138                     ?_ramp_step_function:
  3077  0138                     ramp_step_function@velocity:	
  3078                           ; 1 bytes @ 0x18
  3079                           
  3080  0138                     _AutoLineControl$3326:	
  3081                           ; 4 bytes @ 0x18
  3082                           
  3083                           
  3084                           ; 4 bytes @ 0x18
  3085  0138                     	ds	4
  3086  013C                     ramp_step_function@radius:
  3087                           
  3088                           ; 4 bytes @ 0x1C
  3089  013C                     	ds	4
  3090  0140                     ramp_step_function@total_time:
  3091                           
  3092                           ; 4 bytes @ 0x20
  3093  0140                     	ds	4
  3094                           
  3095                           	psect	cstackBANK1
  3096  00A0                     __pcstackBANK1:
  3097  00A0                     ?___fleq:
  3098  00A0                     ?___flmul:	
  3099                           ; 1 bit 
  3100                           
  3101  00A0                     ___fleq@ff1:	
  3102                           ; 4 bytes @ 0x0
  3103                           
  3104  00A0                     ___flmul@b:	
  3105                           ; 4 bytes @ 0x0
  3106                           
  3107  00A0                     ManualHandle@bufferManual_t:	
  3108                           ; 4 bytes @ 0x0
  3109                           
  3110  00A0                     AutoCircleHandle@bufferACircle_t:	
  3111                           ; 20 bytes @ 0x0
  3112                           
  3113  00A0                     AutoLineHandle@bufferALine_t:	
  3114                           ; 20 bytes @ 0x0
  3115                           
  3116                           
  3117                           ; 20 bytes @ 0x0
  3118  00A0                     	ds	4
  3119  00A4                     ___fleq@ff2:
  3120  00A4                     ___flmul@a:	
  3121                           ; 4 bytes @ 0x4
  3122                           
  3123                           
  3124                           ; 4 bytes @ 0x4
  3125  00A4                     	ds	4
  3126  00A8                     ??___fleq:
  3127  00A8                     ??___flmul:	
  3128                           ; 1 bytes @ 0x8
  3129                           
  3130                           
  3131                           ; 1 bytes @ 0x8
  3132  00A8                     	ds	5
  3133  00AD                     ___flmul@sign:
  3134                           
  3135                           ; 1 bytes @ 0xD
  3136  00AD                     	ds	1
  3137  00AE                     ___flmul@aexp:
  3138                           
  3139                           ; 1 bytes @ 0xE
  3140  00AE                     	ds	1
  3141  00AF                     ___flmul@grs:
  3142                           
  3143                           ; 4 bytes @ 0xF
  3144  00AF                     	ds	4
  3145  00B3                     ___flmul@bexp:
  3146                           
  3147                           ; 1 bytes @ 0x13
  3148  00B3                     	ds	1
  3149  00B4                     ManualHandle@j:
  3150  00B4                     AutoCircleHandle@j:	
  3151                           ; 2 bytes @ 0x14
  3152                           
  3153  00B4                     AutoLineHandle@j:	
  3154                           ; 2 bytes @ 0x14
  3155                           
  3156  00B4                     ___flmul@prod:	
  3157                           ; 2 bytes @ 0x14
  3158                           
  3159                           
  3160                           ; 4 bytes @ 0x14
  3161  00B4                     	ds	2
  3162  00B6                     ManualHandle@j_2358:
  3163  00B6                     AutoCircleHandle@j_2365:	
  3164                           ; 2 bytes @ 0x16
  3165                           
  3166  00B6                     AutoLineHandle@j_2373:	
  3167                           ; 2 bytes @ 0x16
  3168                           
  3169                           
  3170                           ; 2 bytes @ 0x16
  3171  00B6                     	ds	2
  3172  00B8                     ManualHandle@i:
  3173  00B8                     AutoCircleHandle@j_2366:	
  3174                           ; 2 bytes @ 0x18
  3175                           
  3176  00B8                     AutoLineHandle@j_2374:	
  3177                           ; 2 bytes @ 0x18
  3178                           
  3179  00B8                     ___flmul@temp:	
  3180                           ; 2 bytes @ 0x18
  3181                           
  3182                           
  3183                           ; 2 bytes @ 0x18
  3184  00B8                     	ds	2
  3185  00BA                     ?___flge:
  3186  00BA                     ?___fldiv:	
  3187                           ; 1 bit 
  3188                           
  3189  00BA                     AutoCircleHandle@j_2367:	
  3190                           ; 4 bytes @ 0x1A
  3191                           
  3192  00BA                     AutoLineHandle@j_2375:	
  3193                           ; 2 bytes @ 0x1A
  3194                           
  3195  00BA                     ___flge@ff1:	
  3196                           ; 2 bytes @ 0x1A
  3197                           
  3198  00BA                     ___fldiv@a:	
  3199                           ; 4 bytes @ 0x1A
  3200                           
  3201                           
  3202                           ; 4 bytes @ 0x1A
  3203  00BA                     	ds	2
  3204  00BC                     AutoCircleHandle@i:
  3205  00BC                     AutoLineHandle@i:	
  3206                           ; 2 bytes @ 0x1C
  3207                           
  3208                           
  3209                           ; 2 bytes @ 0x1C
  3210  00BC                     	ds	2
  3211  00BE                     ___flge@ff2:
  3212  00BE                     ___fldiv@b:	
  3213                           ; 4 bytes @ 0x1E
  3214                           
  3215                           
  3216                           ; 4 bytes @ 0x1E
  3217  00BE                     	ds	4
  3218  00C2                     ??___flge:
  3219  00C2                     ??___fldiv:	
  3220                           ; 1 bytes @ 0x22
  3221                           
  3222                           
  3223                           ; 1 bytes @ 0x22
  3224  00C2                     	ds	5
  3225  00C7                     ___fldiv@rem:
  3226                           
  3227                           ; 4 bytes @ 0x27
  3228  00C7                     	ds	4
  3229  00CB                     ___fldiv@sign:
  3230                           
  3231                           ; 1 bytes @ 0x2B
  3232  00CB                     	ds	1
  3233  00CC                     ___fldiv@new_exp:
  3234                           
  3235                           ; 2 bytes @ 0x2C
  3236  00CC                     	ds	2
  3237  00CE                     ___fldiv@grs:
  3238                           
  3239                           ; 4 bytes @ 0x2E
  3240  00CE                     	ds	4
  3241  00D2                     ___fldiv@bexp:
  3242                           
  3243                           ; 1 bytes @ 0x32
  3244  00D2                     	ds	1
  3245  00D3                     ___fldiv@aexp:
  3246                           
  3247                           ; 1 bytes @ 0x33
  3248  00D3                     	ds	1
  3249  00D4                     ?___fladd:
  3250  00D4                     ___fladd@b:	
  3251                           ; 4 bytes @ 0x34
  3252                           
  3253                           
  3254                           ; 4 bytes @ 0x34
  3255  00D4                     	ds	4
  3256  00D8                     ___fladd@a:
  3257                           
  3258                           ; 4 bytes @ 0x38
  3259  00D8                     	ds	4
  3260  00DC                     ??___fladd:
  3261                           
  3262                           ; 1 bytes @ 0x3C
  3263  00DC                     	ds	8
  3264  00E4                     ___fladd@signs:
  3265                           
  3266                           ; 1 bytes @ 0x44
  3267  00E4                     	ds	1
  3268  00E5                     ___fladd@aexp:
  3269                           
  3270                           ; 1 bytes @ 0x45
  3271  00E5                     	ds	1
  3272  00E6                     ___fladd@bexp:
  3273                           
  3274                           ; 1 bytes @ 0x46
  3275  00E6                     	ds	1
  3276  00E7                     ___fladd@grs:
  3277                           
  3278                           ; 1 bytes @ 0x47
  3279  00E7                     	ds	1
  3280  00E8                     ?___fltol:
  3281  00E8                     ___fltol@f1:	
  3282                           ; 4 bytes @ 0x48
  3283                           
  3284                           
  3285                           ; 4 bytes @ 0x48
  3286  00E8                     	ds	4
  3287  00EC                     ??_KE:
  3288  00EC                     TimeLapseControl@i:	
  3289                           ; 1 bytes @ 0x4C
  3290                           
  3291                           
  3292                           ; 2 bytes @ 0x4C
  3293  00EC                     	ds	2
  3294  00EE                     ??_main:
  3295                           
  3296                           ; 1 bytes @ 0x4E
  3297  00EE                     	ds	1
  3298                           
  3299                           	psect	cstackCOMMON
  3300  0070                     __pcstackCOMMON:
  3301  0070                     ?_I2C1_Initialize:
  3302  0070                     ?_I2C2_Initialize:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0070                     ?_OSCILLATOR_Initialize:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0070                     ?_WDT_Initialize:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0070                     ?_TMR1_Initialize:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0070                     ?_EUSART1_Initialize:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0070                     ?_EUSART2_Initialize:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0070                     ?_TMR1_DefaultInterruptHandler:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0070                     ??_TMR1_DefaultInterruptHandler:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0070                     ?_TMR1_CallBack:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0070                     ?_PIN_MANAGER_Initialize:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0070                     ?_SYSTEM_Initialize:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0070                     ?_TMR1_WriteTimer:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338  0070                     ?_TMR1_ISR:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341  0070                     ?_INTERRUPT_InterruptManager:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344  0070                     ?_EUSART1_is_rx_ready:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347  0070                     ?_EUSART1_Read:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0070                     ?_EUSART1_Write:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0070                     ?_EUSART2_Write:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356  0070                     ?_T1_ROBOT_ISR:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359  0070                     ?_SetUpModeHalf_step:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362  0070                     ?_ManualHandle:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365  0070                     ?_ManualControl:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0070                     ?_AutoCircleHandle:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0070                     ?_AutoCircleControl:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374  0070                     ?_AutoLineHandle:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377  0070                     ?_AutoLineControl:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380  0070                     ?_TimeLapseHandle:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383  0070                     ?_TimeLapseControl:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386  0070                     ?_main:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389  0070                     ?i1___xxtofl:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0070                     TMR1_WriteTimer@timerVal:	
  3393                           ; 4 bytes @ 0x0
  3394                           
  3395  0070                     i1___xxtofl@val:	
  3396                           ; 2 bytes @ 0x0
  3397                           
  3398                           
  3399                           ; 4 bytes @ 0x0
  3400  0070                     	ds	2
  3401  0072                     ??_TMR1_WriteTimer:
  3402                           
  3403                           ; 1 bytes @ 0x2
  3404  0072                     	ds	2
  3405  0074                     ??i1___xxtofl:
  3406                           
  3407                           ; 1 bytes @ 0x4
  3408  0074                     	ds	4
  3409  0078                     i1___xxtofl@sign:
  3410                           
  3411                           ; 1 bytes @ 0x8
  3412  0078                     	ds	1
  3413  0079                     i1___xxtofl@exp:
  3414                           
  3415                           ; 1 bytes @ 0x9
  3416  0079                     	ds	1
  3417  007A                     i1___xxtofl@arg:
  3418                           
  3419                           ; 4 bytes @ 0xA
  3420  007A                     	ds	4
  3421  007E                     ??_TMR1_CallBack:
  3422  007E                     ??_TMR1_ISR:	
  3423                           ; 1 bytes @ 0xE
  3424                           
  3425  007E                     ??_INTERRUPT_InterruptManager:	
  3426                           ; 1 bytes @ 0xE
  3427                           
  3428                           
  3429                           	psect	cstackBANK0
  3430  0020                     __pcstackBANK0:	
  3431                           ; 1 bytes @ 0xE
  3432                           
  3433  0020                     ?i1___flge:
  3434  0020                     i1___flge@ff1:	
  3435                           ; 1 bit 
  3436                           
  3437                           
  3438                           ; 4 bytes @ 0x0
  3439  0020                     	ds	4
  3440  0024                     i1___flge@ff2:
  3441                           
  3442                           ; 4 bytes @ 0x4
  3443  0024                     	ds	4
  3444  0028                     ??i1___flge:
  3445                           
  3446                           ; 1 bytes @ 0x8
  3447  0028                     	ds	4
  3448  002C                     ??_T1_ROBOT_ISR:
  3449                           
  3450                           ; 1 bytes @ 0xC
  3451  002C                     	ds	2
  3452  002E                     ??_I2C1_Initialize:
  3453  002E                     ??_I2C2_Initialize:	
  3454                           ; 1 bytes @ 0xE
  3455                           
  3456  002E                     ??_OSCILLATOR_Initialize:	
  3457                           ; 1 bytes @ 0xE
  3458                           
  3459  002E                     ??_WDT_Initialize:	
  3460                           ; 1 bytes @ 0xE
  3461                           
  3462  002E                     ?_TMR1_SetInterruptHandler:	
  3463                           ; 1 bytes @ 0xE
  3464                           
  3465  002E                     ?_EUSART1_SetFramingErrorHandler:	
  3466                           ; 1 bytes @ 0xE
  3467                           
  3468  002E                     ?_EUSART1_SetOverrunErrorHandler:	
  3469                           ; 1 bytes @ 0xE
  3470                           
  3471  002E                     ?_EUSART1_SetErrorHandler:	
  3472                           ; 1 bytes @ 0xE
  3473                           
  3474  002E                     ?_EUSART2_SetFramingErrorHandler:	
  3475                           ; 1 bytes @ 0xE
  3476                           
  3477  002E                     ?_EUSART2_SetOverrunErrorHandler:	
  3478                           ; 1 bytes @ 0xE
  3479                           
  3480  002E                     ?_EUSART2_SetErrorHandler:	
  3481                           ; 1 bytes @ 0xE
  3482                           
  3483  002E                     ??_PIN_MANAGER_Initialize:	
  3484                           ; 1 bytes @ 0xE
  3485                           
  3486  002E                     ??_EUSART1_is_rx_ready:	
  3487                           ; 1 bytes @ 0xE
  3488                           
  3489  002E                     ??_EUSART1_Read:	
  3490                           ; 1 bytes @ 0xE
  3491                           
  3492  002E                     ??_EUSART1_Write:	
  3493                           ; 1 bytes @ 0xE
  3494                           
  3495  002E                     ??_EUSART2_Write:	
  3496                           ; 1 bytes @ 0xE
  3497                           
  3498  002E                     ??_SetUpModeHalf_step:	
  3499                           ; 1 bytes @ 0xE
  3500                           
  3501  002E                     ?_strlen:	
  3502                           ; 1 bytes @ 0xE
  3503                           
  3504  002E                     ?__Umul8_16:	
  3505                           ; 2 bytes @ 0xE
  3506                           
  3507  002E                     ?_isspace:	
  3508                           ; 2 bytes @ 0xE
  3509                           
  3510  002E                     ?_isdigit:	
  3511                           ; 2 bytes @ 0xE
  3512                           
  3513  002E                     ?___wmul:	
  3514                           ; 2 bytes @ 0xE
  3515                           
  3516  002E                     ?___flneg:	
  3517                           ; 2 bytes @ 0xE
  3518                           
  3519  002E                     EUSART1_Write@txData:	
  3520                           ; 4 bytes @ 0xE
  3521                           
  3522  002E                     EUSART2_Write@txData:	
  3523                           ; 1 bytes @ 0xE
  3524                           
  3525  002E                     __Umul8_16@multiplicand:	
  3526                           ; 1 bytes @ 0xE
  3527                           
  3528  002E                     TMR1_SetInterruptHandler@InterruptHandler:	
  3529                           ; 1 bytes @ 0xE
  3530                           
  3531  002E                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  3532                           ; 2 bytes @ 0xE
  3533                           
  3534  002E                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  3535                           ; 2 bytes @ 0xE
  3536                           
  3537  002E                     EUSART1_SetErrorHandler@interruptHandler:	
  3538                           ; 2 bytes @ 0xE
  3539                           
  3540  002E                     EUSART2_SetFramingErrorHandler@interruptHandler:	
  3541                           ; 2 bytes @ 0xE
  3542                           
  3543  002E                     EUSART2_SetOverrunErrorHandler@interruptHandler:	
  3544                           ; 2 bytes @ 0xE
  3545                           
  3546  002E                     EUSART2_SetErrorHandler@interruptHandler:	
  3547                           ; 2 bytes @ 0xE
  3548                           
  3549  002E                     ___wmul@multiplier:	
  3550                           ; 2 bytes @ 0xE
  3551                           
  3552  002E                     isdigit@c:	
  3553                           ; 2 bytes @ 0xE
  3554                           
  3555  002E                     isspace@c:	
  3556                           ; 2 bytes @ 0xE
  3557                           
  3558  002E                     strlen@s:	
  3559                           ; 2 bytes @ 0xE
  3560                           
  3561  002E                     ___flneg@f1:	
  3562                           ; 2 bytes @ 0xE
  3563                           
  3564                           
  3565                           ; 4 bytes @ 0xE
  3566  002E                     	ds	2
  3567  0030                     ??_TMR1_Initialize:
  3568  0030                     ??_EUSART1_Initialize:	
  3569                           ; 1 bytes @ 0x10
  3570                           
  3571  0030                     ??_EUSART2_Initialize:	
  3572                           ; 1 bytes @ 0x10
  3573                           
  3574  0030                     ??_TMR1_SetInterruptHandler:	
  3575                           ; 1 bytes @ 0x10
  3576                           
  3577  0030                     ??_EUSART1_SetFramingErrorHandler:	
  3578                           ; 1 bytes @ 0x10
  3579                           
  3580  0030                     ??_EUSART1_SetOverrunErrorHandler:	
  3581                           ; 1 bytes @ 0x10
  3582                           
  3583  0030                     ??_EUSART1_SetErrorHandler:	
  3584                           ; 1 bytes @ 0x10
  3585                           
  3586  0030                     ??_EUSART2_SetFramingErrorHandler:	
  3587                           ; 1 bytes @ 0x10
  3588                           
  3589  0030                     ??_EUSART2_SetOverrunErrorHandler:	
  3590                           ; 1 bytes @ 0x10
  3591                           
  3592  0030                     ??_EUSART2_SetErrorHandler:	
  3593                           ; 1 bytes @ 0x10
  3594                           
  3595  0030                     ??_strlen:	
  3596                           ; 1 bytes @ 0x10
  3597                           
  3598  0030                     ??__Umul8_16:	
  3599                           ; 1 bytes @ 0x10
  3600                           
  3601  0030                     ??_isspace:	
  3602                           ; 1 bytes @ 0x10
  3603                           
  3604  0030                     ??_isdigit:	
  3605                           ; 1 bytes @ 0x10
  3606                           
  3607  0030                     ??_SYSTEM_Initialize:	
  3608                           ; 1 bytes @ 0x10
  3609                           
  3610  0030                     ___wmul@multiplicand:	
  3611                           ; 1 bytes @ 0x10
  3612                           
  3613  0030                     strlen@a:	
  3614                           ; 2 bytes @ 0x10
  3615                           
  3616                           
  3617                           ; 2 bytes @ 0x10
  3618  0030                     	ds	2
  3619  0032                     ??___wmul:
  3620  0032                     ??___flneg:	
  3621                           ; 1 bytes @ 0x12
  3622                           
  3623  0032                     _isspace$2892:	
  3624                           ; 1 bytes @ 0x12
  3625                           
  3626  0032                     ___wmul@product:	
  3627                           ; 1 bytes @ 0x12
  3628                           
  3629  0032                     __Umul8_16@product:	
  3630                           ; 2 bytes @ 0x12
  3631                           
  3632                           
  3633                           ; 2 bytes @ 0x12
  3634  0032                     	ds	2
  3635  0034                     ?_atoi:
  3636  0034                     __Umul8_16@word_mpld:	
  3637                           ; 2 bytes @ 0x14
  3638                           
  3639  0034                     atoi@s:	
  3640                           ; 2 bytes @ 0x14
  3641                           
  3642                           
  3643                           ; 2 bytes @ 0x14
  3644  0034                     	ds	2
  3645  0036                     ??_atoi:
  3646  0036                     __Umul8_16@multiplier:	
  3647                           ; 1 bytes @ 0x16
  3648                           
  3649                           
  3650                           ; 1 bytes @ 0x16
  3651  0036                     	ds	4
  3652  003A                     atoi@neg:
  3653                           
  3654                           ; 2 bytes @ 0x1A
  3655  003A                     	ds	2
  3656  003C                     _atoi$2874:
  3657                           
  3658                           ; 2 bytes @ 0x1C
  3659  003C                     	ds	2
  3660  003E                     _atoi$2876:
  3661                           
  3662                           ; 2 bytes @ 0x1E
  3663  003E                     	ds	2
  3664  0040                     _atoi$2875:
  3665                           
  3666                           ; 1 bytes @ 0x20
  3667  0040                     	ds	1
  3668  0041                     atoi@n:
  3669                           
  3670                           ; 2 bytes @ 0x21
  3671  0041                     	ds	2
  3672  0043                     ?___xxtofl:
  3673  0043                     ___xxtofl@val:	
  3674                           ; 4 bytes @ 0x23
  3675                           
  3676                           
  3677                           ; 4 bytes @ 0x23
  3678  0043                     	ds	4
  3679  0047                     ??___xxtofl:
  3680                           
  3681                           ; 1 bytes @ 0x27
  3682  0047                     	ds	4
  3683  004B                     ___xxtofl@sign:
  3684                           
  3685                           ; 1 bytes @ 0x2B
  3686  004B                     	ds	1
  3687  004C                     ___xxtofl@exp:
  3688                           
  3689                           ; 1 bytes @ 0x2C
  3690  004C                     	ds	1
  3691  004D                     ___xxtofl@arg:
  3692                           
  3693                           ; 4 bytes @ 0x2D
  3694  004D                     	ds	4
  3695  0051                     ??_ManualHandle:
  3696  0051                     ??_AutoCircleHandle:	
  3697                           ; 1 bytes @ 0x31
  3698                           
  3699  0051                     ??_AutoLineHandle:	
  3700                           ; 1 bytes @ 0x31
  3701                           
  3702  0051                     ??___flsub:	
  3703                           ; 1 bytes @ 0x31
  3704                           
  3705  0051                     ___fltol@sign1:	
  3706                           ; 1 bytes @ 0x31
  3707                           
  3708                           
  3709                           ; 1 bytes @ 0x31
  3710  0051                     	ds	1
  3711  0052                     ___fltol@exp1:
  3712                           
  3713                           ; 1 bytes @ 0x32
  3714  0052                     	ds	1
  3715  0053                     ??_ramp_step_function:
  3716  0053                     ??_AutoLineControl:	
  3717                           ; 1 bytes @ 0x33
  3718                           
  3719  0053                     ??_TimeLapseHandle:	
  3720                           ; 1 bytes @ 0x33
  3721                           
  3722  0053                     ??_TimeLapseControl:	
  3723                           ; 1 bytes @ 0x33
  3724                           
  3725                           
  3726                           ; 1 bytes @ 0x33
  3727  0053                     	ds	1
  3728  0054                     ??_ManualControl:
  3729  0054                     ??_AutoCircleControl:	
  3730                           ; 1 bytes @ 0x34
  3731                           
  3732                           
  3733                           	psect	maintext
  3734  2782                     __pmaintext:	
  3735                           ; 1 bytes @ 0x34
  3736 ;;
  3737 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3738 ;;
  3739 ;; *************** function _main *****************
  3740 ;; Defined at:
  3741 ;;		line 572 in file "main.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : B1F/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3757 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3758 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3759 ;;Total ram usage:        1 bytes
  3760 ;; Hardware stack levels required when called: 10
  3761 ;; This function calls:
  3762 ;;		_AutoCircleControl
  3763 ;;		_AutoCircleHandle
  3764 ;;		_AutoLineControl
  3765 ;;		_AutoLineHandle
  3766 ;;		_EUSART1_Read
  3767 ;;		_EUSART1_is_rx_ready
  3768 ;;		_EUSART2_Write
  3769 ;;		_KE
  3770 ;;		_ManualControl
  3771 ;;		_ManualHandle
  3772 ;;		_SYSTEM_Initialize
  3773 ;;		_SetUpModeHalf_step
  3774 ;;		_TMR1_SetInterruptHandler
  3775 ;;		_TimeLapseControl
  3776 ;;		_TimeLapseHandle
  3777 ;; This function is called by:
  3778 ;;		Startup code after reset
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           
  3783                           ;psect for function _main
  3784  2782                     _main:
  3785  2782                     l9387:	
  3786                           ;incstack = 0
  3787                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3788                           
  3789                           
  3790                           ;main.c: 575:     SYSTEM_Initialize();
  3791  2782  31A6  26A7  31A7   	fcall	_SYSTEM_Initialize
  3792                           
  3793                           ;main.c: 576:     TMR1_SetInterruptHandler(T1_ROBOT_ISR);
  3794  2785  3099               	movlw	low _T1_ROBOT_ISR
  3795  2786  0020               	movlb	0	; select bank0
  3796  2787  00AE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  3797  2788  3006               	movlw	high _T1_ROBOT_ISR
  3798  2789  00AF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  3799  278A  31A6  2633  31A7   	fcall	_TMR1_SetInterruptHandler
  3800  278D                     l9389:
  3801                           
  3802                           ;main.c: 583:       (INTCONbits.GIE = 1);
  3803  278D  178B               	bsf	11,7	;volatile
  3804  278E                     l9391:
  3805                           
  3806                           ;main.c: 586:       (INTCONbits.PEIE = 1);
  3807  278E  170B               	bsf	11,6	;volatile
  3808  278F                     l9393:
  3809                           
  3810                           ;main.c: 593:     LATCbits.LATC2 = 1;
  3811  278F  0022               	movlb	2	; select bank2
  3812  2790  150E               	bsf	14,2	;volatile
  3813  2791                     l9395:
  3814                           
  3815                           ;main.c: 594:     SetUpModeHalf_step();
  3816  2791  31A6  263C  31A7   	fcall	_SetUpModeHalf_step
  3817  2794                     l9397:
  3818                           
  3819                           ;main.c: 598:         if(EUSART1_is_rx_ready()){
  3820  2794  31A5  25E0  31A7   	fcall	_EUSART1_is_rx_ready
  3821  2797  3A00               	xorlw	0
  3822  2798  1903               	skipnz
  3823  2799  2F9B               	goto	u10161
  3824  279A  2F9C               	goto	u10160
  3825  279B                     u10161:
  3826  279B  2FBC               	goto	l9403
  3827  279C                     u10160:
  3828  279C                     l9399:
  3829                           
  3830                           ;main.c: 599:            buffer_sys[cnt_sys] = EUSART1_Read();
  3831  279C  31A6  267E  31A7   	fcall	_EUSART1_Read
  3832  279F  0021               	movlb	1	; select bank1
  3833  27A0  00EE               	movwf	??_main^(0+128)
  3834  27A1  0022               	movlb	2	; select bank2
  3835  27A2  085C               	movf	_cnt_sys^(0+256),w
  3836  27A3  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  3837  27A4  0086               	movwf	6
  3838  27A5  3002               	movlw	2	; select bank5/6
  3839  27A6  0087               	movwf	7
  3840  27A7  0021               	movlb	1	; select bank1
  3841  27A8  086E               	movf	??_main^(0+128),w
  3842  27A9  0081               	movwf	1
  3843                           
  3844                           ;main.c: 600:            EUSART2_Write(buffer_sys[cnt_sys]);
  3845  27AA  0022               	movlb	2	; select bank2
  3846  27AB  085C               	movf	_cnt_sys^(0+256),w
  3847  27AC  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  3848  27AD  0086               	movwf	6
  3849  27AE  3002               	movlw	2	; select bank5/6
  3850  27AF  0087               	movwf	7
  3851  27B0  0801               	movf	1,w
  3852  27B1  31A6  2645  31A7   	fcall	_EUSART2_Write
  3853  27B4                     l9401:
  3854                           
  3855                           ;main.c: 601:            cnt_sys = cnt_sys + 1;
  3856  27B4  0022               	movlb	2	; select bank2
  3857  27B5  085C               	movf	_cnt_sys^(0+256),w
  3858  27B6  3E01               	addlw	1
  3859  27B7  0021               	movlb	1	; select bank1
  3860  27B8  00EE               	movwf	??_main^(0+128)
  3861  27B9  086E               	movf	??_main^(0+128),w
  3862  27BA  0022               	movlb	2	; select bank2
  3863  27BB  00DC               	movwf	_cnt_sys^(0+256)
  3864  27BC                     l9403:
  3865                           
  3866                           ;main.c: 603:         if(buffer_sys[cnt_sys - 1] == '#') {
  3867  27BC  0022               	movlb	2	; select bank2
  3868  27BD  085C               	movf	_cnt_sys^(0+256),w
  3869  27BE  3EA7               	addlw	(low ((_buffer_sys| (0+512)+255)))& (0+255)
  3870  27BF  0086               	movwf	6
  3871  27C0  3002               	movlw	2	; select bank5/6
  3872  27C1  0087               	movwf	7
  3873  27C2  3023               	movlw	35
  3874  27C3  0601               	xorwf	1,w
  3875  27C4  1D03               	btfss	3,2
  3876  27C5  2FC7               	goto	u10171
  3877  27C6  2FC8               	goto	u10170
  3878  27C7                     u10171:
  3879  27C7  2FD6               	goto	l9409
  3880  27C8                     u10170:
  3881  27C8                     l9405:
  3882                           
  3883                           ;main.c: 604:             ManualHandle();
  3884  27C8  319B  23B7  31A7   	fcall	_ManualHandle
  3885                           
  3886                           ;main.c: 605:             AutoCircleHandle();
  3887  27CB  3192  2228  31A7   	fcall	_AutoCircleHandle
  3888                           
  3889                           ;main.c: 606:             AutoLineHandle();
  3890  27CE  319E  2652  31A7   	fcall	_AutoLineHandle
  3891                           
  3892                           ;main.c: 607:             TimeLapseHandle();
  3893  27D1  3180  2069  31A7   	fcall	_TimeLapseHandle
  3894  27D4                     l9407:
  3895                           
  3896                           ;main.c: 608:             cnt_sys = 0;
  3897  27D4  0022               	movlb	2	; select bank2
  3898  27D5  01DC               	clrf	_cnt_sys^(0+256)
  3899  27D6                     l9409:
  3900                           
  3901                           ;main.c: 610:         ManualControl();
  3902  27D6  3183  23F7  31A7   	fcall	_ManualControl
  3903  27D9                     l9411:
  3904                           
  3905                           ;main.c: 611:         AutoCircleControl();
  3906  27D9  319C  24B9  31A7   	fcall	_AutoCircleControl
  3907  27DC                     l9413:
  3908                           
  3909                           ;main.c: 612:         AutoLineControl();
  3910  27DC  3195  25F0  31A7   	fcall	_AutoLineControl
  3911  27DF                     l9415:
  3912                           
  3913                           ;main.c: 613:         TimeLapseControl();
  3914  27DF  3188  204F  31A7   	fcall	_TimeLapseControl
  3915  27E2                     l9417:
  3916                           
  3917                           ;main.c: 615:         KE(omega_sys, velocity_sys);
  3918  27E2  0024               	movlb	4	; select bank4
  3919  27E3  0865               	movf	(_omega_sys+3)^(0+512),w
  3920  27E4  0022               	movlb	2	; select bank2
  3921  27E5  00AB               	movwf	(KE@Omega_body+3)^(0+256)
  3922  27E6  0024               	movlb	4	; select bank4
  3923  27E7  0864               	movf	(_omega_sys+2)^(0+512),w
  3924  27E8  0022               	movlb	2	; select bank2
  3925  27E9  00AA               	movwf	(KE@Omega_body+2)^(0+256)
  3926  27EA  0024               	movlb	4	; select bank4
  3927  27EB  0863               	movf	(_omega_sys+1)^(0+512),w
  3928  27EC  0022               	movlb	2	; select bank2
  3929  27ED  00A9               	movwf	(KE@Omega_body+1)^(0+256)
  3930  27EE  0024               	movlb	4	; select bank4
  3931  27EF  0862               	movf	_omega_sys^(0+512),w
  3932  27F0  0022               	movlb	2	; select bank2
  3933  27F1  00A8               	movwf	KE@Omega_body^(0+256)
  3934  27F2  0847               	movf	(_velocity_sys+3)^(0+256),w
  3935  27F3  00AF               	movwf	(KE@Velocity_body+3)^(0+256)
  3936  27F4  0846               	movf	(_velocity_sys+2)^(0+256),w
  3937  27F5  00AE               	movwf	(KE@Velocity_body+2)^(0+256)
  3938  27F6  0845               	movf	(_velocity_sys+1)^(0+256),w
  3939  27F7  00AD               	movwf	(KE@Velocity_body+1)^(0+256)
  3940  27F8  0844               	movf	_velocity_sys^(0+256),w
  3941  27F9  00AC               	movwf	KE@Velocity_body^(0+256)
  3942  27FA  3193  23E4  31A7   	fcall	_KE
  3943  27FD  2F94               	goto	l9397
  3944  27FE  3180  2819         	ljmp	start
  3945  2800                     __end_of_main:
  3946                           
  3947                           	psect	text1
  3948  0069                     __ptext1:	
  3949 ;; *************** function _TimeLapseHandle *****************
  3950 ;; Defined at:
  3951 ;;		line 464 in file "main.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  j               2   34[BANK6 ] int 
  3956 ;;  j               2   32[BANK6 ] int 
  3957 ;;  j               2   30[BANK6 ] int 
  3958 ;;  j               2   28[BANK6 ] int 
  3959 ;;  i               2   36[BANK6 ] int 
  3960 ;;  bufferCamera   20    0[BANK6 ] unsigned char [20]
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0      38       0       0       0       0       
      +0       0
  3972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3973 ;;      Totals:         0       1       0       0       0       0       0      38       0       0       0       0       
      +0       0
  3974 ;;Total ram usage:       39 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 7
  3977 ;; This function calls:
  3978 ;;		___fldiv
  3979 ;;		___flmul
  3980 ;;		___fltol
  3981 ;;		___xxtofl
  3982 ;;		_atoi
  3983 ;;		_strlen
  3984 ;; This function is called by:
  3985 ;;		_main
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function _TimeLapseHandle
  3991  0069                     _TimeLapseHandle:
  3992  0069                     l9245:	
  3993                           ;incstack = 0
  3994                           ; Regs used in _TimeLapseHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3995                           
  3996                           
  3997                           ;main.c: 466:     char bufferCamera_t[20];;main.c: 467:     if((buffer_sys[0] == 'C') ||
      +                           (flagCamera == 1)){
  3998  0069  3043               	movlw	67
  3999  006A  0025               	movlb	5	; select bank5
  4000  006B  0628               	xorwf	_buffer_sys^(0+640),w
  4001  006C  1903               	btfsc	3,2
  4002  006D  286F               	goto	u9911
  4003  006E  2870               	goto	u9910
  4004  006F                     u9911:
  4005  006F  2876               	goto	l1642
  4006  0070                     u9910:
  4007  0070                     l9247:
  4008  0070  0022               	movlb	2	; select bank2
  4009  0071  035D               	decf	_flagCamera^(0+256),w
  4010  0072  1D03               	btfss	3,2
  4011  0073  2875               	goto	u9921
  4012  0074  2876               	goto	u9920
  4013  0075                     u9921:
  4014  0075  2A45               	goto	l9325
  4015  0076                     u9920:
  4016  0076                     l1642:
  4017                           
  4018                           ;main.c: 468:         flagCamera = 1;
  4019  0076  0022               	movlb	2	; select bank2
  4020  0077  01DD               	clrf	_flagCamera^(0+256)
  4021  0078  0ADD               	incf	_flagCamera^(0+256),f
  4022  0079                     l9249:
  4023                           
  4024                           ;main.c: 469:         for(int i = 0; i < strlen(buffer_sys); i++){
  4025  0079  0026               	movlb	6	; select bank6
  4026  007A  01C4               	clrf	TimeLapseHandle@i^(0+768)
  4027  007B  01C5               	clrf	(TimeLapseHandle@i+1)^(0+768)
  4028  007C  2A2F               	goto	l9323
  4029  007D                     l9251:
  4030                           
  4031                           ;main.c: 470:             if(buffer_sys[0] == 'C'){
  4032  007D  3043               	movlw	67
  4033  007E  0025               	movlb	5	; select bank5
  4034  007F  0628               	xorwf	_buffer_sys^(0+640),w
  4035  0080  1D03               	btfss	3,2
  4036  0081  2883               	goto	u9931
  4037  0082  2884               	goto	u9930
  4038  0083                     u9931:
  4039  0083  288A               	goto	l9255
  4040  0084                     u9930:
  4041  0084                     l9253:
  4042                           
  4043                           ;main.c: 471:                 buffer_sys[0] = '0';
  4044  0084  3030               	movlw	48
  4045  0085  0020               	movlb	0	; select bank0
  4046  0086  00D3               	movwf	??_TimeLapseHandle
  4047  0087  0853               	movf	??_TimeLapseHandle,w
  4048  0088  0025               	movlb	5	; select bank5
  4049  0089  00A8               	movwf	_buffer_sys^(0+640)
  4050  008A                     l9255:
  4051                           
  4052                           ;main.c: 473:             if((buffer_sys[i] == 'r') || (buffer_sys[i] == 'l') || (buffer
      +                          _sys[i] == 't') || (buffer_sys[i] == '#')){
  4053  008A  0026               	movlb	6	; select bank6
  4054  008B  0844               	movf	TimeLapseHandle@i^(0+768),w
  4055  008C  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4056  008D  0086               	movwf	6
  4057  008E  3002               	movlw	2	; select bank5/6
  4058  008F  0087               	movwf	7
  4059  0090  3072               	movlw	114
  4060  0091  0601               	xorwf	1,w
  4061  0092  1903               	btfsc	3,2
  4062  0093  2895               	goto	u9941
  4063  0094  2896               	goto	u9940
  4064  0095                     u9941:
  4065  0095  28B7               	goto	l9263
  4066  0096                     u9940:
  4067  0096                     l9257:
  4068  0096  0844               	movf	TimeLapseHandle@i^(0+768),w
  4069  0097  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4070  0098  0086               	movwf	6
  4071  0099  3002               	movlw	2	; select bank5/6
  4072  009A  0087               	movwf	7
  4073  009B  306C               	movlw	108
  4074  009C  0601               	xorwf	1,w
  4075  009D  1903               	btfsc	3,2
  4076  009E  28A0               	goto	u9951
  4077  009F  28A1               	goto	u9950
  4078  00A0                     u9951:
  4079  00A0  28B7               	goto	l9263
  4080  00A1                     u9950:
  4081  00A1                     l9259:
  4082  00A1  0844               	movf	TimeLapseHandle@i^(0+768),w
  4083  00A2  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4084  00A3  0086               	movwf	6
  4085  00A4  3002               	movlw	2	; select bank5/6
  4086  00A5  0087               	movwf	7
  4087  00A6  3074               	movlw	116
  4088  00A7  0601               	xorwf	1,w
  4089  00A8  1903               	btfsc	3,2
  4090  00A9  28AB               	goto	u9961
  4091  00AA  28AC               	goto	u9960
  4092  00AB                     u9961:
  4093  00AB  28B7               	goto	l9263
  4094  00AC                     u9960:
  4095  00AC                     l9261:
  4096  00AC  0844               	movf	TimeLapseHandle@i^(0+768),w
  4097  00AD  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4098  00AE  0086               	movwf	6
  4099  00AF  3002               	movlw	2	; select bank5/6
  4100  00B0  0087               	movwf	7
  4101  00B1  3023               	movlw	35
  4102  00B2  0601               	xorwf	1,w
  4103  00B3  1D03               	btfss	3,2
  4104  00B4  28B6               	goto	u9971
  4105  00B5  28B7               	goto	u9970
  4106  00B6                     u9971:
  4107  00B6  2A11               	goto	l9317
  4108  00B7                     u9970:
  4109  00B7                     l9263:
  4110                           
  4111                           ;main.c: 474:                 if((buffer_sys[i] == 'r')){
  4112  00B7  0844               	movf	TimeLapseHandle@i^(0+768),w
  4113  00B8  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4114  00B9  0086               	movwf	6
  4115  00BA  3002               	movlw	2	; select bank5/6
  4116  00BB  0087               	movwf	7
  4117  00BC  3072               	movlw	114
  4118  00BD  0601               	xorwf	1,w
  4119  00BE  1D03               	btfss	3,2
  4120  00BF  28C1               	goto	u9981
  4121  00C0  28C2               	goto	u9980
  4122  00C1                     u9981:
  4123  00C1  2915               	goto	l9277
  4124  00C2                     u9980:
  4125  00C2                     l9265:
  4126                           
  4127                           ;main.c: 475:                     valRadius_TL = atoi(bufferCamera_t);
  4128  00C2  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4129  00C3  0020               	movlb	0	; select bank0
  4130  00C4  00B4               	movwf	atoi@s
  4131  00C5  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4132  00C6  00B5               	movwf	atoi@s+1
  4133  00C7  319B  230A  3180   	fcall	_atoi
  4134  00CA  0020               	movlb	0	; select bank0
  4135  00CB  0834               	movf	?_atoi,w
  4136  00CC  00C3               	movwf	___xxtofl@val
  4137  00CD  0835               	movf	?_atoi+1,w
  4138  00CE  00C4               	movwf	___xxtofl@val+1
  4139  00CF  0D89               	rlf	9,f
  4140  00D0  3B89               	subwfb	9,f
  4141  00D1  0989               	comf	9,f
  4142  00D2  00C5               	movwf	___xxtofl@val+2
  4143  00D3  00C6               	movwf	___xxtofl@val+3
  4144  00D4  3001               	movlw	1
  4145  00D5  319A  225D  3180   	fcall	___xxtofl
  4146  00D8  0020               	movlb	0	; select bank0
  4147  00D9  0846               	movf	?___xxtofl+3,w
  4148  00DA  0023               	movlb	3	; select bank3
  4149  00DB  00E9               	movwf	(_valRadius_TL+3)^(0+384)
  4150  00DC  0020               	movlb	0	; select bank0
  4151  00DD  0845               	movf	?___xxtofl+2,w
  4152  00DE  0023               	movlb	3	; select bank3
  4153  00DF  00E8               	movwf	(_valRadius_TL+2)^(0+384)
  4154  00E0  0020               	movlb	0	; select bank0
  4155  00E1  0844               	movf	?___xxtofl+1,w
  4156  00E2  0023               	movlb	3	; select bank3
  4157  00E3  00E7               	movwf	(_valRadius_TL+1)^(0+384)
  4158  00E4  0020               	movlb	0	; select bank0
  4159  00E5  0843               	movf	?___xxtofl,w
  4160  00E6  0023               	movlb	3	; select bank3
  4161  00E7  00E6               	movwf	_valRadius_TL^(0+384)
  4162  00E8                     l9267:
  4163                           
  4164                           ;main.c: 477:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4165  00E8  0026               	movlb	6	; select bank6
  4166  00E9  01BC               	clrf	TimeLapseHandle@j^(0+768)
  4167  00EA  01BD               	clrf	(TimeLapseHandle@j+1)^(0+768)
  4168  00EB  28FD               	goto	l9273
  4169  00EC                     l9269:
  4170                           
  4171                           ;main.c: 478:                         bufferCamera_t[j] = ' ';
  4172  00EC  3020               	movlw	32
  4173  00ED  0020               	movlb	0	; select bank0
  4174  00EE  00D3               	movwf	??_TimeLapseHandle
  4175  00EF  0026               	movlb	6	; select bank6
  4176  00F0  083C               	movf	TimeLapseHandle@j^(0+768),w
  4177  00F1  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4178  00F2  0086               	movwf	6
  4179  00F3  3003               	movlw	3	; select bank6/7
  4180  00F4  0087               	movwf	7
  4181  00F5  0020               	movlb	0	; select bank0
  4182  00F6  0853               	movf	??_TimeLapseHandle,w
  4183  00F7  0081               	movwf	1
  4184  00F8                     l9271:
  4185                           
  4186                           ;main.c: 479:                     }
  4187  00F8  3001               	movlw	1
  4188  00F9  0026               	movlb	6	; select bank6
  4189  00FA  07BC               	addwf	TimeLapseHandle@j^(0+768),f
  4190  00FB  3000               	movlw	0
  4191  00FC  3DBD               	addwfc	(TimeLapseHandle@j+1)^(0+768),f
  4192  00FD                     l9273:
  4193  00FD  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4194  00FE  0020               	movlb	0	; select bank0
  4195  00FF  00AE               	movwf	strlen@s
  4196  0100  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4197  0101  00AF               	movwf	strlen@s+1
  4198  0102  31A6  26C0  3180   	fcall	_strlen
  4199  0105  0020               	movlb	0	; select bank0
  4200  0106  082F               	movf	?_strlen+1,w
  4201  0107  0026               	movlb	6	; select bank6
  4202  0108  023D               	subwf	(TimeLapseHandle@j+1)^(0+768),w
  4203  0109  1D03               	skipz
  4204  010A  290F               	goto	u9995
  4205  010B  0020               	movlb	0	; select bank0
  4206  010C  082E               	movf	?_strlen,w
  4207  010D  0026               	movlb	6	; select bank6
  4208  010E  023C               	subwf	TimeLapseHandle@j^(0+768),w
  4209  010F                     u9995:
  4210  010F  1C03               	skipc
  4211  0110  2912               	goto	u9991
  4212  0111  2913               	goto	u9990
  4213  0112                     u9991:
  4214  0112  28EC               	goto	l9269
  4215  0113                     u9990:
  4216  0113                     l9275:
  4217                           
  4218                           ;main.c: 480:                     cntCamera = 0;
  4219  0113  0022               	movlb	2	; select bank2
  4220  0114  01DE               	clrf	_cntCamera^(0+256)
  4221  0115                     l9277:
  4222                           
  4223                           ;main.c: 482:                 if(buffer_sys[i] == 'l'){
  4224  0115  0026               	movlb	6	; select bank6
  4225  0116  0844               	movf	TimeLapseHandle@i^(0+768),w
  4226  0117  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4227  0118  0086               	movwf	6
  4228  0119  3002               	movlw	2	; select bank5/6
  4229  011A  0087               	movwf	7
  4230  011B  306C               	movlw	108
  4231  011C  0601               	xorwf	1,w
  4232  011D  1D03               	btfss	3,2
  4233  011E  2920               	goto	u10001
  4234  011F  2921               	goto	u10000
  4235  0120                     u10001:
  4236  0120  2974               	goto	l9291
  4237  0121                     u10000:
  4238  0121                     l9279:
  4239                           
  4240                           ;main.c: 483:                     valVLength_TL = atoi(bufferCamera_t);
  4241  0121  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4242  0122  0020               	movlb	0	; select bank0
  4243  0123  00B4               	movwf	atoi@s
  4244  0124  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4245  0125  00B5               	movwf	atoi@s+1
  4246  0126  319B  230A  3180   	fcall	_atoi
  4247  0129  0020               	movlb	0	; select bank0
  4248  012A  0834               	movf	?_atoi,w
  4249  012B  00C3               	movwf	___xxtofl@val
  4250  012C  0835               	movf	?_atoi+1,w
  4251  012D  00C4               	movwf	___xxtofl@val+1
  4252  012E  0D89               	rlf	9,f
  4253  012F  3B89               	subwfb	9,f
  4254  0130  0989               	comf	9,f
  4255  0131  00C5               	movwf	___xxtofl@val+2
  4256  0132  00C6               	movwf	___xxtofl@val+3
  4257  0133  3001               	movlw	1
  4258  0134  319A  225D  3180   	fcall	___xxtofl
  4259  0137  0020               	movlb	0	; select bank0
  4260  0138  0846               	movf	?___xxtofl+3,w
  4261  0139  0023               	movlb	3	; select bank3
  4262  013A  00AF               	movwf	(_valVLength_TL+3)^(0+384)
  4263  013B  0020               	movlb	0	; select bank0
  4264  013C  0845               	movf	?___xxtofl+2,w
  4265  013D  0023               	movlb	3	; select bank3
  4266  013E  00AE               	movwf	(_valVLength_TL+2)^(0+384)
  4267  013F  0020               	movlb	0	; select bank0
  4268  0140  0844               	movf	?___xxtofl+1,w
  4269  0141  0023               	movlb	3	; select bank3
  4270  0142  00AD               	movwf	(_valVLength_TL+1)^(0+384)
  4271  0143  0020               	movlb	0	; select bank0
  4272  0144  0843               	movf	?___xxtofl,w
  4273  0145  0023               	movlb	3	; select bank3
  4274  0146  00AC               	movwf	_valVLength_TL^(0+384)
  4275  0147                     l9281:
  4276                           
  4277                           ;main.c: 485:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4278  0147  0026               	movlb	6	; select bank6
  4279  0148  01BE               	clrf	TimeLapseHandle@j_2381^(0+768)
  4280  0149  01BF               	clrf	(TimeLapseHandle@j_2381+1)^(0+768)
  4281  014A  295C               	goto	l9287
  4282  014B                     l9283:
  4283                           
  4284                           ;main.c: 486:                         bufferCamera_t[j] = ' ';
  4285  014B  3020               	movlw	32
  4286  014C  0020               	movlb	0	; select bank0
  4287  014D  00D3               	movwf	??_TimeLapseHandle
  4288  014E  0026               	movlb	6	; select bank6
  4289  014F  083E               	movf	TimeLapseHandle@j_2381^(0+768),w
  4290  0150  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4291  0151  0086               	movwf	6
  4292  0152  3003               	movlw	3	; select bank6/7
  4293  0153  0087               	movwf	7
  4294  0154  0020               	movlb	0	; select bank0
  4295  0155  0853               	movf	??_TimeLapseHandle,w
  4296  0156  0081               	movwf	1
  4297  0157                     l9285:
  4298                           
  4299                           ;main.c: 487:                     }
  4300  0157  3001               	movlw	1
  4301  0158  0026               	movlb	6	; select bank6
  4302  0159  07BE               	addwf	TimeLapseHandle@j_2381^(0+768),f
  4303  015A  3000               	movlw	0
  4304  015B  3DBF               	addwfc	(TimeLapseHandle@j_2381+1)^(0+768),f
  4305  015C                     l9287:
  4306  015C  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4307  015D  0020               	movlb	0	; select bank0
  4308  015E  00AE               	movwf	strlen@s
  4309  015F  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4310  0160  00AF               	movwf	strlen@s+1
  4311  0161  31A6  26C0  3180   	fcall	_strlen
  4312  0164  0020               	movlb	0	; select bank0
  4313  0165  082F               	movf	?_strlen+1,w
  4314  0166  0026               	movlb	6	; select bank6
  4315  0167  023F               	subwf	(TimeLapseHandle@j_2381+1)^(0+768),w
  4316  0168  1D03               	skipz
  4317  0169  296E               	goto	u10015
  4318  016A  0020               	movlb	0	; select bank0
  4319  016B  082E               	movf	?_strlen,w
  4320  016C  0026               	movlb	6	; select bank6
  4321  016D  023E               	subwf	TimeLapseHandle@j_2381^(0+768),w
  4322  016E                     u10015:
  4323  016E  1C03               	skipc
  4324  016F  2971               	goto	u10011
  4325  0170  2972               	goto	u10010
  4326  0171                     u10011:
  4327  0171  294B               	goto	l9283
  4328  0172                     u10010:
  4329  0172                     l9289:
  4330                           
  4331                           ;main.c: 488:                     cntCamera = 0;
  4332  0172  0022               	movlb	2	; select bank2
  4333  0173  01DE               	clrf	_cntCamera^(0+256)
  4334  0174                     l9291:
  4335                           
  4336                           ;main.c: 490:                 if(buffer_sys[i] == 't'){
  4337  0174  0026               	movlb	6	; select bank6
  4338  0175  0844               	movf	TimeLapseHandle@i^(0+768),w
  4339  0176  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4340  0177  0086               	movwf	6
  4341  0178  3002               	movlw	2	; select bank5/6
  4342  0179  0087               	movwf	7
  4343  017A  3074               	movlw	116
  4344  017B  0601               	xorwf	1,w
  4345  017C  1D03               	btfss	3,2
  4346  017D  297F               	goto	u10021
  4347  017E  2980               	goto	u10020
  4348  017F                     u10021:
  4349  017F  29D3               	goto	l9305
  4350  0180                     u10020:
  4351  0180                     l9293:
  4352                           
  4353                           ;main.c: 491:                     valTime_TL = atoi(bufferCamera_t);
  4354  0180  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4355  0181  0020               	movlb	0	; select bank0
  4356  0182  00B4               	movwf	atoi@s
  4357  0183  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4358  0184  00B5               	movwf	atoi@s+1
  4359  0185  319B  230A  3180   	fcall	_atoi
  4360  0188  0020               	movlb	0	; select bank0
  4361  0189  0834               	movf	?_atoi,w
  4362  018A  00C3               	movwf	___xxtofl@val
  4363  018B  0835               	movf	?_atoi+1,w
  4364  018C  00C4               	movwf	___xxtofl@val+1
  4365  018D  0D89               	rlf	9,f
  4366  018E  3B89               	subwfb	9,f
  4367  018F  0989               	comf	9,f
  4368  0190  00C5               	movwf	___xxtofl@val+2
  4369  0191  00C6               	movwf	___xxtofl@val+3
  4370  0192  3001               	movlw	1
  4371  0193  319A  225D  3180   	fcall	___xxtofl
  4372  0196  0020               	movlb	0	; select bank0
  4373  0197  0846               	movf	?___xxtofl+3,w
  4374  0198  0023               	movlb	3	; select bank3
  4375  0199  00AB               	movwf	(_valTime_TL+3)^(0+384)
  4376  019A  0020               	movlb	0	; select bank0
  4377  019B  0845               	movf	?___xxtofl+2,w
  4378  019C  0023               	movlb	3	; select bank3
  4379  019D  00AA               	movwf	(_valTime_TL+2)^(0+384)
  4380  019E  0020               	movlb	0	; select bank0
  4381  019F  0844               	movf	?___xxtofl+1,w
  4382  01A0  0023               	movlb	3	; select bank3
  4383  01A1  00A9               	movwf	(_valTime_TL+1)^(0+384)
  4384  01A2  0020               	movlb	0	; select bank0
  4385  01A3  0843               	movf	?___xxtofl,w
  4386  01A4  0023               	movlb	3	; select bank3
  4387  01A5  00A8               	movwf	_valTime_TL^(0+384)
  4388  01A6                     l9295:
  4389                           
  4390                           ;main.c: 493:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4391  01A6  0026               	movlb	6	; select bank6
  4392  01A7  01C0               	clrf	TimeLapseHandle@j_2382^(0+768)
  4393  01A8  01C1               	clrf	(TimeLapseHandle@j_2382+1)^(0+768)
  4394  01A9  29BB               	goto	l9301
  4395  01AA                     l9297:
  4396                           
  4397                           ;main.c: 494:                         bufferCamera_t[j] = ' ';
  4398  01AA  3020               	movlw	32
  4399  01AB  0020               	movlb	0	; select bank0
  4400  01AC  00D3               	movwf	??_TimeLapseHandle
  4401  01AD  0026               	movlb	6	; select bank6
  4402  01AE  0840               	movf	TimeLapseHandle@j_2382^(0+768),w
  4403  01AF  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4404  01B0  0086               	movwf	6
  4405  01B1  3003               	movlw	3	; select bank6/7
  4406  01B2  0087               	movwf	7
  4407  01B3  0020               	movlb	0	; select bank0
  4408  01B4  0853               	movf	??_TimeLapseHandle,w
  4409  01B5  0081               	movwf	1
  4410  01B6                     l9299:
  4411                           
  4412                           ;main.c: 495:                     }
  4413  01B6  3001               	movlw	1
  4414  01B7  0026               	movlb	6	; select bank6
  4415  01B8  07C0               	addwf	TimeLapseHandle@j_2382^(0+768),f
  4416  01B9  3000               	movlw	0
  4417  01BA  3DC1               	addwfc	(TimeLapseHandle@j_2382+1)^(0+768),f
  4418  01BB                     l9301:
  4419  01BB  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4420  01BC  0020               	movlb	0	; select bank0
  4421  01BD  00AE               	movwf	strlen@s
  4422  01BE  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4423  01BF  00AF               	movwf	strlen@s+1
  4424  01C0  31A6  26C0  3180   	fcall	_strlen
  4425  01C3  0020               	movlb	0	; select bank0
  4426  01C4  082F               	movf	?_strlen+1,w
  4427  01C5  0026               	movlb	6	; select bank6
  4428  01C6  0241               	subwf	(TimeLapseHandle@j_2382+1)^(0+768),w
  4429  01C7  1D03               	skipz
  4430  01C8  29CD               	goto	u10035
  4431  01C9  0020               	movlb	0	; select bank0
  4432  01CA  082E               	movf	?_strlen,w
  4433  01CB  0026               	movlb	6	; select bank6
  4434  01CC  0240               	subwf	TimeLapseHandle@j_2382^(0+768),w
  4435  01CD                     u10035:
  4436  01CD  1C03               	skipc
  4437  01CE  29D0               	goto	u10031
  4438  01CF  29D1               	goto	u10030
  4439  01D0                     u10031:
  4440  01D0  29AA               	goto	l9297
  4441  01D1                     u10030:
  4442  01D1                     l9303:
  4443                           
  4444                           ;main.c: 496:                     cntCamera = 0;
  4445  01D1  0022               	movlb	2	; select bank2
  4446  01D2  01DE               	clrf	_cntCamera^(0+256)
  4447  01D3                     l9305:
  4448                           
  4449                           ;main.c: 498:                 if(buffer_sys[i] == '#'){
  4450  01D3  0026               	movlb	6	; select bank6
  4451  01D4  0844               	movf	TimeLapseHandle@i^(0+768),w
  4452  01D5  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4453  01D6  0086               	movwf	6
  4454  01D7  3002               	movlw	2	; select bank5/6
  4455  01D8  0087               	movwf	7
  4456  01D9  3023               	movlw	35
  4457  01DA  0601               	xorwf	1,w
  4458  01DB  1D03               	btfss	3,2
  4459  01DC  29DE               	goto	u10041
  4460  01DD  29DF               	goto	u10040
  4461  01DE                     u10041:
  4462  01DE  2A2A               	goto	l9321
  4463  01DF                     u10040:
  4464  01DF                     l9307:
  4465                           
  4466                           ;main.c: 499:                     flagCamera = 2;
  4467  01DF  3002               	movlw	2
  4468  01E0  0020               	movlb	0	; select bank0
  4469  01E1  00D3               	movwf	??_TimeLapseHandle
  4470  01E2  0853               	movf	??_TimeLapseHandle,w
  4471  01E3  0022               	movlb	2	; select bank2
  4472  01E4  00DD               	movwf	_flagCamera^(0+256)
  4473  01E5                     l9309:
  4474                           
  4475                           ;main.c: 501:                     for(int j = 0; j < strlen(bufferCamera_t);j++){
  4476  01E5  0026               	movlb	6	; select bank6
  4477  01E6  01C2               	clrf	TimeLapseHandle@j_2383^(0+768)
  4478  01E7  01C3               	clrf	(TimeLapseHandle@j_2383+1)^(0+768)
  4479  01E8  29FA               	goto	l9315
  4480  01E9                     l9311:
  4481                           
  4482                           ;main.c: 502:                         bufferCamera_t[j] = ' ';
  4483  01E9  3020               	movlw	32
  4484  01EA  0020               	movlb	0	; select bank0
  4485  01EB  00D3               	movwf	??_TimeLapseHandle
  4486  01EC  0026               	movlb	6	; select bank6
  4487  01ED  0842               	movf	TimeLapseHandle@j_2383^(0+768),w
  4488  01EE  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4489  01EF  0086               	movwf	6
  4490  01F0  3003               	movlw	3	; select bank6/7
  4491  01F1  0087               	movwf	7
  4492  01F2  0020               	movlb	0	; select bank0
  4493  01F3  0853               	movf	??_TimeLapseHandle,w
  4494  01F4  0081               	movwf	1
  4495  01F5                     l9313:
  4496                           
  4497                           ;main.c: 503:                     }
  4498  01F5  3001               	movlw	1
  4499  01F6  0026               	movlb	6	; select bank6
  4500  01F7  07C2               	addwf	TimeLapseHandle@j_2383^(0+768),f
  4501  01F8  3000               	movlw	0
  4502  01F9  3DC3               	addwfc	(TimeLapseHandle@j_2383+1)^(0+768),f
  4503  01FA                     l9315:
  4504  01FA  3020               	movlw	low TimeLapseHandle@bufferCamera_t
  4505  01FB  0020               	movlb	0	; select bank0
  4506  01FC  00AE               	movwf	strlen@s
  4507  01FD  3003               	movlw	high TimeLapseHandle@bufferCamera_t
  4508  01FE  00AF               	movwf	strlen@s+1
  4509  01FF  31A6  26C0  3180   	fcall	_strlen
  4510  0202  0020               	movlb	0	; select bank0
  4511  0203  082F               	movf	?_strlen+1,w
  4512  0204  0026               	movlb	6	; select bank6
  4513  0205  0243               	subwf	(TimeLapseHandle@j_2383+1)^(0+768),w
  4514  0206  1D03               	skipz
  4515  0207  2A0C               	goto	u10055
  4516  0208  0020               	movlb	0	; select bank0
  4517  0209  082E               	movf	?_strlen,w
  4518  020A  0026               	movlb	6	; select bank6
  4519  020B  0242               	subwf	TimeLapseHandle@j_2383^(0+768),w
  4520  020C                     u10055:
  4521  020C  1C03               	skipc
  4522  020D  2A0F               	goto	u10051
  4523  020E  2A10               	goto	u10050
  4524  020F                     u10051:
  4525  020F  29E9               	goto	l9311
  4526  0210                     u10050:
  4527  0210  2A2A               	goto	l9321
  4528  0211                     l9317:
  4529                           
  4530                           ;main.c: 507:                 bufferCamera_t[cntCamera] = buffer_sys[i];
  4531  0211  0844               	movf	TimeLapseHandle@i^(0+768),w
  4532  0212  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  4533  0213  0086               	movwf	6
  4534  0214  3002               	movlw	2	; select bank5/6
  4535  0215  0087               	movwf	7
  4536  0216  0801               	movf	1,w
  4537  0217  0020               	movlb	0	; select bank0
  4538  0218  00D3               	movwf	??_TimeLapseHandle
  4539  0219  0022               	movlb	2	; select bank2
  4540  021A  085E               	movf	_cntCamera^(0+256),w
  4541  021B  3E20               	addlw	(low (TimeLapseHandle@bufferCamera_t| (0+768)))& (0+255)
  4542  021C  0086               	movwf	6
  4543  021D  3003               	movlw	3	; select bank6/7
  4544  021E  0087               	movwf	7
  4545  021F  0020               	movlb	0	; select bank0
  4546  0220  0853               	movf	??_TimeLapseHandle,w
  4547  0221  0081               	movwf	1
  4548  0222                     l9319:
  4549                           
  4550                           ;main.c: 508:                 cntCamera = cntCamera + 1;
  4551  0222  0022               	movlb	2	; select bank2
  4552  0223  085E               	movf	_cntCamera^(0+256),w
  4553  0224  3E01               	addlw	1
  4554  0225  0020               	movlb	0	; select bank0
  4555  0226  00D3               	movwf	??_TimeLapseHandle
  4556  0227  0853               	movf	??_TimeLapseHandle,w
  4557  0228  0022               	movlb	2	; select bank2
  4558  0229  00DE               	movwf	_cntCamera^(0+256)
  4559  022A                     l9321:
  4560                           
  4561                           ;main.c: 510:         }
  4562  022A  3001               	movlw	1
  4563  022B  0026               	movlb	6	; select bank6
  4564  022C  07C4               	addwf	TimeLapseHandle@i^(0+768),f
  4565  022D  3000               	movlw	0
  4566  022E  3DC5               	addwfc	(TimeLapseHandle@i+1)^(0+768),f
  4567  022F                     l9323:
  4568  022F  30A8               	movlw	low _buffer_sys
  4569  0230  0020               	movlb	0	; select bank0
  4570  0231  00AE               	movwf	strlen@s
  4571  0232  3002               	movlw	high _buffer_sys
  4572  0233  00AF               	movwf	strlen@s+1
  4573  0234  31A6  26C0  3180   	fcall	_strlen
  4574  0237  0020               	movlb	0	; select bank0
  4575  0238  082F               	movf	?_strlen+1,w
  4576  0239  0026               	movlb	6	; select bank6
  4577  023A  0245               	subwf	(TimeLapseHandle@i+1)^(0+768),w
  4578  023B  1D03               	skipz
  4579  023C  2A41               	goto	u10065
  4580  023D  0020               	movlb	0	; select bank0
  4581  023E  082E               	movf	?_strlen,w
  4582  023F  0026               	movlb	6	; select bank6
  4583  0240  0244               	subwf	TimeLapseHandle@i^(0+768),w
  4584  0241                     u10065:
  4585  0241  1C03               	skipc
  4586  0242  2A44               	goto	u10061
  4587  0243  2A45               	goto	u10060
  4588  0244                     u10061:
  4589  0244  287D               	goto	l9251
  4590  0245                     u10060:
  4591  0245                     l9325:
  4592                           
  4593                           ;main.c: 512:     if(flagCamera == 2){
  4594  0245  3002               	movlw	2
  4595  0246  0022               	movlb	2	; select bank2
  4596  0247  065D               	xorwf	_flagCamera^(0+256),w
  4597  0248  1D03               	btfss	3,2
  4598  0249  2A4B               	goto	u10071
  4599  024A  2A4C               	goto	u10070
  4600  024B                     u10071:
  4601  024B  2BF6               	goto	l1668
  4602  024C                     u10070:
  4603  024C                     l9327:
  4604                           
  4605                           ;main.c: 513:         sum_frame = valVLength_TL*30;
  4606  024C  0023               	movlb	3	; select bank3
  4607  024D  082F               	movf	(_valVLength_TL+3)^(0+384),w
  4608  024E  0021               	movlb	1	; select bank1
  4609  024F  00A7               	movwf	(___flmul@a+3)^(0+128)
  4610  0250  0023               	movlb	3	; select bank3
  4611  0251  082E               	movf	(_valVLength_TL+2)^(0+384),w
  4612  0252  0021               	movlb	1	; select bank1
  4613  0253  00A6               	movwf	(___flmul@a+2)^(0+128)
  4614  0254  0023               	movlb	3	; select bank3
  4615  0255  082D               	movf	(_valVLength_TL+1)^(0+384),w
  4616  0256  0021               	movlb	1	; select bank1
  4617  0257  00A5               	movwf	(___flmul@a+1)^(0+128)
  4618  0258  0023               	movlb	3	; select bank3
  4619  0259  082C               	movf	_valVLength_TL^(0+384),w
  4620  025A  0021               	movlb	1	; select bank1
  4621  025B  00A4               	movwf	___flmul@a^(0+128)
  4622  025C  3041               	movlw	65
  4623  025D  00A3               	movwf	(___flmul@b+3)^(0+128)
  4624  025E  30F0               	movlw	240
  4625  025F  00A2               	movwf	(___flmul@b+2)^(0+128)
  4626  0260  3000               	movlw	0
  4627  0261  00A1               	movwf	(___flmul@b+1)^(0+128)
  4628  0262  3000               	movlw	0
  4629  0263  00A0               	movwf	___flmul@b^(0+128)
  4630  0264  318D  257C  3180   	fcall	___flmul
  4631  0267  0021               	movlb	1	; select bank1
  4632  0268  0823               	movf	(?___flmul+3)^(0+128),w
  4633  0269  00EB               	movwf	(___fltol@f1+3)^(0+128)
  4634  026A  0822               	movf	(?___flmul+2)^(0+128),w
  4635  026B  00EA               	movwf	(___fltol@f1+2)^(0+128)
  4636  026C  0821               	movf	(?___flmul+1)^(0+128),w
  4637  026D  00E9               	movwf	(___fltol@f1+1)^(0+128)
  4638  026E  0820               	movf	?___flmul^(0+128),w
  4639  026F  00E8               	movwf	___fltol@f1^(0+128)
  4640  0270  3198  2012  3180   	fcall	___fltol
  4641  0273  0021               	movlb	1	; select bank1
  4642  0274  0869               	movf	(?___fltol+1)^(0+128),w
  4643  0275  0022               	movlb	2	; select bank2
  4644  0276  00E5               	movwf	(_sum_frame+1)^(0+256)
  4645  0277  0021               	movlb	1	; select bank1
  4646  0278  0868               	movf	?___fltol^(0+128),w
  4647  0279  0022               	movlb	2	; select bank2
  4648  027A  00E4               	movwf	_sum_frame^(0+256)
  4649                           
  4650                           ;main.c: 514:         angle_move = (float)360/sum_frame;
  4651  027B  0864               	movf	_sum_frame^(0+256),w
  4652  027C  0020               	movlb	0	; select bank0
  4653  027D  00C3               	movwf	___xxtofl@val
  4654  027E  0022               	movlb	2	; select bank2
  4655  027F  0865               	movf	(_sum_frame+1)^(0+256),w
  4656  0280  0020               	movlb	0	; select bank0
  4657  0281  00C4               	movwf	___xxtofl@val+1
  4658  0282  01C5               	clrf	___xxtofl@val+2
  4659  0283  01C6               	clrf	___xxtofl@val+3
  4660  0284  3000               	movlw	0
  4661  0285  319A  225D  3180   	fcall	___xxtofl
  4662  0288  0020               	movlb	0	; select bank0
  4663  0289  0846               	movf	?___xxtofl+3,w
  4664  028A  0021               	movlb	1	; select bank1
  4665  028B  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4666  028C  0020               	movlb	0	; select bank0
  4667  028D  0845               	movf	?___xxtofl+2,w
  4668  028E  0021               	movlb	1	; select bank1
  4669  028F  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4670  0290  0020               	movlb	0	; select bank0
  4671  0291  0844               	movf	?___xxtofl+1,w
  4672  0292  0021               	movlb	1	; select bank1
  4673  0293  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4674  0294  0020               	movlb	0	; select bank0
  4675  0295  0843               	movf	?___xxtofl,w
  4676  0296  0021               	movlb	1	; select bank1
  4677  0297  00BA               	movwf	___fldiv@a^(0+128)
  4678  0298  3043               	movlw	67
  4679  0299  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4680  029A  30B4               	movlw	180
  4681  029B  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4682  029C  3000               	movlw	0
  4683  029D  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4684  029E  3000               	movlw	0
  4685  029F  00BE               	movwf	___fldiv@b^(0+128)
  4686  02A0  3190  2074  3180   	fcall	___fldiv
  4687  02A3  0021               	movlb	1	; select bank1
  4688  02A4  083D               	movf	(?___fldiv+3)^(0+128),w
  4689  02A5  0023               	movlb	3	; select bank3
  4690  02A6  00A7               	movwf	(_angle_move+3)^(0+384)
  4691  02A7  0021               	movlb	1	; select bank1
  4692  02A8  083C               	movf	(?___fldiv+2)^(0+128),w
  4693  02A9  0023               	movlb	3	; select bank3
  4694  02AA  00A6               	movwf	(_angle_move+2)^(0+384)
  4695  02AB  0021               	movlb	1	; select bank1
  4696  02AC  083B               	movf	(?___fldiv+1)^(0+128),w
  4697  02AD  0023               	movlb	3	; select bank3
  4698  02AE  00A5               	movwf	(_angle_move+1)^(0+384)
  4699  02AF  0021               	movlb	1	; select bank1
  4700  02B0  083A               	movf	?___fldiv^(0+128),w
  4701  02B1  0023               	movlb	3	; select bank3
  4702  02B2  00A4               	movwf	_angle_move^(0+384)
  4703                           
  4704                           ;main.c: 515:         delay_frame = (angle_move*valTime_TL*1000)/6;
  4705  02B3  0827               	movf	(_angle_move+3)^(0+384),w
  4706  02B4  0021               	movlb	1	; select bank1
  4707  02B5  00A7               	movwf	(___flmul@a+3)^(0+128)
  4708  02B6  0023               	movlb	3	; select bank3
  4709  02B7  0826               	movf	(_angle_move+2)^(0+384),w
  4710  02B8  0021               	movlb	1	; select bank1
  4711  02B9  00A6               	movwf	(___flmul@a+2)^(0+128)
  4712  02BA  0023               	movlb	3	; select bank3
  4713  02BB  0825               	movf	(_angle_move+1)^(0+384),w
  4714  02BC  0021               	movlb	1	; select bank1
  4715  02BD  00A5               	movwf	(___flmul@a+1)^(0+128)
  4716  02BE  0023               	movlb	3	; select bank3
  4717  02BF  0824               	movf	_angle_move^(0+384),w
  4718  02C0  0021               	movlb	1	; select bank1
  4719  02C1  00A4               	movwf	___flmul@a^(0+128)
  4720  02C2  0023               	movlb	3	; select bank3
  4721  02C3  082B               	movf	(_valTime_TL+3)^(0+384),w
  4722  02C4  0021               	movlb	1	; select bank1
  4723  02C5  00A3               	movwf	(___flmul@b+3)^(0+128)
  4724  02C6  0023               	movlb	3	; select bank3
  4725  02C7  082A               	movf	(_valTime_TL+2)^(0+384),w
  4726  02C8  0021               	movlb	1	; select bank1
  4727  02C9  00A2               	movwf	(___flmul@b+2)^(0+128)
  4728  02CA  0023               	movlb	3	; select bank3
  4729  02CB  0829               	movf	(_valTime_TL+1)^(0+384),w
  4730  02CC  0021               	movlb	1	; select bank1
  4731  02CD  00A1               	movwf	(___flmul@b+1)^(0+128)
  4732  02CE  0023               	movlb	3	; select bank3
  4733  02CF  0828               	movf	_valTime_TL^(0+384),w
  4734  02D0  0021               	movlb	1	; select bank1
  4735  02D1  00A0               	movwf	___flmul@b^(0+128)
  4736  02D2  318D  257C  3180   	fcall	___flmul
  4737  02D5  0021               	movlb	1	; select bank1
  4738  02D6  0823               	movf	(?___flmul+3)^(0+128),w
  4739  02D7  0026               	movlb	6	; select bank6
  4740  02D8  00BB               	movwf	(_TimeLapseHandle$3327+3)^(0+768)
  4741  02D9  0021               	movlb	1	; select bank1
  4742  02DA  0822               	movf	(?___flmul+2)^(0+128),w
  4743  02DB  0026               	movlb	6	; select bank6
  4744  02DC  00BA               	movwf	(_TimeLapseHandle$3327+2)^(0+768)
  4745  02DD  0021               	movlb	1	; select bank1
  4746  02DE  0821               	movf	(?___flmul+1)^(0+128),w
  4747  02DF  0026               	movlb	6	; select bank6
  4748  02E0  00B9               	movwf	(_TimeLapseHandle$3327+1)^(0+768)
  4749  02E1  0021               	movlb	1	; select bank1
  4750  02E2  0820               	movf	?___flmul^(0+128),w
  4751  02E3  0026               	movlb	6	; select bank6
  4752  02E4  00B8               	movwf	_TimeLapseHandle$3327^(0+768)
  4753                           
  4754                           ;main.c: 515:         delay_frame = (angle_move*valTime_TL*1000)/6;
  4755  02E5  083B               	movf	(_TimeLapseHandle$3327+3)^(0+768),w
  4756  02E6  0021               	movlb	1	; select bank1
  4757  02E7  00A7               	movwf	(___flmul@a+3)^(0+128)
  4758  02E8  0026               	movlb	6	; select bank6
  4759  02E9  083A               	movf	(_TimeLapseHandle$3327+2)^(0+768),w
  4760  02EA  0021               	movlb	1	; select bank1
  4761  02EB  00A6               	movwf	(___flmul@a+2)^(0+128)
  4762  02EC  0026               	movlb	6	; select bank6
  4763  02ED  0839               	movf	(_TimeLapseHandle$3327+1)^(0+768),w
  4764  02EE  0021               	movlb	1	; select bank1
  4765  02EF  00A5               	movwf	(___flmul@a+1)^(0+128)
  4766  02F0  0026               	movlb	6	; select bank6
  4767  02F1  0838               	movf	_TimeLapseHandle$3327^(0+768),w
  4768  02F2  0021               	movlb	1	; select bank1
  4769  02F3  00A4               	movwf	___flmul@a^(0+128)
  4770  02F4  3044               	movlw	68
  4771  02F5  00A3               	movwf	(___flmul@b+3)^(0+128)
  4772  02F6  307A               	movlw	122
  4773  02F7  00A2               	movwf	(___flmul@b+2)^(0+128)
  4774  02F8  3000               	movlw	0
  4775  02F9  00A1               	movwf	(___flmul@b+1)^(0+128)
  4776  02FA  3000               	movlw	0
  4777  02FB  00A0               	movwf	___flmul@b^(0+128)
  4778  02FC  318D  257C  3180   	fcall	___flmul
  4779  02FF  0021               	movlb	1	; select bank1
  4780  0300  0823               	movf	(?___flmul+3)^(0+128),w
  4781  0301  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4782  0302  0822               	movf	(?___flmul+2)^(0+128),w
  4783  0303  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4784  0304  0821               	movf	(?___flmul+1)^(0+128),w
  4785  0305  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4786  0306  0820               	movf	?___flmul^(0+128),w
  4787  0307  00BE               	movwf	___fldiv@b^(0+128)
  4788  0308  3040               	movlw	64
  4789  0309  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4790  030A  30C0               	movlw	192
  4791  030B  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4792  030C  3000               	movlw	0
  4793  030D  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4794  030E  3000               	movlw	0
  4795  030F  00BA               	movwf	___fldiv@a^(0+128)
  4796  0310  3190  2074  3180   	fcall	___fldiv
  4797  0313  0021               	movlb	1	; select bank1
  4798  0314  083D               	movf	(?___fldiv+3)^(0+128),w
  4799  0315  00EB               	movwf	(___fltol@f1+3)^(0+128)
  4800  0316  083C               	movf	(?___fldiv+2)^(0+128),w
  4801  0317  00EA               	movwf	(___fltol@f1+2)^(0+128)
  4802  0318  083B               	movf	(?___fldiv+1)^(0+128),w
  4803  0319  00E9               	movwf	(___fltol@f1+1)^(0+128)
  4804  031A  083A               	movf	?___fldiv^(0+128),w
  4805  031B  00E8               	movwf	___fltol@f1^(0+128)
  4806  031C  3198  2012  3180   	fcall	___fltol
  4807  031F  0021               	movlb	1	; select bank1
  4808  0320  0869               	movf	(?___fltol+1)^(0+128),w
  4809  0321  0023               	movlb	3	; select bank3
  4810  0322  00DB               	movwf	(_delay_frame+1)^(0+384)
  4811  0323  0021               	movlb	1	; select bank1
  4812  0324  0868               	movf	?___fltol^(0+128),w
  4813  0325  0023               	movlb	3	; select bank3
  4814  0326  00DA               	movwf	_delay_frame^(0+384)
  4815                           
  4816                           ;main.c: 516:         time_move = (3.14159*valRadius_TL*angle_move*100)/(18*velocity_TL)
      +                          ;
  4817  0327  3040               	movlw	64
  4818  0328  0021               	movlb	1	; select bank1
  4819  0329  00A3               	movwf	(___flmul@b+3)^(0+128)
  4820  032A  3049               	movlw	73
  4821  032B  00A2               	movwf	(___flmul@b+2)^(0+128)
  4822  032C  300F               	movlw	15
  4823  032D  00A1               	movwf	(___flmul@b+1)^(0+128)
  4824  032E  30D0               	movlw	208
  4825  032F  00A0               	movwf	___flmul@b^(0+128)
  4826  0330  0023               	movlb	3	; select bank3
  4827  0331  0869               	movf	(_valRadius_TL+3)^(0+384),w
  4828  0332  0021               	movlb	1	; select bank1
  4829  0333  00A7               	movwf	(___flmul@a+3)^(0+128)
  4830  0334  0023               	movlb	3	; select bank3
  4831  0335  0868               	movf	(_valRadius_TL+2)^(0+384),w
  4832  0336  0021               	movlb	1	; select bank1
  4833  0337  00A6               	movwf	(___flmul@a+2)^(0+128)
  4834  0338  0023               	movlb	3	; select bank3
  4835  0339  0867               	movf	(_valRadius_TL+1)^(0+384),w
  4836  033A  0021               	movlb	1	; select bank1
  4837  033B  00A5               	movwf	(___flmul@a+1)^(0+128)
  4838  033C  0023               	movlb	3	; select bank3
  4839  033D  0866               	movf	_valRadius_TL^(0+384),w
  4840  033E  0021               	movlb	1	; select bank1
  4841  033F  00A4               	movwf	___flmul@a^(0+128)
  4842  0340  318D  257C  3180   	fcall	___flmul
  4843  0343  0021               	movlb	1	; select bank1
  4844  0344  0823               	movf	(?___flmul+3)^(0+128),w
  4845  0345  0026               	movlb	6	; select bank6
  4846  0346  00BB               	movwf	(_TimeLapseHandle$3327+3)^(0+768)
  4847  0347  0021               	movlb	1	; select bank1
  4848  0348  0822               	movf	(?___flmul+2)^(0+128),w
  4849  0349  0026               	movlb	6	; select bank6
  4850  034A  00BA               	movwf	(_TimeLapseHandle$3327+2)^(0+768)
  4851  034B  0021               	movlb	1	; select bank1
  4852  034C  0821               	movf	(?___flmul+1)^(0+128),w
  4853  034D  0026               	movlb	6	; select bank6
  4854  034E  00B9               	movwf	(_TimeLapseHandle$3327+1)^(0+768)
  4855  034F  0021               	movlb	1	; select bank1
  4856  0350  0820               	movf	?___flmul^(0+128),w
  4857  0351  0026               	movlb	6	; select bank6
  4858  0352  00B8               	movwf	_TimeLapseHandle$3327^(0+768)
  4859                           
  4860                           ;main.c: 516:         time_move = (3.14159*valRadius_TL*angle_move*100)/(18*velocity_TL)
      +                          ;
  4861  0353  0023               	movlb	3	; select bank3
  4862  0354  0827               	movf	(_angle_move+3)^(0+384),w
  4863  0355  0021               	movlb	1	; select bank1
  4864  0356  00A3               	movwf	(___flmul@b+3)^(0+128)
  4865  0357  0023               	movlb	3	; select bank3
  4866  0358  0826               	movf	(_angle_move+2)^(0+384),w
  4867  0359  0021               	movlb	1	; select bank1
  4868  035A  00A2               	movwf	(___flmul@b+2)^(0+128)
  4869  035B  0023               	movlb	3	; select bank3
  4870  035C  0825               	movf	(_angle_move+1)^(0+384),w
  4871  035D  0021               	movlb	1	; select bank1
  4872  035E  00A1               	movwf	(___flmul@b+1)^(0+128)
  4873  035F  0023               	movlb	3	; select bank3
  4874  0360  0824               	movf	_angle_move^(0+384),w
  4875  0361  0021               	movlb	1	; select bank1
  4876  0362  00A0               	movwf	___flmul@b^(0+128)
  4877  0363  0026               	movlb	6	; select bank6
  4878  0364  083B               	movf	(_TimeLapseHandle$3327+3)^(0+768),w
  4879  0365  0021               	movlb	1	; select bank1
  4880  0366  00A7               	movwf	(___flmul@a+3)^(0+128)
  4881  0367  0026               	movlb	6	; select bank6
  4882  0368  083A               	movf	(_TimeLapseHandle$3327+2)^(0+768),w
  4883  0369  0021               	movlb	1	; select bank1
  4884  036A  00A6               	movwf	(___flmul@a+2)^(0+128)
  4885  036B  0026               	movlb	6	; select bank6
  4886  036C  0839               	movf	(_TimeLapseHandle$3327+1)^(0+768),w
  4887  036D  0021               	movlb	1	; select bank1
  4888  036E  00A5               	movwf	(___flmul@a+1)^(0+128)
  4889  036F  0026               	movlb	6	; select bank6
  4890  0370  0838               	movf	_TimeLapseHandle$3327^(0+768),w
  4891  0371  0021               	movlb	1	; select bank1
  4892  0372  00A4               	movwf	___flmul@a^(0+128)
  4893  0373  318D  257C  3180   	fcall	___flmul
  4894  0376  0021               	movlb	1	; select bank1
  4895  0377  0823               	movf	(?___flmul+3)^(0+128),w
  4896  0378  0026               	movlb	6	; select bank6
  4897  0379  00B7               	movwf	(_TimeLapseHandle$3328+3)^(0+768)
  4898  037A  0021               	movlb	1	; select bank1
  4899  037B  0822               	movf	(?___flmul+2)^(0+128),w
  4900  037C  0026               	movlb	6	; select bank6
  4901  037D  00B6               	movwf	(_TimeLapseHandle$3328+2)^(0+768)
  4902  037E  0021               	movlb	1	; select bank1
  4903  037F  0821               	movf	(?___flmul+1)^(0+128),w
  4904  0380  0026               	movlb	6	; select bank6
  4905  0381  00B5               	movwf	(_TimeLapseHandle$3328+1)^(0+768)
  4906  0382  0021               	movlb	1	; select bank1
  4907  0383  0820               	movf	?___flmul^(0+128),w
  4908  0384  0026               	movlb	6	; select bank6
  4909  0385  00B4               	movwf	_TimeLapseHandle$3328^(0+768)
  4910                           
  4911                           ;main.c: 516:         time_move = (3.14159*valRadius_TL*angle_move*100)/(18*velocity_TL)
      +                          ;
  4912  0386  3044               	movlw	68
  4913  0387  0021               	movlb	1	; select bank1
  4914  0388  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4915  0389  3007               	movlw	7
  4916  038A  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4917  038B  3000               	movlw	0
  4918  038C  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4919  038D  3000               	movlw	0
  4920  038E  00BA               	movwf	___fldiv@a^(0+128)
  4921  038F  3042               	movlw	66
  4922  0390  00A3               	movwf	(___flmul@b+3)^(0+128)
  4923  0391  30C8               	movlw	200
  4924  0392  00A2               	movwf	(___flmul@b+2)^(0+128)
  4925  0393  3000               	movlw	0
  4926  0394  00A1               	movwf	(___flmul@b+1)^(0+128)
  4927  0395  3000               	movlw	0
  4928  0396  00A0               	movwf	___flmul@b^(0+128)
  4929  0397  0026               	movlb	6	; select bank6
  4930  0398  0837               	movf	(_TimeLapseHandle$3328+3)^(0+768),w
  4931  0399  0021               	movlb	1	; select bank1
  4932  039A  00A7               	movwf	(___flmul@a+3)^(0+128)
  4933  039B  0026               	movlb	6	; select bank6
  4934  039C  0836               	movf	(_TimeLapseHandle$3328+2)^(0+768),w
  4935  039D  0021               	movlb	1	; select bank1
  4936  039E  00A6               	movwf	(___flmul@a+2)^(0+128)
  4937  039F  0026               	movlb	6	; select bank6
  4938  03A0  0835               	movf	(_TimeLapseHandle$3328+1)^(0+768),w
  4939  03A1  0021               	movlb	1	; select bank1
  4940  03A2  00A5               	movwf	(___flmul@a+1)^(0+128)
  4941  03A3  0026               	movlb	6	; select bank6
  4942  03A4  0834               	movf	_TimeLapseHandle$3328^(0+768),w
  4943  03A5  0021               	movlb	1	; select bank1
  4944  03A6  00A4               	movwf	___flmul@a^(0+128)
  4945  03A7  318D  257C  3180   	fcall	___flmul
  4946  03AA  0021               	movlb	1	; select bank1
  4947  03AB  0823               	movf	(?___flmul+3)^(0+128),w
  4948  03AC  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4949  03AD  0822               	movf	(?___flmul+2)^(0+128),w
  4950  03AE  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4951  03AF  0821               	movf	(?___flmul+1)^(0+128),w
  4952  03B0  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4953  03B1  0820               	movf	?___flmul^(0+128),w
  4954  03B2  00BE               	movwf	___fldiv@b^(0+128)
  4955  03B3  3190  2074  3180   	fcall	___fldiv
  4956  03B6  0021               	movlb	1	; select bank1
  4957  03B7  083D               	movf	(?___fldiv+3)^(0+128),w
  4958  03B8  0023               	movlb	3	; select bank3
  4959  03B9  00A3               	movwf	(_time_move+3)^(0+384)
  4960  03BA  0021               	movlb	1	; select bank1
  4961  03BB  083C               	movf	(?___fldiv+2)^(0+128),w
  4962  03BC  0023               	movlb	3	; select bank3
  4963  03BD  00A2               	movwf	(_time_move+2)^(0+384)
  4964  03BE  0021               	movlb	1	; select bank1
  4965  03BF  083B               	movf	(?___fldiv+1)^(0+128),w
  4966  03C0  0023               	movlb	3	; select bank3
  4967  03C1  00A1               	movwf	(_time_move+1)^(0+384)
  4968  03C2  0021               	movlb	1	; select bank1
  4969  03C3  083A               	movf	?___fldiv^(0+128),w
  4970  03C4  0023               	movlb	3	; select bank3
  4971  03C5  00A0               	movwf	_time_move^(0+384)
  4972                           
  4973                           ;main.c: 517:         omega_TL = velocity_TL/valRadius_TL;
  4974  03C6  0869               	movf	(_valRadius_TL+3)^(0+384),w
  4975  03C7  0021               	movlb	1	; select bank1
  4976  03C8  00BD               	movwf	(___fldiv@a+3)^(0+128)
  4977  03C9  0023               	movlb	3	; select bank3
  4978  03CA  0868               	movf	(_valRadius_TL+2)^(0+384),w
  4979  03CB  0021               	movlb	1	; select bank1
  4980  03CC  00BC               	movwf	(___fldiv@a+2)^(0+128)
  4981  03CD  0023               	movlb	3	; select bank3
  4982  03CE  0867               	movf	(_valRadius_TL+1)^(0+384),w
  4983  03CF  0021               	movlb	1	; select bank1
  4984  03D0  00BB               	movwf	(___fldiv@a+1)^(0+128)
  4985  03D1  0023               	movlb	3	; select bank3
  4986  03D2  0866               	movf	_valRadius_TL^(0+384),w
  4987  03D3  0021               	movlb	1	; select bank1
  4988  03D4  00BA               	movwf	___fldiv@a^(0+128)
  4989  03D5  3041               	movlw	65
  4990  03D6  00C1               	movwf	(___fldiv@b+3)^(0+128)
  4991  03D7  30F0               	movlw	240
  4992  03D8  00C0               	movwf	(___fldiv@b+2)^(0+128)
  4993  03D9  3000               	movlw	0
  4994  03DA  00BF               	movwf	(___fldiv@b+1)^(0+128)
  4995  03DB  3000               	movlw	0
  4996  03DC  00BE               	movwf	___fldiv@b^(0+128)
  4997  03DD  3190  2074  3180   	fcall	___fldiv
  4998  03E0  0021               	movlb	1	; select bank1
  4999  03E1  083D               	movf	(?___fldiv+3)^(0+128),w
  5000  03E2  0024               	movlb	4	; select bank4
  5001  03E3  00E9               	movwf	(_omega_TL+3)^(0+512)
  5002  03E4  0021               	movlb	1	; select bank1
  5003  03E5  083C               	movf	(?___fldiv+2)^(0+128),w
  5004  03E6  0024               	movlb	4	; select bank4
  5005  03E7  00E8               	movwf	(_omega_TL+2)^(0+512)
  5006  03E8  0021               	movlb	1	; select bank1
  5007  03E9  083B               	movf	(?___fldiv+1)^(0+128),w
  5008  03EA  0024               	movlb	4	; select bank4
  5009  03EB  00E7               	movwf	(_omega_TL+1)^(0+512)
  5010  03EC  0021               	movlb	1	; select bank1
  5011  03ED  083A               	movf	?___fldiv^(0+128),w
  5012  03EE  0024               	movlb	4	; select bank4
  5013  03EF  00E6               	movwf	_omega_TL^(0+512)
  5014  03F0                     l9329:
  5015                           
  5016                           ;main.c: 518:         flagCamera = 3;
  5017  03F0  3003               	movlw	3
  5018  03F1  0020               	movlb	0	; select bank0
  5019  03F2  00D3               	movwf	??_TimeLapseHandle
  5020  03F3  0853               	movf	??_TimeLapseHandle,w
  5021  03F4  0022               	movlb	2	; select bank2
  5022  03F5  00DD               	movwf	_flagCamera^(0+256)
  5023  03F6                     l1668:
  5024  03F6  0008               	return
  5025  03F7                     __end_of_TimeLapseHandle:
  5026                           
  5027                           	psect	text2
  5028  084F                     __ptext2:	
  5029 ;; *************** function _TimeLapseControl *****************
  5030 ;; Defined at:
  5031 ;;		line 522 in file "main.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  i               2   76[BANK1 ] int 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;Total ram usage:        3 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; Hardware stack levels required when called: 6
  5052 ;; This function calls:
  5053 ;;		_EUSART1_Write
  5054 ;;		___fleq
  5055 ;;		___fltol
  5056 ;;		___xxtofl
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _TimeLapseControl
  5064  084F                     _TimeLapseControl:
  5065  084F                     l9331:	
  5066                           ;incstack = 0
  5067                           ; Regs used in _TimeLapseControl: [wreg+status,2+status,0+pclath+cstack]
  5068                           
  5069                           
  5070                           ;main.c: 524:     if(flagCamera == 3){
  5071  084F  3003               	movlw	3
  5072  0850  0022               	movlb	2	; select bank2
  5073  0851  065D               	xorwf	_flagCamera^(0+256),w
  5074  0852  1D03               	btfss	3,2
  5075  0853  2855               	goto	u10081
  5076  0854  2856               	goto	u10080
  5077  0855                     u10081:
  5078  0855  28FE               	goto	l1679
  5079  0856                     u10080:
  5080  0856                     l9333:
  5081                           
  5082                           ;main.c: 525:         if(cnt_frame <= sum_frame){
  5083  0856  0023               	movlb	3	; select bank3
  5084  0857  0859               	movf	(_cnt_frame+1)^(0+384),w
  5085  0858  0022               	movlb	2	; select bank2
  5086  0859  0265               	subwf	(_sum_frame+1)^(0+256),w
  5087  085A  1D03               	skipz
  5088  085B  2860               	goto	u10095
  5089  085C  0023               	movlb	3	; select bank3
  5090  085D  0858               	movf	_cnt_frame^(0+384),w
  5091  085E  0022               	movlb	2	; select bank2
  5092  085F  0264               	subwf	_sum_frame^(0+256),w
  5093  0860                     u10095:
  5094  0860  1C03               	skipc
  5095  0861  2863               	goto	u10091
  5096  0862  2864               	goto	u10090
  5097  0863                     u10091:
  5098  0863  28F8               	goto	l9357
  5099  0864                     u10090:
  5100  0864                     l9335:
  5101                           
  5102                           ;main.c: 526:             if(flag_stop == 0){
  5103  0864  0020               	movlb	0	; select bank0
  5104  0865  0859               	movf	_flag_stop,w
  5105  0866  1D03               	btfss	3,2
  5106  0867  2869               	goto	u10101
  5107  0868  286A               	goto	u10100
  5108  0869                     u10101:
  5109  0869  28FE               	goto	l1679
  5110  086A                     u10100:
  5111  086A                     l9337:
  5112                           
  5113                           ;main.c: 527:                 cnt_frame++;
  5114  086A  3001               	movlw	1
  5115  086B  0023               	movlb	3	; select bank3
  5116  086C  07D8               	addwf	_cnt_frame^(0+384),f
  5117  086D  3000               	movlw	0
  5118  086E  3DD9               	addwfc	(_cnt_frame+1)^(0+384),f
  5119  086F                     l9339:
  5120                           
  5121                           ;main.c: 528:                 EUSART1_Write('1');
  5122  086F  3031               	movlw	49
  5123  0870  3187  27F6  3188   	fcall	_EUSART1_Write
  5124  0873                     l9341:
  5125                           
  5126                           ;main.c: 529:                 for(int i = 0; i < delay_frame; i++) _delay((unsigned long
      +                          )((1)*(16000000/4000.0)));
  5127  0873  0021               	movlb	1	; select bank1
  5128  0874  01EC               	clrf	TimeLapseControl@i^(0+128)
  5129  0875  01ED               	clrf	(TimeLapseControl@i+1)^(0+128)
  5130  0876  2885               	goto	l1674
  5131  0877                     l9343:
  5132  0877  3006               	movlw	6
  5133  0878  0020               	movlb	0	; select bank0
  5134  0879  00D3               	movwf	??_TimeLapseControl
  5135  087A  3030               	movlw	48
  5136  087B                     u10187:
  5137  087B  0B89               	decfsz	9,f
  5138  087C  287B               	goto	u10187
  5139  087D  0BD3               	decfsz	??_TimeLapseControl,f
  5140  087E  287B               	goto	u10187
  5141  087F  0000               	nop
  5142  0880  3001               	movlw	1
  5143  0881  0021               	movlb	1	; select bank1
  5144  0882  07EC               	addwf	TimeLapseControl@i^(0+128),f
  5145  0883  3000               	movlw	0
  5146  0884  3DED               	addwfc	(TimeLapseControl@i+1)^(0+128),f
  5147  0885                     l1674:
  5148  0885  0023               	movlb	3	; select bank3
  5149  0886  085B               	movf	(_delay_frame+1)^(0+384),w
  5150  0887  0021               	movlb	1	; select bank1
  5151  0888  026D               	subwf	(TimeLapseControl@i+1)^(0+128),w
  5152  0889  1D03               	skipz
  5153  088A  288F               	goto	u10115
  5154  088B  0023               	movlb	3	; select bank3
  5155  088C  085A               	movf	_delay_frame^(0+384),w
  5156  088D  0021               	movlb	1	; select bank1
  5157  088E  026C               	subwf	TimeLapseControl@i^(0+128),w
  5158  088F                     u10115:
  5159  088F  1C03               	skipc
  5160  0890  2892               	goto	u10111
  5161  0891  2893               	goto	u10110
  5162  0892                     u10111:
  5163  0892  2877               	goto	l9343
  5164  0893                     u10110:
  5165  0893                     l9345:
  5166                           
  5167                           ;main.c: 530:                 if(totalTime != time_move) totalTime = time_move;
  5168  0893  0020               	movlb	0	; select bank0
  5169  0894  0854               	movf	_totalTime,w
  5170  0895  00C3               	movwf	___xxtofl@val
  5171  0896  0855               	movf	_totalTime+1,w
  5172  0897  00C4               	movwf	___xxtofl@val+1
  5173  0898  01C5               	clrf	___xxtofl@val+2
  5174  0899  01C6               	clrf	___xxtofl@val+3
  5175  089A  3000               	movlw	0
  5176  089B  319A  225D  3188   	fcall	___xxtofl
  5177  089E  0020               	movlb	0	; select bank0
  5178  089F  0846               	movf	?___xxtofl+3,w
  5179  08A0  0021               	movlb	1	; select bank1
  5180  08A1  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  5181  08A2  0020               	movlb	0	; select bank0
  5182  08A3  0845               	movf	?___xxtofl+2,w
  5183  08A4  0021               	movlb	1	; select bank1
  5184  08A5  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  5185  08A6  0020               	movlb	0	; select bank0
  5186  08A7  0844               	movf	?___xxtofl+1,w
  5187  08A8  0021               	movlb	1	; select bank1
  5188  08A9  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  5189  08AA  0020               	movlb	0	; select bank0
  5190  08AB  0843               	movf	?___xxtofl,w
  5191  08AC  0021               	movlb	1	; select bank1
  5192  08AD  00A0               	movwf	___fleq@ff1^(0+128)
  5193  08AE  0023               	movlb	3	; select bank3
  5194  08AF  0823               	movf	(_time_move+3)^(0+384),w
  5195  08B0  0021               	movlb	1	; select bank1
  5196  08B1  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  5197  08B2  0023               	movlb	3	; select bank3
  5198  08B3  0822               	movf	(_time_move+2)^(0+384),w
  5199  08B4  0021               	movlb	1	; select bank1
  5200  08B5  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  5201  08B6  0023               	movlb	3	; select bank3
  5202  08B7  0821               	movf	(_time_move+1)^(0+384),w
  5203  08B8  0021               	movlb	1	; select bank1
  5204  08B9  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  5205  08BA  0023               	movlb	3	; select bank3
  5206  08BB  0820               	movf	_time_move^(0+384),w
  5207  08BC  0021               	movlb	1	; select bank1
  5208  08BD  00A4               	movwf	___fleq@ff2^(0+128)
  5209  08BE  3188  2000  3188   	fcall	___fleq
  5210  08C1  1803               	btfsc	3,0
  5211  08C2  28C4               	goto	u10121
  5212  08C3  28C5               	goto	u10120
  5213  08C4                     u10121:
  5214  08C4  28E0               	goto	l9349
  5215  08C5                     u10120:
  5216  08C5                     l9347:
  5217  08C5  0023               	movlb	3	; select bank3
  5218  08C6  0823               	movf	(_time_move+3)^(0+384),w
  5219  08C7  0021               	movlb	1	; select bank1
  5220  08C8  00EB               	movwf	(___fltol@f1+3)^(0+128)
  5221  08C9  0023               	movlb	3	; select bank3
  5222  08CA  0822               	movf	(_time_move+2)^(0+384),w
  5223  08CB  0021               	movlb	1	; select bank1
  5224  08CC  00EA               	movwf	(___fltol@f1+2)^(0+128)
  5225  08CD  0023               	movlb	3	; select bank3
  5226  08CE  0821               	movf	(_time_move+1)^(0+384),w
  5227  08CF  0021               	movlb	1	; select bank1
  5228  08D0  00E9               	movwf	(___fltol@f1+1)^(0+128)
  5229  08D1  0023               	movlb	3	; select bank3
  5230  08D2  0820               	movf	_time_move^(0+384),w
  5231  08D3  0021               	movlb	1	; select bank1
  5232  08D4  00E8               	movwf	___fltol@f1^(0+128)
  5233  08D5  3198  2012  3188   	fcall	___fltol
  5234  08D8  0021               	movlb	1	; select bank1
  5235  08D9  0869               	movf	(?___fltol+1)^(0+128),w
  5236  08DA  0020               	movlb	0	; select bank0
  5237  08DB  00D5               	movwf	_totalTime+1
  5238  08DC  0021               	movlb	1	; select bank1
  5239  08DD  0868               	movf	?___fltol^(0+128),w
  5240  08DE  0020               	movlb	0	; select bank0
  5241  08DF  00D4               	movwf	_totalTime
  5242  08E0                     l9349:
  5243                           
  5244                           ;main.c: 531:                 flag_stop = 1;
  5245  08E0  0020               	movlb	0	; select bank0
  5246  08E1  01D9               	clrf	_flag_stop
  5247  08E2  0AD9               	incf	_flag_stop,f
  5248  08E3                     l9351:
  5249                           
  5250                           ;main.c: 532:                 cntTime = 0;
  5251  08E3  0022               	movlb	2	; select bank2
  5252  08E4  01DA               	clrf	_cntTime^(0+256)
  5253  08E5  01DB               	clrf	(_cntTime+1)^(0+256)
  5254  08E6                     l9353:
  5255                           
  5256                           ;main.c: 533:                 velocity_sys = velocity_TL;
  5257  08E6  3041               	movlw	65
  5258  08E7  00C7               	movwf	(_velocity_sys+3)^(0+256)
  5259  08E8  30F0               	movlw	240
  5260  08E9  00C6               	movwf	(_velocity_sys+2)^(0+256)
  5261  08EA  3000               	movlw	0
  5262  08EB  00C5               	movwf	(_velocity_sys+1)^(0+256)
  5263  08EC  3000               	movlw	0
  5264  08ED  00C4               	movwf	_velocity_sys^(0+256)
  5265  08EE                     l9355:
  5266                           
  5267                           ;main.c: 534:                 omega_sys = omega_TL;
  5268  08EE  0024               	movlb	4	; select bank4
  5269  08EF  0869               	movf	(_omega_TL+3)^(0+512),w
  5270  08F0  00E5               	movwf	(_omega_sys+3)^(0+512)
  5271  08F1  0868               	movf	(_omega_TL+2)^(0+512),w
  5272  08F2  00E4               	movwf	(_omega_sys+2)^(0+512)
  5273  08F3  0867               	movf	(_omega_TL+1)^(0+512),w
  5274  08F4  00E3               	movwf	(_omega_sys+1)^(0+512)
  5275  08F5  0866               	movf	_omega_TL^(0+512),w
  5276  08F6  00E2               	movwf	_omega_sys^(0+512)
  5277  08F7  28FE               	goto	l1679
  5278  08F8                     l9357:
  5279                           
  5280                           ;main.c: 538:             EUSART1_Write('d');
  5281  08F8  3064               	movlw	100
  5282  08F9  3187  27F6  3188   	fcall	_EUSART1_Write
  5283  08FC                     l9359:
  5284                           
  5285                           ;main.c: 539:             flagCamera = 0;
  5286  08FC  0022               	movlb	2	; select bank2
  5287  08FD  01DD               	clrf	_flagCamera^(0+256)
  5288  08FE                     l1679:
  5289  08FE  0008               	return
  5290  08FF                     __end_of_TimeLapseControl:
  5291                           
  5292                           	psect	text3
  5293  07F6                     __ptext3:	
  5294 ;; *************** function _EUSART1_Write *****************
  5295 ;; Defined at:
  5296 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  txData          1    wreg     unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  txData          1   14[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;Total ram usage:        1 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 5
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_TimeLapseControl
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _EUSART1_Write
  5326  07F6                     _EUSART1_Write:
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in _EUSART1_Write: [wreg]
  5330                           ;EUSART1_Write@txData stored from wreg
  5331  07F6  0020               	movlb	0	; select bank0
  5332  07F7  00AE               	movwf	EUSART1_Write@txData
  5333  07F8                     l7009:
  5334  07F8                     l531:	
  5335                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  5336                           
  5337                           
  5338                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5339  07F8  1E11               	btfss	17,4	;volatile
  5340  07F9  2FFB               	goto	u5941
  5341  07FA  2FFC               	goto	u5940
  5342  07FB                     u5941:
  5343  07FB  2FF8               	goto	l531
  5344  07FC                     u5940:
  5345  07FC                     l7011:
  5346                           
  5347                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  5348  07FC  082E               	movf	EUSART1_Write@txData,w
  5349  07FD  0023               	movlb	3	; select bank3
  5350  07FE  009A               	movwf	26	;volatile
  5351  07FF                     l534:
  5352  07FF  0008               	return
  5353  0800                     __end_of_EUSART1_Write:
  5354                           
  5355                           	psect	text4
  5356  263C                     __ptext4:	
  5357 ;; *************** function _SetUpModeHalf_step *****************
  5358 ;; Defined at:
  5359 ;;		line 218 in file "main.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		None
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used: 1
  5379 ;; Hardware stack levels required when called: 5
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_main
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _SetUpModeHalf_step
  5389  263C                     _SetUpModeHalf_step:
  5390  263C                     l7139:	
  5391                           ;incstack = 0
  5392                           ; Regs used in _SetUpModeHalf_step: []
  5393                           
  5394                           
  5395                           ;main.c: 220:     LATFbits.LATF0 = 1;
  5396  263C  0027               	movlb	7	; select bank7
  5397  263D  140C               	bsf	12,0	;volatile
  5398                           
  5399                           ;main.c: 221:     LATFbits.LATF1 = 0;
  5400  263E  108C               	bcf	12,1	;volatile
  5401                           
  5402                           ;main.c: 222:     LATFbits.LATF4 = 1;
  5403  263F  160C               	bsf	12,4	;volatile
  5404                           
  5405                           ;main.c: 223:     LATFbits.LATF5 = 0;
  5406  2640  128C               	bcf	12,5	;volatile
  5407                           
  5408                           ;main.c: 224:     LATBbits.LATB3 = 0;
  5409  2641  0022               	movlb	2	; select bank2
  5410  2642  118D               	bcf	13,3	;volatile
  5411                           
  5412                           ;main.c: 225:     LATBbits.LATB2 = 1;
  5413  2643  150D               	bsf	13,2	;volatile
  5414  2644                     l1508:
  5415  2644  0008               	return
  5416  2645                     __end_of_SetUpModeHalf_step:
  5417                           
  5418                           	psect	text5
  5419  26A7                     __ptext5:	
  5420 ;; *************** function _SYSTEM_Initialize *****************
  5421 ;; Defined at:
  5422 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;		None
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;		None
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0, pclath, cstack
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;Total ram usage:        0 bytes
  5441 ;; Hardware stack levels used: 1
  5442 ;; Hardware stack levels required when called: 7
  5443 ;; This function calls:
  5444 ;;		_EUSART1_Initialize
  5445 ;;		_EUSART2_Initialize
  5446 ;;		_I2C1_Initialize
  5447 ;;		_I2C2_Initialize
  5448 ;;		_OSCILLATOR_Initialize
  5449 ;;		_PIN_MANAGER_Initialize
  5450 ;;		_TMR1_Initialize
  5451 ;;		_WDT_Initialize
  5452 ;; This function is called by:
  5453 ;;		_main
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           
  5458                           ;psect for function _SYSTEM_Initialize
  5459  26A7                     _SYSTEM_Initialize:
  5460  26A7                     l7097:	
  5461                           ;incstack = 0
  5462                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5463                           
  5464                           
  5465                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
  5466  26A7  31A6  264F  31A6   	fcall	_I2C1_Initialize
  5467                           
  5468                           ;mcc_generated_files/mcc.c: 54:     I2C2_Initialize();
  5469  26AA  31A6  2659  31A6   	fcall	_I2C2_Initialize
  5470                           
  5471                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  5472  26AD  3190  200C  31A6   	fcall	_PIN_MANAGER_Initialize
  5473                           
  5474                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  5475  26B0  31A5  25F6  31A6   	fcall	_OSCILLATOR_Initialize
  5476                           
  5477                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
  5478  26B3  31A5  25D8  31A6   	fcall	_WDT_Initialize
  5479                           
  5480                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  5481  26B6  31A6  26DA  31A6   	fcall	_TMR1_Initialize
  5482                           
  5483                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  5484  26B9  31A7  275C  31A6   	fcall	_EUSART1_Initialize
  5485                           
  5486                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  5487  26BC  3187  27D0  31A6   	fcall	_EUSART2_Initialize
  5488  26BF                     l376:
  5489  26BF  0008               	return
  5490  26C0                     __end_of_SYSTEM_Initialize:
  5491                           
  5492                           	psect	text6
  5493  25D8                     __ptext6:	
  5494 ;; *************** function _WDT_Initialize *****************
  5495 ;; Defined at:
  5496 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 5
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_SYSTEM_Initialize
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function _WDT_Initialize
  5526  25D8                     _WDT_Initialize:
  5527  25D8                     l6953:	
  5528                           ;incstack = 0
  5529                           ; Regs used in _WDT_Initialize: [wreg]
  5530                           
  5531                           
  5532                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  5533  25D8  3016               	movlw	22
  5534  25D9  0021               	movlb	1	; select bank1
  5535  25DA  0097               	movwf	23	;volatile
  5536  25DB                     l382:
  5537  25DB  0008               	return
  5538  25DC                     __end_of_WDT_Initialize:
  5539                           
  5540                           	psect	text7
  5541  26DA                     __ptext7:	
  5542 ;; *************** function _TMR1_Initialize *****************
  5543 ;; Defined at:
  5544 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 6
  5565 ;; This function calls:
  5566 ;;		_TMR1_SetInterruptHandler
  5567 ;; This function is called by:
  5568 ;;		_SYSTEM_Initialize
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _TMR1_Initialize
  5574  26DA                     _TMR1_Initialize:
  5575  26DA                     l6955:	
  5576                           ;incstack = 0
  5577                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5578                           
  5579                           
  5580                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  5581  26DA  0020               	movlb	0	; select bank0
  5582  26DB  0199               	clrf	25	;volatile
  5583  26DC                     l6957:
  5584                           
  5585                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xC1;
  5586  26DC  30C1               	movlw	193
  5587  26DD  0097               	movwf	23	;volatile
  5588  26DE                     l6959:
  5589                           
  5590                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x80;
  5591  26DE  3080               	movlw	128
  5592  26DF  0096               	movwf	22	;volatile
  5593  26E0                     l6961:
  5594                           
  5595                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  5596  26E0  1011               	bcf	17,0	;volatile
  5597  26E1                     l6963:
  5598                           
  5599                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5600  26E1  0817               	movf	23,w	;volatile
  5601  26E2  0022               	movlb	2	; select bank2
  5602  26E3  00EC               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  5603  26E4  0020               	movlb	0	; select bank0
  5604  26E5  0816               	movf	22,w	;volatile
  5605  26E6  0022               	movlb	2	; select bank2
  5606  26E7  00EB               	movwf	_timer1ReloadVal^(0+256)	;volatile
  5607  26E8                     l6965:
  5608                           
  5609                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  5610  26E8  0021               	movlb	1	; select bank1
  5611  26E9  1411               	bsf	17,0	;volatile
  5612  26EA                     l6967:
  5613                           
  5614                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  5615  26EA  3000               	movlw	low _TMR1_DefaultInterruptHandler
  5616  26EB  0020               	movlb	0	; select bank0
  5617  26EC  00AE               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5618  26ED  3018               	movlw	high _TMR1_DefaultInterruptHandler
  5619  26EE  00AF               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5620  26EF  31A6  2633  31A6   	fcall	_TMR1_SetInterruptHandler
  5621  26F2                     l6969:
  5622                           
  5623                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x41;
  5624  26F2  3041               	movlw	65
  5625  26F3  0020               	movlb	0	; select bank0
  5626  26F4  0098               	movwf	24	;volatile
  5627  26F5                     l411:
  5628  26F5  0008               	return
  5629  26F6                     __end_of_TMR1_Initialize:
  5630                           
  5631                           	psect	text8
  5632  2633                     __ptext8:	
  5633 ;; *************** function _TMR1_SetInterruptHandler *****************
  5634 ;; Defined at:
  5635 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  InterruptHan    2   14[BANK0 ] PTR FTN()void 
  5638 ;;		 -> T1_ROBOT_ISR(1), TMR1_DefaultInterruptHandler(1), 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  1    wreg      void 
  5643 ;; Registers used:
  5644 ;;		wreg
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:        2 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; Hardware stack levels required when called: 5
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_TMR1_Initialize
  5661 ;;		_main
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           
  5666                           ;psect for function _TMR1_SetInterruptHandler
  5667  2633                     _TMR1_SetInterruptHandler:
  5668  2633                     l6721:	
  5669                           ;incstack = 0
  5670                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  5671                           
  5672                           
  5673                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  5674  2633  0020               	movlb	0	; select bank0
  5675  2634  082F               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  5676  2635  0023               	movlb	3	; select bank3
  5677  2636  00EF               	movwf	(_TMR1_InterruptHandler+1)^(0+384)
  5678  2637  0020               	movlb	0	; select bank0
  5679  2638  082E               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  5680  2639  0023               	movlb	3	; select bank3
  5681  263A  00EE               	movwf	_TMR1_InterruptHandler^(0+384)
  5682  263B                     l444:
  5683  263B  0008               	return
  5684  263C                     __end_of_TMR1_SetInterruptHandler:
  5685                           
  5686                           	psect	text9
  5687  100C                     __ptext9:	
  5688 ;; *************** function _PIN_MANAGER_Initialize *****************
  5689 ;; Defined at:
  5690 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;Total ram usage:        0 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 5
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_SYSTEM_Initialize
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           
  5719                           ;psect for function _PIN_MANAGER_Initialize
  5720  100C                     _PIN_MANAGER_Initialize:
  5721  100C                     l6917:	
  5722                           ;incstack = 0
  5723                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5724                           
  5725                           
  5726                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  5727  100C  0022               	movlb	2	; select bank2
  5728  100D  0190               	clrf	16	;volatile
  5729                           
  5730                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  5731  100E  018F               	clrf	15	;volatile
  5732                           
  5733                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5734  100F  018C               	clrf	12	;volatile
  5735                           
  5736                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
  5737  1010  0027               	movlb	7	; select bank7
  5738  1011  018C               	clrf	12	;volatile
  5739                           
  5740                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  5741  1012  0022               	movlb	2	; select bank2
  5742  1013  018D               	clrf	13	;volatile
  5743                           
  5744                           ;mcc_generated_files/pin_manager.c: 65:     LATG = 0x00;
  5745  1014  0027               	movlb	7	; select bank7
  5746  1015  018D               	clrf	13	;volatile
  5747                           
  5748                           ;mcc_generated_files/pin_manager.c: 66:     LATC = 0x00;
  5749  1016  0022               	movlb	2	; select bank2
  5750  1017  018E               	clrf	14	;volatile
  5751  1018                     l6919:
  5752                           
  5753                           ;mcc_generated_files/pin_manager.c: 71:     TRISE = 0xFF;
  5754  1018  30FF               	movlw	255
  5755  1019  0021               	movlb	1	; select bank1
  5756  101A  0090               	movwf	16	;volatile
  5757  101B                     l6921:
  5758                           
  5759                           ;mcc_generated_files/pin_manager.c: 72:     TRISF = 0x00;
  5760  101B  0026               	movlb	6	; select bank6
  5761  101C  018C               	clrf	12	;volatile
  5762                           
  5763                           ;mcc_generated_files/pin_manager.c: 73:     TRISA = 0xFF;
  5764  101D  30FF               	movlw	255
  5765  101E  0021               	movlb	1	; select bank1
  5766  101F  008C               	movwf	12	;volatile
  5767                           
  5768                           ;mcc_generated_files/pin_manager.c: 74:     TRISG = 0x3D;
  5769  1020  303D               	movlw	61
  5770  1021  0026               	movlb	6	; select bank6
  5771  1022  008D               	movwf	13	;volatile
  5772                           
  5773                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xF0;
  5774  1023  30F0               	movlw	240
  5775  1024  0021               	movlb	1	; select bank1
  5776  1025  008D               	movwf	13	;volatile
  5777                           
  5778                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0xBB;
  5779  1026  30BB               	movlw	187
  5780  1027  008E               	movwf	14	;volatile
  5781                           
  5782                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFF;
  5783  1028  30FF               	movlw	255
  5784  1029  008F               	movwf	15	;volatile
  5785                           
  5786                           ;mcc_generated_files/pin_manager.c: 82:     ANSELE = 0x07;
  5787  102A  3007               	movlw	7
  5788  102B  0023               	movlb	3	; select bank3
  5789  102C  0090               	movwf	16	;volatile
  5790                           
  5791                           ;mcc_generated_files/pin_manager.c: 83:     ANSELG = 0x18;
  5792  102D  3018               	movlw	24
  5793  102E  0028               	movlb	8	; select bank8
  5794  102F  008D               	movwf	13	;volatile
  5795                           
  5796                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0xFF;
  5797  1030  30FF               	movlw	255
  5798  1031  008C               	movwf	12	;volatile
  5799                           
  5800                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0x2F;
  5801  1032  302F               	movlw	47
  5802  1033  0023               	movlb	3	; select bank3
  5803  1034  008C               	movwf	12	;volatile
  5804  1035                     l6923:
  5805                           
  5806                           ;mcc_generated_files/pin_manager.c: 90:     WPUB = 0x00;
  5807  1035  0024               	movlb	4	; select bank4
  5808  1036  018D               	clrf	13	;volatile
  5809  1037                     l6925:
  5810                           
  5811                           ;mcc_generated_files/pin_manager.c: 91:     WPUG = 0x00;
  5812  1037  0029               	movlb	9	; select bank9
  5813  1038  018D               	clrf	13	;volatile
  5814  1039                     l6927:
  5815                           
  5816                           ;mcc_generated_files/pin_manager.c: 92:     OPTION_REGbits.nWPUEN = 1;
  5817  1039  0021               	movlb	1	; select bank1
  5818  103A  1795               	bsf	21,7	;volatile
  5819  103B                     l6929:
  5820                           
  5821                           ;mcc_generated_files/pin_manager.c: 98:     APFCON = 0x00;
  5822  103B  0022               	movlb	2	; select bank2
  5823  103C  019D               	clrf	29	;volatile
  5824  103D                     l346:
  5825  103D  0008               	return
  5826  103E                     __end_of_PIN_MANAGER_Initialize:
  5827                           
  5828                           	psect	text10
  5829  25F6                     __ptext10:	
  5830 ;; *************** function _OSCILLATOR_Initialize *****************
  5831 ;; Defined at:
  5832 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 5
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_SYSTEM_Initialize
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           
  5861                           ;psect for function _OSCILLATOR_Initialize
  5862  25F6                     _OSCILLATOR_Initialize:
  5863  25F6                     l6947:	
  5864                           ;incstack = 0
  5865                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5866                           
  5867                           
  5868                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x7A;
  5869  25F6  307A               	movlw	122
  5870  25F7  0021               	movlb	1	; select bank1
  5871  25F8  0099               	movwf	25	;volatile
  5872  25F9                     l6949:
  5873                           
  5874                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  5875  25F9  0198               	clrf	24	;volatile
  5876  25FA                     l6951:
  5877                           
  5878                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  5879  25FA  0022               	movlb	2	; select bank2
  5880  25FB  0196               	clrf	22	;volatile
  5881  25FC                     l379:
  5882  25FC  0008               	return
  5883  25FD                     __end_of_OSCILLATOR_Initialize:
  5884                           
  5885                           	psect	text11
  5886  2659                     __ptext11:	
  5887 ;; *************** function _I2C2_Initialize *****************
  5888 ;; Defined at:
  5889 ;;		line 167 in file "mcc_generated_files/i2c2_master.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 5
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_SYSTEM_Initialize
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           
  5918                           ;psect for function _I2C2_Initialize
  5919  2659                     _I2C2_Initialize:
  5920  2659                     l6939:	
  5921                           ;incstack = 0
  5922                           ; Regs used in _I2C2_Initialize: [wreg+status,2]
  5923                           
  5924                           
  5925                           ;mcc_generated_files/i2c2_master.c: 169:     SSP2STAT = 0x80;
  5926  2659  3080               	movlw	128
  5927  265A  0024               	movlb	4	; select bank4
  5928  265B  009C               	movwf	28	;volatile
  5929                           
  5930                           ;mcc_generated_files/i2c2_master.c: 170:     SSP2CON1 = 0x08;
  5931  265C  3008               	movlw	8
  5932  265D  009D               	movwf	29	;volatile
  5933  265E                     l6941:
  5934                           
  5935                           ;mcc_generated_files/i2c2_master.c: 171:     SSP2CON2 = 0x00;
  5936  265E  019E               	clrf	30	;volatile
  5937  265F                     l6943:
  5938                           
  5939                           ;mcc_generated_files/i2c2_master.c: 172:     SSP2ADD = 0x27;
  5940  265F  3027               	movlw	39
  5941  2660  009A               	movwf	26	;volatile
  5942  2661                     l6945:
  5943                           
  5944                           ;mcc_generated_files/i2c2_master.c: 173:     SSP2CON1bits.SSPEN = 0;
  5945  2661  129D               	bcf	29,5	;volatile
  5946  2662                     l994:
  5947  2662  0008               	return
  5948  2663                     __end_of_I2C2_Initialize:
  5949                           
  5950                           	psect	text12
  5951  264F                     __ptext12:	
  5952 ;; *************** function _I2C1_Initialize *****************
  5953 ;; Defined at:
  5954 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, status,2
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;Total ram usage:        0 bytes
  5973 ;; Hardware stack levels used: 1
  5974 ;; Hardware stack levels required when called: 5
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_SYSTEM_Initialize
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _I2C1_Initialize
  5984  264F                     _I2C1_Initialize:
  5985  264F                     l6931:	
  5986                           ;incstack = 0
  5987                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  5988                           
  5989                           
  5990                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
  5991  264F  3080               	movlw	128
  5992  2650  0024               	movlb	4	; select bank4
  5993  2651  0094               	movwf	20	;volatile
  5994                           
  5995                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
  5996  2652  3008               	movlw	8
  5997  2653  0095               	movwf	21	;volatile
  5998  2654                     l6933:
  5999                           
  6000                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
  6001  2654  0196               	clrf	22	;volatile
  6002  2655                     l6935:
  6003                           
  6004                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x27;
  6005  2655  3027               	movlw	39
  6006  2656  0092               	movwf	18	;volatile
  6007  2657                     l6937:
  6008                           
  6009                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  6010  2657  1295               	bcf	21,5	;volatile
  6011  2658                     l659:
  6012  2658  0008               	return
  6013  2659                     __end_of_I2C1_Initialize:
  6014                           
  6015                           	psect	text13
  6016  07D0                     __ptext13:	
  6017 ;; *************** function _EUSART2_Initialize *****************
  6018 ;; Defined at:
  6019 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 6
  6040 ;; This function calls:
  6041 ;;		_EUSART2_SetErrorHandler
  6042 ;;		_EUSART2_SetFramingErrorHandler
  6043 ;;		_EUSART2_SetOverrunErrorHandler
  6044 ;; This function is called by:
  6045 ;;		_SYSTEM_Initialize
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _EUSART2_Initialize
  6051  07D0                     _EUSART2_Initialize:
  6052  07D0                     l6981:	
  6053                           ;incstack = 0
  6054                           ; Regs used in _EUSART2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6055                           
  6056                           
  6057                           ;mcc_generated_files/eusart2.c: 71:     BAUD2CON = 0x08;
  6058  07D0  3008               	movlw	8
  6059  07D1  0029               	movlb	9	; select bank9
  6060  07D2  0097               	movwf	23	;volatile
  6061                           
  6062                           ;mcc_generated_files/eusart2.c: 74:     RC2STA = 0x90;
  6063  07D3  3090               	movlw	144
  6064  07D4  0095               	movwf	21	;volatile
  6065                           
  6066                           ;mcc_generated_files/eusart2.c: 77:     TX2STA = 0x24;
  6067  07D5  3024               	movlw	36
  6068  07D6  0096               	movwf	22	;volatile
  6069                           
  6070                           ;mcc_generated_files/eusart2.c: 80:     SP2BRGL = 0xA0;
  6071  07D7  30A0               	movlw	160
  6072  07D8  0093               	movwf	19	;volatile
  6073                           
  6074                           ;mcc_generated_files/eusart2.c: 83:     SP2BRGH = 0x01;
  6075  07D9  3001               	movlw	1
  6076  07DA  0094               	movwf	20	;volatile
  6077  07DB                     l6983:
  6078                           
  6079                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  6080  07DB  3000               	movlw	0
  6081  07DC  0020               	movlb	0	; select bank0
  6082  07DD  00AE               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler
  6083  07DE  3000               	movlw	0
  6084  07DF  00AF               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler+1
  6085  07E0  31A6  2621  3187   	fcall	_EUSART2_SetFramingErrorHandler
  6086  07E3                     l6985:
  6087                           
  6088                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  6089  07E3  3000               	movlw	0
  6090  07E4  0020               	movlb	0	; select bank0
  6091  07E5  00AE               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler
  6092  07E6  3000               	movlw	0
  6093  07E7  00AF               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler+1
  6094  07E8  31A6  262A  3187   	fcall	_EUSART2_SetOverrunErrorHandler
  6095  07EB                     l6987:
  6096                           
  6097                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  6098  07EB  3000               	movlw	0
  6099  07EC  0020               	movlb	0	; select bank0
  6100  07ED  00AE               	movwf	EUSART2_SetErrorHandler@interruptHandler
  6101  07EE  3000               	movlw	0
  6102  07EF  00AF               	movwf	EUSART2_SetErrorHandler@interruptHandler+1
  6103  07F0  31A6  2618  3187   	fcall	_EUSART2_SetErrorHandler
  6104  07F3                     l6989:
  6105                           
  6106                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  6107  07F3  0022               	movlb	2	; select bank2
  6108  07F4  01E2               	clrf	_eusart2RxLastError^(0+256)	;volatile
  6109  07F5                     l1267:
  6110  07F5  0008               	return
  6111  07F6                     __end_of_EUSART2_Initialize:
  6112                           
  6113                           	psect	text14
  6114  262A                     __ptext14:	
  6115 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  6116 ;; Defined at:
  6117 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6120 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;Total ram usage:        2 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 5
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_EUSART2_Initialize
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           
  6147                           ;psect for function _EUSART2_SetOverrunErrorHandler
  6148  262A                     _EUSART2_SetOverrunErrorHandler:
  6149  262A                     l6731:	
  6150                           ;incstack = 0
  6151                           ; Regs used in _EUSART2_SetOverrunErrorHandler: [wreg]
  6152                           
  6153                           
  6154                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  6155  262A  0020               	movlb	0	; select bank0
  6156  262B  082F               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler+1,w
  6157  262C  0025               	movlb	5	; select bank5
  6158  262D  00DD               	movwf	(_EUSART2_OverrunErrorHandler+1)^(0+640)
  6159  262E  0020               	movlb	0	; select bank0
  6160  262F  082E               	movf	EUSART2_SetOverrunErrorHandler@interruptHandler,w
  6161  2630  0025               	movlb	5	; select bank5
  6162  2631  00DC               	movwf	_EUSART2_OverrunErrorHandler^(0+640)
  6163  2632                     l1309:
  6164  2632  0008               	return
  6165  2633                     __end_of_EUSART2_SetOverrunErrorHandler:
  6166                           
  6167                           	psect	text15
  6168  2621                     __ptext15:	
  6169 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6170 ;; Defined at:
  6171 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6174 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;		None
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  1    wreg      void 
  6179 ;; Registers used:
  6180 ;;		wreg
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6186 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;Total ram usage:        2 bytes
  6191 ;; Hardware stack levels used: 1
  6192 ;; Hardware stack levels required when called: 5
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_EUSART2_Initialize
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function _EUSART2_SetFramingErrorHandler
  6202  2621                     _EUSART2_SetFramingErrorHandler:
  6203  2621                     l6729:	
  6204                           ;incstack = 0
  6205                           ; Regs used in _EUSART2_SetFramingErrorHandler: [wreg]
  6206                           
  6207                           
  6208                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  6209  2621  0020               	movlb	0	; select bank0
  6210  2622  082F               	movf	EUSART2_SetFramingErrorHandler@interruptHandler+1,w
  6211  2623  0025               	movlb	5	; select bank5
  6212  2624  00DF               	movwf	(_EUSART2_FramingErrorHandler+1)^(0+640)
  6213  2625  0020               	movlb	0	; select bank0
  6214  2626  082E               	movf	EUSART2_SetFramingErrorHandler@interruptHandler,w
  6215  2627  0025               	movlb	5	; select bank5
  6216  2628  00DE               	movwf	_EUSART2_FramingErrorHandler^(0+640)
  6217  2629                     l1306:
  6218  2629  0008               	return
  6219  262A                     __end_of_EUSART2_SetFramingErrorHandler:
  6220                           
  6221                           	psect	text16
  6222  2618                     __ptext16:	
  6223 ;; *************** function _EUSART2_SetErrorHandler *****************
  6224 ;; Defined at:
  6225 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6228 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;Total ram usage:        2 bytes
  6245 ;; Hardware stack levels used: 1
  6246 ;; Hardware stack levels required when called: 5
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_EUSART2_Initialize
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           
  6255                           ;psect for function _EUSART2_SetErrorHandler
  6256  2618                     _EUSART2_SetErrorHandler:
  6257  2618                     l6733:	
  6258                           ;incstack = 0
  6259                           ; Regs used in _EUSART2_SetErrorHandler: [wreg]
  6260                           
  6261                           
  6262                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  6263  2618  0020               	movlb	0	; select bank0
  6264  2619  082F               	movf	EUSART2_SetErrorHandler@interruptHandler+1,w
  6265  261A  0025               	movlb	5	; select bank5
  6266  261B  00DB               	movwf	(_EUSART2_ErrorHandler+1)^(0+640)
  6267  261C  0020               	movlb	0	; select bank0
  6268  261D  082E               	movf	EUSART2_SetErrorHandler@interruptHandler,w
  6269  261E  0025               	movlb	5	; select bank5
  6270  261F  00DA               	movwf	_EUSART2_ErrorHandler^(0+640)
  6271  2620                     l1312:
  6272  2620  0008               	return
  6273  2621                     __end_of_EUSART2_SetErrorHandler:
  6274                           
  6275                           	psect	text17
  6276  275C                     __ptext17:	
  6277 ;; *************** function _EUSART1_Initialize *****************
  6278 ;; Defined at:
  6279 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;		None
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      void 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0, pclath, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;Total ram usage:        0 bytes
  6298 ;; Hardware stack levels used: 1
  6299 ;; Hardware stack levels required when called: 6
  6300 ;; This function calls:
  6301 ;;		_EUSART1_SetErrorHandler
  6302 ;;		_EUSART1_SetFramingErrorHandler
  6303 ;;		_EUSART1_SetOverrunErrorHandler
  6304 ;; This function is called by:
  6305 ;;		_SYSTEM_Initialize
  6306 ;; This function uses a non-reentrant model
  6307 ;;
  6308                           
  6309                           
  6310                           ;psect for function _EUSART1_Initialize
  6311  275C                     _EUSART1_Initialize:
  6312  275C                     l6971:	
  6313                           ;incstack = 0
  6314                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6315                           
  6316                           
  6317                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  6318  275C  3008               	movlw	8
  6319  275D  0023               	movlb	3	; select bank3
  6320  275E  009F               	movwf	31	;volatile
  6321                           
  6322                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  6323  275F  3090               	movlw	144
  6324  2760  009D               	movwf	29	;volatile
  6325                           
  6326                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  6327  2761  3024               	movlw	36
  6328  2762  009E               	movwf	30	;volatile
  6329                           
  6330                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0xA0;
  6331  2763  30A0               	movlw	160
  6332  2764  009B               	movwf	27	;volatile
  6333                           
  6334                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x01;
  6335  2765  3001               	movlw	1
  6336  2766  009C               	movwf	28	;volatile
  6337  2767                     l6973:
  6338                           
  6339                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6340  2767  3000               	movlw	0
  6341  2768  0020               	movlb	0	; select bank0
  6342  2769  00AE               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  6343  276A  3000               	movlw	0
  6344  276B  00AF               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  6345  276C  31A6  2606  31A7   	fcall	_EUSART1_SetFramingErrorHandler
  6346  276F                     l6975:
  6347                           
  6348                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6349  276F  3000               	movlw	0
  6350  2770  0020               	movlb	0	; select bank0
  6351  2771  00AE               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  6352  2772  3000               	movlw	0
  6353  2773  00AF               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  6354  2774  31A6  260F  31A7   	fcall	_EUSART1_SetOverrunErrorHandler
  6355  2777                     l6977:
  6356                           
  6357                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6358  2777  3000               	movlw	0
  6359  2778  0020               	movlb	0	; select bank0
  6360  2779  00AE               	movwf	EUSART1_SetErrorHandler@interruptHandler
  6361  277A  3000               	movlw	0
  6362  277B  00AF               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  6363  277C  31A5  25FD  31A7   	fcall	_EUSART1_SetErrorHandler
  6364  277F                     l6979:
  6365                           
  6366                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6367  277F  0022               	movlb	2	; select bank2
  6368  2780  01E3               	clrf	_eusart1RxLastError^(0+256)	;volatile
  6369  2781                     l507:
  6370  2781  0008               	return
  6371  2782                     __end_of_EUSART1_Initialize:
  6372                           
  6373                           	psect	text18
  6374  260F                     __ptext18:	
  6375 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6376 ;; Defined at:
  6377 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6380 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		wreg
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6392 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;Total ram usage:        2 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; Hardware stack levels required when called: 5
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_EUSART1_Initialize
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           
  6407                           ;psect for function _EUSART1_SetOverrunErrorHandler
  6408  260F                     _EUSART1_SetOverrunErrorHandler:
  6409  260F                     l6725:	
  6410                           ;incstack = 0
  6411                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  6412                           
  6413                           
  6414                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  6415  260F  0020               	movlb	0	; select bank0
  6416  2610  082F               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  6417  2611  0025               	movlb	5	; select bank5
  6418  2612  00E3               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+640)
  6419  2613  0020               	movlb	0	; select bank0
  6420  2614  082E               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  6421  2615  0025               	movlb	5	; select bank5
  6422  2616  00E2               	movwf	_EUSART1_OverrunErrorHandler^(0+640)
  6423  2617                     l549:
  6424  2617  0008               	return
  6425  2618                     __end_of_EUSART1_SetOverrunErrorHandler:
  6426                           
  6427                           	psect	text19
  6428  2606                     __ptext19:	
  6429 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6430 ;; Defined at:
  6431 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6434 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      void 
  6439 ;; Registers used:
  6440 ;;		wreg
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;Total ram usage:        2 bytes
  6451 ;; Hardware stack levels used: 1
  6452 ;; Hardware stack levels required when called: 5
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_EUSART1_Initialize
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _EUSART1_SetFramingErrorHandler
  6462  2606                     _EUSART1_SetFramingErrorHandler:
  6463  2606                     l6723:	
  6464                           ;incstack = 0
  6465                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  6466                           
  6467                           
  6468                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  6469  2606  0020               	movlb	0	; select bank0
  6470  2607  082F               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  6471  2608  0024               	movlb	4	; select bank4
  6472  2609  00EF               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+512)
  6473  260A  0020               	movlb	0	; select bank0
  6474  260B  082E               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  6475  260C  0024               	movlb	4	; select bank4
  6476  260D  00EE               	movwf	_EUSART1_FramingErrorHandler^(0+512)
  6477  260E                     l546:
  6478  260E  0008               	return
  6479  260F                     __end_of_EUSART1_SetFramingErrorHandler:
  6480                           
  6481                           	psect	text20
  6482  25FD                     __ptext20:	
  6483 ;; *************** function _EUSART1_SetErrorHandler *****************
  6484 ;; Defined at:
  6485 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;  interruptHan    2   14[BANK0 ] PTR FTN()void 
  6488 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;Total ram usage:        2 bytes
  6505 ;; Hardware stack levels used: 1
  6506 ;; Hardware stack levels required when called: 5
  6507 ;; This function calls:
  6508 ;;		Nothing
  6509 ;; This function is called by:
  6510 ;;		_EUSART1_Initialize
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           
  6515                           ;psect for function _EUSART1_SetErrorHandler
  6516  25FD                     _EUSART1_SetErrorHandler:
  6517  25FD                     l6727:	
  6518                           ;incstack = 0
  6519                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  6520                           
  6521                           
  6522                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  6523  25FD  0020               	movlb	0	; select bank0
  6524  25FE  082F               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  6525  25FF  0025               	movlb	5	; select bank5
  6526  2600  00E1               	movwf	(_EUSART1_ErrorHandler+1)^(0+640)
  6527  2601  0020               	movlb	0	; select bank0
  6528  2602  082E               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  6529  2603  0025               	movlb	5	; select bank5
  6530  2604  00E0               	movwf	_EUSART1_ErrorHandler^(0+640)
  6531  2605                     l552:
  6532  2605  0008               	return
  6533  2606                     __end_of_EUSART1_SetErrorHandler:
  6534                           
  6535                           	psect	text21
  6536  1BB7                     __ptext21:	
  6537 ;; *************** function _ManualHandle *****************
  6538 ;; Defined at:
  6539 ;;		line 228 in file "main.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  j               2   22[BANK1 ] int 
  6544 ;;  j               2   20[BANK1 ] int 
  6545 ;;  i               2   24[BANK1 ] int 
  6546 ;;  bufferManual   20    0[BANK1 ] unsigned char [20]
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6557 ;;      Locals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Totals:         0       1      26       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;Total ram usage:       27 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 7
  6563 ;; This function calls:
  6564 ;;		___xxtofl
  6565 ;;		_atoi
  6566 ;;		_strlen
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           
  6573                           ;psect for function _ManualHandle
  6574  1BB7                     _ManualHandle:
  6575  1BB7                     l8875:	
  6576                           ;incstack = 0
  6577                           ; Regs used in _ManualHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6578                           
  6579                           
  6580                           ;main.c: 230:     char bufferManual_t[20];;main.c: 231:     if((buffer_sys[0] == 'M') ||
      +                           (flagManual == 1)){
  6581  1BB7  304D               	movlw	77
  6582  1BB8  0025               	movlb	5	; select bank5
  6583  1BB9  0628               	xorwf	_buffer_sys^(0+640),w
  6584  1BBA  1903               	btfsc	3,2
  6585  1BBB  2BBD               	goto	u9211
  6586  1BBC  2BBE               	goto	u9210
  6587  1BBD                     u9211:
  6588  1BBD  2BC4               	goto	l1513
  6589  1BBE                     u9210:
  6590  1BBE                     l8877:
  6591  1BBE  0022               	movlb	2	; select bank2
  6592  1BBF  035F               	decf	_flagManual^(0+256),w
  6593  1BC0  1D03               	btfss	3,2
  6594  1BC1  2BC3               	goto	u9221
  6595  1BC2  2BC4               	goto	u9220
  6596  1BC3                     u9221:
  6597  1BC3  2CB8               	goto	l1530
  6598  1BC4                     u9220:
  6599  1BC4                     l1513:
  6600                           
  6601                           ;main.c: 232:         flagManual = 1;
  6602  1BC4  0022               	movlb	2	; select bank2
  6603  1BC5  01DF               	clrf	_flagManual^(0+256)
  6604  1BC6  0ADF               	incf	_flagManual^(0+256),f
  6605  1BC7                     l8879:
  6606                           
  6607                           ;main.c: 233:         for(int i = 0; i < strlen(buffer_sys); i++){
  6608  1BC7  0021               	movlb	1	; select bank1
  6609  1BC8  01B8               	clrf	ManualHandle@i^(0+128)
  6610  1BC9  01B9               	clrf	(ManualHandle@i+1)^(0+128)
  6611  1BCA  2CA2               	goto	l8919
  6612  1BCB                     l8881:
  6613                           
  6614                           ;main.c: 234:             if(buffer_sys[0] == 'M'){
  6615  1BCB  304D               	movlw	77
  6616  1BCC  0025               	movlb	5	; select bank5
  6617  1BCD  0628               	xorwf	_buffer_sys^(0+640),w
  6618  1BCE  1D03               	btfss	3,2
  6619  1BCF  2BD1               	goto	u9231
  6620  1BD0  2BD2               	goto	u9230
  6621  1BD1                     u9231:
  6622  1BD1  2BD8               	goto	l8885
  6623  1BD2                     u9230:
  6624  1BD2                     l8883:
  6625                           
  6626                           ;main.c: 235:                 buffer_sys[0] = '0';
  6627  1BD2  3030               	movlw	48
  6628  1BD3  0020               	movlb	0	; select bank0
  6629  1BD4  00D1               	movwf	??_ManualHandle
  6630  1BD5  0851               	movf	??_ManualHandle,w
  6631  1BD6  0025               	movlb	5	; select bank5
  6632  1BD7  00A8               	movwf	_buffer_sys^(0+640)
  6633  1BD8                     l8885:
  6634                           
  6635                           ;main.c: 237:             if((buffer_sys[i] == 'v') || (buffer_sys[i] == '#')){
  6636  1BD8  0021               	movlb	1	; select bank1
  6637  1BD9  0838               	movf	ManualHandle@i^(0+128),w
  6638  1BDA  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6639  1BDB  0086               	movwf	6
  6640  1BDC  3002               	movlw	2	; select bank5/6
  6641  1BDD  0087               	movwf	7
  6642  1BDE  3076               	movlw	118
  6643  1BDF  0601               	xorwf	1,w
  6644  1BE0  1903               	btfsc	3,2
  6645  1BE1  2BE3               	goto	u9241
  6646  1BE2  2BE4               	goto	u9240
  6647  1BE3                     u9241:
  6648  1BE3  2BEF               	goto	l8889
  6649  1BE4                     u9240:
  6650  1BE4                     l8887:
  6651  1BE4  0838               	movf	ManualHandle@i^(0+128),w
  6652  1BE5  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6653  1BE6  0086               	movwf	6
  6654  1BE7  3002               	movlw	2	; select bank5/6
  6655  1BE8  0087               	movwf	7
  6656  1BE9  3023               	movlw	35
  6657  1BEA  0601               	xorwf	1,w
  6658  1BEB  1D03               	btfss	3,2
  6659  1BEC  2BEE               	goto	u9251
  6660  1BED  2BEF               	goto	u9250
  6661  1BEE                     u9251:
  6662  1BEE  2C86               	goto	l8913
  6663  1BEF                     u9250:
  6664  1BEF                     l8889:
  6665                           
  6666                           ;main.c: 238:                 if((buffer_sys[i] == 'v')){
  6667  1BEF  0838               	movf	ManualHandle@i^(0+128),w
  6668  1BF0  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6669  1BF1  0086               	movwf	6
  6670  1BF2  3002               	movlw	2	; select bank5/6
  6671  1BF3  0087               	movwf	7
  6672  1BF4  3076               	movlw	118
  6673  1BF5  0601               	xorwf	1,w
  6674  1BF6  1D03               	btfss	3,2
  6675  1BF7  2BF9               	goto	u9261
  6676  1BF8  2BFA               	goto	u9260
  6677  1BF9                     u9261:
  6678  1BF9  2C4D               	goto	l8903
  6679  1BFA                     u9260:
  6680  1BFA                     l8891:
  6681                           
  6682                           ;main.c: 239:                     velManual = atoi(bufferManual_t);
  6683  1BFA  30A0               	movlw	low ManualHandle@bufferManual_t
  6684  1BFB  0020               	movlb	0	; select bank0
  6685  1BFC  00B4               	movwf	atoi@s
  6686  1BFD  3000               	movlw	high ManualHandle@bufferManual_t
  6687  1BFE  00B5               	movwf	atoi@s+1
  6688  1BFF  319B  230A  319B   	fcall	_atoi
  6689  1C02  0020               	movlb	0	; select bank0
  6690  1C03  0834               	movf	?_atoi,w
  6691  1C04  00C3               	movwf	___xxtofl@val
  6692  1C05  0835               	movf	?_atoi+1,w
  6693  1C06  00C4               	movwf	___xxtofl@val+1
  6694  1C07  0D89               	rlf	9,f
  6695  1C08  3B89               	subwfb	9,f
  6696  1C09  0989               	comf	9,f
  6697  1C0A  00C5               	movwf	___xxtofl@val+2
  6698  1C0B  00C6               	movwf	___xxtofl@val+3
  6699  1C0C  3001               	movlw	1
  6700  1C0D  319A  225D  319B   	fcall	___xxtofl
  6701  1C10  0020               	movlb	0	; select bank0
  6702  1C11  0846               	movf	?___xxtofl+3,w
  6703  1C12  0022               	movlb	2	; select bank2
  6704  1C13  00D3               	movwf	(_velManual+3)^(0+256)
  6705  1C14  0020               	movlb	0	; select bank0
  6706  1C15  0845               	movf	?___xxtofl+2,w
  6707  1C16  0022               	movlb	2	; select bank2
  6708  1C17  00D2               	movwf	(_velManual+2)^(0+256)
  6709  1C18  0020               	movlb	0	; select bank0
  6710  1C19  0844               	movf	?___xxtofl+1,w
  6711  1C1A  0022               	movlb	2	; select bank2
  6712  1C1B  00D1               	movwf	(_velManual+1)^(0+256)
  6713  1C1C  0020               	movlb	0	; select bank0
  6714  1C1D  0843               	movf	?___xxtofl,w
  6715  1C1E  0022               	movlb	2	; select bank2
  6716  1C1F  00D0               	movwf	_velManual^(0+256)
  6717  1C20                     l8893:
  6718                           
  6719                           ;main.c: 240:                     for(int j = 0; j < strlen(bufferManual_t);j++){
  6720  1C20  0021               	movlb	1	; select bank1
  6721  1C21  01B4               	clrf	ManualHandle@j^(0+128)
  6722  1C22  01B5               	clrf	(ManualHandle@j+1)^(0+128)
  6723  1C23  2C34               	goto	l8899
  6724  1C24                     l8895:
  6725                           
  6726                           ;main.c: 241:                         bufferManual_t[j] = ' ';
  6727  1C24  3020               	movlw	32
  6728  1C25  0020               	movlb	0	; select bank0
  6729  1C26  00D1               	movwf	??_ManualHandle
  6730  1C27  0021               	movlb	1	; select bank1
  6731  1C28  0834               	movf	ManualHandle@j^(0+128),w
  6732  1C29  3EA0               	addlw	(low (ManualHandle@bufferManual_t| 0))& (0+255)
  6733  1C2A  0086               	movwf	6
  6734  1C2B  0187               	clrf	7
  6735  1C2C  0020               	movlb	0	; select bank0
  6736  1C2D  0851               	movf	??_ManualHandle,w
  6737  1C2E  0081               	movwf	1
  6738  1C2F                     l8897:
  6739                           
  6740                           ;main.c: 242:                     }
  6741  1C2F  3001               	movlw	1
  6742  1C30  0021               	movlb	1	; select bank1
  6743  1C31  07B4               	addwf	ManualHandle@j^(0+128),f
  6744  1C32  3000               	movlw	0
  6745  1C33  3DB5               	addwfc	(ManualHandle@j+1)^(0+128),f
  6746  1C34                     l8899:
  6747  1C34  30A0               	movlw	low ManualHandle@bufferManual_t
  6748  1C35  0020               	movlb	0	; select bank0
  6749  1C36  00AE               	movwf	strlen@s
  6750  1C37  3000               	movlw	high ManualHandle@bufferManual_t
  6751  1C38  00AF               	movwf	strlen@s+1
  6752  1C39  31A6  26C0  319B   	fcall	_strlen
  6753  1C3C  0020               	movlb	0	; select bank0
  6754  1C3D  082F               	movf	?_strlen+1,w
  6755  1C3E  0021               	movlb	1	; select bank1
  6756  1C3F  0235               	subwf	(ManualHandle@j+1)^(0+128),w
  6757  1C40  1D03               	skipz
  6758  1C41  2C46               	goto	u9275
  6759  1C42  0020               	movlb	0	; select bank0
  6760  1C43  082E               	movf	?_strlen,w
  6761  1C44  0021               	movlb	1	; select bank1
  6762  1C45  0234               	subwf	ManualHandle@j^(0+128),w
  6763  1C46                     u9275:
  6764  1C46  1C03               	skipc
  6765  1C47  2C49               	goto	u9271
  6766  1C48  2C4A               	goto	u9270
  6767  1C49                     u9271:
  6768  1C49  2C24               	goto	l8895
  6769  1C4A                     u9270:
  6770  1C4A                     l8901:
  6771                           
  6772                           ;main.c: 243:                     cntManual = 0;
  6773  1C4A  0022               	movlb	2	; select bank2
  6774  1C4B  01D8               	clrf	_cntManual^(0+256)
  6775  1C4C  01D9               	clrf	(_cntManual+1)^(0+256)
  6776  1C4D                     l8903:
  6777                           
  6778                           ;main.c: 245:                 if(buffer_sys[i] == '#'){
  6779  1C4D  0021               	movlb	1	; select bank1
  6780  1C4E  0838               	movf	ManualHandle@i^(0+128),w
  6781  1C4F  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6782  1C50  0086               	movwf	6
  6783  1C51  3002               	movlw	2	; select bank5/6
  6784  1C52  0087               	movwf	7
  6785  1C53  3023               	movlw	35
  6786  1C54  0601               	xorwf	1,w
  6787  1C55  1D03               	btfss	3,2
  6788  1C56  2C58               	goto	u9281
  6789  1C57  2C59               	goto	u9280
  6790  1C58                     u9281:
  6791  1C58  2C9D               	goto	l8917
  6792  1C59                     u9280:
  6793  1C59                     l8905:
  6794                           
  6795                           ;main.c: 246:                     flagManual = 0;
  6796  1C59  0022               	movlb	2	; select bank2
  6797  1C5A  01DF               	clrf	_flagManual^(0+256)
  6798                           
  6799                           ;main.c: 248:                     for(int j = 0; j < strlen(bufferManual_t);j++){
  6800  1C5B  0021               	movlb	1	; select bank1
  6801  1C5C  01B6               	clrf	ManualHandle@j_2358^(0+128)
  6802  1C5D  01B7               	clrf	(ManualHandle@j_2358+1)^(0+128)
  6803  1C5E  2C6F               	goto	l8911
  6804  1C5F                     l8907:
  6805                           
  6806                           ;main.c: 249:                         bufferManual_t[j] = ' ';
  6807  1C5F  3020               	movlw	32
  6808  1C60  0020               	movlb	0	; select bank0
  6809  1C61  00D1               	movwf	??_ManualHandle
  6810  1C62  0021               	movlb	1	; select bank1
  6811  1C63  0836               	movf	ManualHandle@j_2358^(0+128),w
  6812  1C64  3EA0               	addlw	(low (ManualHandle@bufferManual_t| 0))& (0+255)
  6813  1C65  0086               	movwf	6
  6814  1C66  0187               	clrf	7
  6815  1C67  0020               	movlb	0	; select bank0
  6816  1C68  0851               	movf	??_ManualHandle,w
  6817  1C69  0081               	movwf	1
  6818  1C6A                     l8909:
  6819                           
  6820                           ;main.c: 250:                     }
  6821  1C6A  3001               	movlw	1
  6822  1C6B  0021               	movlb	1	; select bank1
  6823  1C6C  07B6               	addwf	ManualHandle@j_2358^(0+128),f
  6824  1C6D  3000               	movlw	0
  6825  1C6E  3DB7               	addwfc	(ManualHandle@j_2358+1)^(0+128),f
  6826  1C6F                     l8911:
  6827  1C6F  30A0               	movlw	low ManualHandle@bufferManual_t
  6828  1C70  0020               	movlb	0	; select bank0
  6829  1C71  00AE               	movwf	strlen@s
  6830  1C72  3000               	movlw	high ManualHandle@bufferManual_t
  6831  1C73  00AF               	movwf	strlen@s+1
  6832  1C74  31A6  26C0  319B   	fcall	_strlen
  6833  1C77  0020               	movlb	0	; select bank0
  6834  1C78  082F               	movf	?_strlen+1,w
  6835  1C79  0021               	movlb	1	; select bank1
  6836  1C7A  0237               	subwf	(ManualHandle@j_2358+1)^(0+128),w
  6837  1C7B  1D03               	skipz
  6838  1C7C  2C81               	goto	u9295
  6839  1C7D  0020               	movlb	0	; select bank0
  6840  1C7E  082E               	movf	?_strlen,w
  6841  1C7F  0021               	movlb	1	; select bank1
  6842  1C80  0236               	subwf	ManualHandle@j_2358^(0+128),w
  6843  1C81                     u9295:
  6844  1C81  1C03               	skipc
  6845  1C82  2C84               	goto	u9291
  6846  1C83  2C85               	goto	u9290
  6847  1C84                     u9291:
  6848  1C84  2C5F               	goto	l8907
  6849  1C85                     u9290:
  6850  1C85  2C9D               	goto	l8917
  6851  1C86                     l8913:
  6852                           
  6853                           ;main.c: 254:                 bufferManual_t[cntManual] = buffer_sys[i];
  6854  1C86  0838               	movf	ManualHandle@i^(0+128),w
  6855  1C87  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  6856  1C88  0086               	movwf	6
  6857  1C89  3002               	movlw	2	; select bank5/6
  6858  1C8A  0087               	movwf	7
  6859  1C8B  0801               	movf	1,w
  6860  1C8C  0020               	movlb	0	; select bank0
  6861  1C8D  00D1               	movwf	??_ManualHandle
  6862  1C8E  0022               	movlb	2	; select bank2
  6863  1C8F  0858               	movf	_cntManual^(0+256),w
  6864  1C90  3EA0               	addlw	(low (ManualHandle@bufferManual_t| 0))& (0+255)
  6865  1C91  0086               	movwf	6
  6866  1C92  0187               	clrf	7
  6867  1C93  0020               	movlb	0	; select bank0
  6868  1C94  0851               	movf	??_ManualHandle,w
  6869  1C95  0081               	movwf	1
  6870  1C96                     l8915:
  6871                           
  6872                           ;main.c: 255:                 cntManual = cntManual + 1;
  6873  1C96  0022               	movlb	2	; select bank2
  6874  1C97  0858               	movf	_cntManual^(0+256),w
  6875  1C98  3E01               	addlw	1
  6876  1C99  00D8               	movwf	_cntManual^(0+256)
  6877  1C9A  3000               	movlw	0
  6878  1C9B  3D59               	addwfc	(_cntManual+1)^(0+256),w
  6879  1C9C  00D9               	movwf	(_cntManual+1)^(0+256)
  6880  1C9D                     l8917:
  6881                           
  6882                           ;main.c: 257:         }
  6883  1C9D  3001               	movlw	1
  6884  1C9E  0021               	movlb	1	; select bank1
  6885  1C9F  07B8               	addwf	ManualHandle@i^(0+128),f
  6886  1CA0  3000               	movlw	0
  6887  1CA1  3DB9               	addwfc	(ManualHandle@i+1)^(0+128),f
  6888  1CA2                     l8919:
  6889  1CA2  30A8               	movlw	low _buffer_sys
  6890  1CA3  0020               	movlb	0	; select bank0
  6891  1CA4  00AE               	movwf	strlen@s
  6892  1CA5  3002               	movlw	high _buffer_sys
  6893  1CA6  00AF               	movwf	strlen@s+1
  6894  1CA7  31A6  26C0  319B   	fcall	_strlen
  6895  1CAA  0020               	movlb	0	; select bank0
  6896  1CAB  082F               	movf	?_strlen+1,w
  6897  1CAC  0021               	movlb	1	; select bank1
  6898  1CAD  0239               	subwf	(ManualHandle@i+1)^(0+128),w
  6899  1CAE  1D03               	skipz
  6900  1CAF  2CB4               	goto	u9305
  6901  1CB0  0020               	movlb	0	; select bank0
  6902  1CB1  082E               	movf	?_strlen,w
  6903  1CB2  0021               	movlb	1	; select bank1
  6904  1CB3  0238               	subwf	ManualHandle@i^(0+128),w
  6905  1CB4                     u9305:
  6906  1CB4  1C03               	skipc
  6907  1CB5  2CB7               	goto	u9301
  6908  1CB6  2CB8               	goto	u9300
  6909  1CB7                     u9301:
  6910  1CB7  2BCB               	goto	l8881
  6911  1CB8                     u9300:
  6912  1CB8                     l1530:
  6913  1CB8  0008               	return
  6914  1CB9                     __end_of_ManualHandle:
  6915                           
  6916                           	psect	text22
  6917  03F7                     __ptext22:	
  6918 ;; *************** function _ManualControl *****************
  6919 ;; Defined at:
  6920 ;;		line 261 in file "main.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0, pclath, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 9
  6941 ;; This function calls:
  6942 ;;		___fleq
  6943 ;;		___flge
  6944 ;;		___flneg
  6945 ;;		_ramp_step_function
  6946 ;; This function is called by:
  6947 ;;		_main
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function _ManualControl
  6953  03F7                     _ManualControl:
  6954  03F7                     l8921:	
  6955                           ;incstack = 0
  6956                           ; Regs used in _ManualControl: [wreg+status,2+status,0+pclath+cstack]
  6957                           
  6958                           
  6959                           ;main.c: 263:     if(buffer_sys[0] == 'T'){
  6960  03F7  3054               	movlw	84
  6961  03F8  0025               	movlb	5	; select bank5
  6962  03F9  0628               	xorwf	_buffer_sys^(0+640),w
  6963  03FA  1D03               	btfss	3,2
  6964  03FB  2BFD               	goto	u9311
  6965  03FC  2BFE               	goto	u9310
  6966  03FD                     u9311:
  6967  03FD  2C82               	goto	l8939
  6968  03FE                     u9310:
  6969  03FE                     l8923:
  6970                           
  6971                           ;main.c: 264:         cnt_sys = 0;
  6972  03FE  0022               	movlb	2	; select bank2
  6973  03FF  01DC               	clrf	_cnt_sys^(0+256)
  6974  0400                     l8925:
  6975                           
  6976                           ;main.c: 265:         totalTime = 100000;
  6977  0400  30A0               	movlw	160
  6978  0401  0020               	movlb	0	; select bank0
  6979  0402  00D4               	movwf	_totalTime
  6980  0403  3086               	movlw	134
  6981  0404  00D5               	movwf	_totalTime+1
  6982  0405                     l8927:
  6983                           
  6984                           ;main.c: 266:         velManual_t = velManual;
  6985  0405  0022               	movlb	2	; select bank2
  6986  0406  0853               	movf	(_velManual+3)^(0+256),w
  6987  0407  0023               	movlb	3	; select bank3
  6988  0408  00C7               	movwf	(_velManual_t+3)^(0+384)
  6989  0409  0022               	movlb	2	; select bank2
  6990  040A  0852               	movf	(_velManual+2)^(0+256),w
  6991  040B  0023               	movlb	3	; select bank3
  6992  040C  00C6               	movwf	(_velManual_t+2)^(0+384)
  6993  040D  0022               	movlb	2	; select bank2
  6994  040E  0851               	movf	(_velManual+1)^(0+256),w
  6995  040F  0023               	movlb	3	; select bank3
  6996  0410  00C5               	movwf	(_velManual_t+1)^(0+384)
  6997  0411  0022               	movlb	2	; select bank2
  6998  0412  0850               	movf	_velManual^(0+256),w
  6999  0413  0023               	movlb	3	; select bank3
  7000  0414  00C4               	movwf	_velManual_t^(0+384)
  7001  0415                     l8929:
  7002                           
  7003                           ;main.c: 267:         if(velManual < 0) velManual = -velManual;
  7004  0415  0022               	movlb	2	; select bank2
  7005  0416  0853               	movf	(_velManual+3)^(0+256),w
  7006  0417  0021               	movlb	1	; select bank1
  7007  0418  00BD               	movwf	(___flge@ff1+3)^(0+128)
  7008  0419  0022               	movlb	2	; select bank2
  7009  041A  0852               	movf	(_velManual+2)^(0+256),w
  7010  041B  0021               	movlb	1	; select bank1
  7011  041C  00BC               	movwf	(___flge@ff1+2)^(0+128)
  7012  041D  0022               	movlb	2	; select bank2
  7013  041E  0851               	movf	(_velManual+1)^(0+256),w
  7014  041F  0021               	movlb	1	; select bank1
  7015  0420  00BB               	movwf	(___flge@ff1+1)^(0+128)
  7016  0421  0022               	movlb	2	; select bank2
  7017  0422  0850               	movf	_velManual^(0+256),w
  7018  0423  0021               	movlb	1	; select bank1
  7019  0424  00BA               	movwf	___flge@ff1^(0+128)
  7020  0425  3000               	movlw	0
  7021  0426  00C1               	movwf	(___flge@ff2+3)^(0+128)
  7022  0427  3000               	movlw	0
  7023  0428  00C0               	movwf	(___flge@ff2+2)^(0+128)
  7024  0429  3000               	movlw	0
  7025  042A  00BF               	movwf	(___flge@ff2+1)^(0+128)
  7026  042B  3000               	movlw	0
  7027  042C  00BE               	movwf	___flge@ff2^(0+128)
  7028  042D  3199  2126  3183   	fcall	___flge
  7029  0430  1803               	btfsc	3,0
  7030  0431  2C33               	goto	u9321
  7031  0432  2C34               	goto	u9320
  7032  0433                     u9321:
  7033  0433  2C57               	goto	l8933
  7034  0434                     u9320:
  7035  0434                     l8931:
  7036  0434  0022               	movlb	2	; select bank2
  7037  0435  0853               	movf	(_velManual+3)^(0+256),w
  7038  0436  0020               	movlb	0	; select bank0
  7039  0437  00B1               	movwf	___flneg@f1+3
  7040  0438  0022               	movlb	2	; select bank2
  7041  0439  0852               	movf	(_velManual+2)^(0+256),w
  7042  043A  0020               	movlb	0	; select bank0
  7043  043B  00B0               	movwf	___flneg@f1+2
  7044  043C  0022               	movlb	2	; select bank2
  7045  043D  0851               	movf	(_velManual+1)^(0+256),w
  7046  043E  0020               	movlb	0	; select bank0
  7047  043F  00AF               	movwf	___flneg@f1+1
  7048  0440  0022               	movlb	2	; select bank2
  7049  0441  0850               	movf	_velManual^(0+256),w
  7050  0442  0020               	movlb	0	; select bank0
  7051  0443  00AE               	movwf	___flneg@f1
  7052  0444  3190  2000  3183   	fcall	___flneg
  7053  0447  0020               	movlb	0	; select bank0
  7054  0448  0831               	movf	?___flneg+3,w
  7055  0449  0022               	movlb	2	; select bank2
  7056  044A  00D3               	movwf	(_velManual+3)^(0+256)
  7057  044B  0020               	movlb	0	; select bank0
  7058  044C  0830               	movf	?___flneg+2,w
  7059  044D  0022               	movlb	2	; select bank2
  7060  044E  00D2               	movwf	(_velManual+2)^(0+256)
  7061  044F  0020               	movlb	0	; select bank0
  7062  0450  082F               	movf	?___flneg+1,w
  7063  0451  0022               	movlb	2	; select bank2
  7064  0452  00D1               	movwf	(_velManual+1)^(0+256)
  7065  0453  0020               	movlb	0	; select bank0
  7066  0454  082E               	movf	?___flneg,w
  7067  0455  0022               	movlb	2	; select bank2
  7068  0456  00D0               	movwf	_velManual^(0+256)
  7069  0457                     l8933:
  7070                           
  7071                           ;main.c: 268:         if(in_ramp) ramp_step_function(velManual,0,100);
  7072  0457  0022               	movlb	2	; select bank2
  7073  0458  086A               	movf	_in_ramp^(0+256),w
  7074  0459  1903               	btfsc	3,2
  7075  045A  2C5C               	goto	u9331
  7076  045B  2C5D               	goto	u9330
  7077  045C                     u9331:
  7078  045C  2C78               	goto	l8937
  7079  045D                     u9330:
  7080  045D                     l8935:
  7081  045D  0853               	movf	(_velManual+3)^(0+256),w
  7082  045E  00BB               	movwf	(ramp_step_function@velocity+3)^(0+256)
  7083  045F  0852               	movf	(_velManual+2)^(0+256),w
  7084  0460  00BA               	movwf	(ramp_step_function@velocity+2)^(0+256)
  7085  0461  0851               	movf	(_velManual+1)^(0+256),w
  7086  0462  00B9               	movwf	(ramp_step_function@velocity+1)^(0+256)
  7087  0463  0850               	movf	_velManual^(0+256),w
  7088  0464  00B8               	movwf	ramp_step_function@velocity^(0+256)
  7089  0465  3000               	movlw	0
  7090  0466  00BF               	movwf	(ramp_step_function@radius+3)^(0+256)
  7091  0467  3000               	movlw	0
  7092  0468  00BE               	movwf	(ramp_step_function@radius+2)^(0+256)
  7093  0469  3000               	movlw	0
  7094  046A  00BD               	movwf	(ramp_step_function@radius+1)^(0+256)
  7095  046B  3000               	movlw	0
  7096  046C  00BC               	movwf	ramp_step_function@radius^(0+256)
  7097  046D  3042               	movlw	66
  7098  046E  00C3               	movwf	(ramp_step_function@total_time+3)^(0+256)
  7099  046F  30C8               	movlw	200
  7100  0470  00C2               	movwf	(ramp_step_function@total_time+2)^(0+256)
  7101  0471  3000               	movlw	0
  7102  0472  00C1               	movwf	(ramp_step_function@total_time+1)^(0+256)
  7103  0473  3000               	movlw	0
  7104  0474  00C0               	movwf	ramp_step_function@total_time^(0+256)
  7105  0475  318B  2337  3183   	fcall	_ramp_step_function
  7106  0478                     l8937:
  7107                           
  7108                           ;main.c: 269:         velocity_sys = velManual;
  7109  0478  0022               	movlb	2	; select bank2
  7110  0479  0853               	movf	(_velManual+3)^(0+256),w
  7111  047A  00C7               	movwf	(_velocity_sys+3)^(0+256)
  7112  047B  0852               	movf	(_velManual+2)^(0+256),w
  7113  047C  00C6               	movwf	(_velocity_sys+2)^(0+256)
  7114  047D  0851               	movf	(_velManual+1)^(0+256),w
  7115  047E  00C5               	movwf	(_velocity_sys+1)^(0+256)
  7116  047F  0850               	movf	_velManual^(0+256),w
  7117  0480  00C4               	movwf	_velocity_sys^(0+256)
  7118                           
  7119                           ;main.c: 270:     }
  7120  0481  2E98               	goto	l1558
  7121  0482                     l8939:
  7122  0482  3042               	movlw	66
  7123  0483  0628               	xorwf	_buffer_sys^(0+640),w
  7124  0484  1D03               	btfss	3,2
  7125  0485  2C87               	goto	u9341
  7126  0486  2C88               	goto	u9340
  7127  0487                     u9341:
  7128  0487  2D04               	goto	l8957
  7129  0488                     u9340:
  7130  0488                     l8941:
  7131                           
  7132                           ;main.c: 272:         cnt_sys = 0;
  7133  0488  0022               	movlb	2	; select bank2
  7134  0489  01DC               	clrf	_cnt_sys^(0+256)
  7135  048A                     l8943:
  7136                           
  7137                           ;main.c: 273:         totalTime = 100000;
  7138  048A  30A0               	movlw	160
  7139  048B  0020               	movlb	0	; select bank0
  7140  048C  00D4               	movwf	_totalTime
  7141  048D  3086               	movlw	134
  7142  048E  00D5               	movwf	_totalTime+1
  7143  048F                     l8945:
  7144                           
  7145                           ;main.c: 274:         velManual_t = velManual;
  7146  048F  0022               	movlb	2	; select bank2
  7147  0490  0853               	movf	(_velManual+3)^(0+256),w
  7148  0491  0023               	movlb	3	; select bank3
  7149  0492  00C7               	movwf	(_velManual_t+3)^(0+384)
  7150  0493  0022               	movlb	2	; select bank2
  7151  0494  0852               	movf	(_velManual+2)^(0+256),w
  7152  0495  0023               	movlb	3	; select bank3
  7153  0496  00C6               	movwf	(_velManual_t+2)^(0+384)
  7154  0497  0022               	movlb	2	; select bank2
  7155  0498  0851               	movf	(_velManual+1)^(0+256),w
  7156  0499  0023               	movlb	3	; select bank3
  7157  049A  00C5               	movwf	(_velManual_t+1)^(0+384)
  7158  049B  0022               	movlb	2	; select bank2
  7159  049C  0850               	movf	_velManual^(0+256),w
  7160  049D  0023               	movlb	3	; select bank3
  7161  049E  00C4               	movwf	_velManual_t^(0+384)
  7162  049F                     l8947:
  7163                           
  7164                           ;main.c: 275:         if(velManual > 0) velManual = -velManual;
  7165  049F  3000               	movlw	0
  7166  04A0  0021               	movlb	1	; select bank1
  7167  04A1  00BD               	movwf	(___flge@ff1+3)^(0+128)
  7168  04A2  3000               	movlw	0
  7169  04A3  00BC               	movwf	(___flge@ff1+2)^(0+128)
  7170  04A4  3000               	movlw	0
  7171  04A5  00BB               	movwf	(___flge@ff1+1)^(0+128)
  7172  04A6  3000               	movlw	0
  7173  04A7  00BA               	movwf	___flge@ff1^(0+128)
  7174  04A8  0022               	movlb	2	; select bank2
  7175  04A9  0853               	movf	(_velManual+3)^(0+256),w
  7176  04AA  0021               	movlb	1	; select bank1
  7177  04AB  00C1               	movwf	(___flge@ff2+3)^(0+128)
  7178  04AC  0022               	movlb	2	; select bank2
  7179  04AD  0852               	movf	(_velManual+2)^(0+256),w
  7180  04AE  0021               	movlb	1	; select bank1
  7181  04AF  00C0               	movwf	(___flge@ff2+2)^(0+128)
  7182  04B0  0022               	movlb	2	; select bank2
  7183  04B1  0851               	movf	(_velManual+1)^(0+256),w
  7184  04B2  0021               	movlb	1	; select bank1
  7185  04B3  00BF               	movwf	(___flge@ff2+1)^(0+128)
  7186  04B4  0022               	movlb	2	; select bank2
  7187  04B5  0850               	movf	_velManual^(0+256),w
  7188  04B6  0021               	movlb	1	; select bank1
  7189  04B7  00BE               	movwf	___flge@ff2^(0+128)
  7190  04B8  3199  2126  3183   	fcall	___flge
  7191  04BB  1803               	btfsc	3,0
  7192  04BC  2CBE               	goto	u9351
  7193  04BD  2CBF               	goto	u9350
  7194  04BE                     u9351:
  7195  04BE  2CE2               	goto	l8951
  7196  04BF                     u9350:
  7197  04BF                     l8949:
  7198  04BF  0022               	movlb	2	; select bank2
  7199  04C0  0853               	movf	(_velManual+3)^(0+256),w
  7200  04C1  0020               	movlb	0	; select bank0
  7201  04C2  00B1               	movwf	___flneg@f1+3
  7202  04C3  0022               	movlb	2	; select bank2
  7203  04C4  0852               	movf	(_velManual+2)^(0+256),w
  7204  04C5  0020               	movlb	0	; select bank0
  7205  04C6  00B0               	movwf	___flneg@f1+2
  7206  04C7  0022               	movlb	2	; select bank2
  7207  04C8  0851               	movf	(_velManual+1)^(0+256),w
  7208  04C9  0020               	movlb	0	; select bank0
  7209  04CA  00AF               	movwf	___flneg@f1+1
  7210  04CB  0022               	movlb	2	; select bank2
  7211  04CC  0850               	movf	_velManual^(0+256),w
  7212  04CD  0020               	movlb	0	; select bank0
  7213  04CE  00AE               	movwf	___flneg@f1
  7214  04CF  3190  2000  3183   	fcall	___flneg
  7215  04D2  0020               	movlb	0	; select bank0
  7216  04D3  0831               	movf	?___flneg+3,w
  7217  04D4  0022               	movlb	2	; select bank2
  7218  04D5  00D3               	movwf	(_velManual+3)^(0+256)
  7219  04D6  0020               	movlb	0	; select bank0
  7220  04D7  0830               	movf	?___flneg+2,w
  7221  04D8  0022               	movlb	2	; select bank2
  7222  04D9  00D2               	movwf	(_velManual+2)^(0+256)
  7223  04DA  0020               	movlb	0	; select bank0
  7224  04DB  082F               	movf	?___flneg+1,w
  7225  04DC  0022               	movlb	2	; select bank2
  7226  04DD  00D1               	movwf	(_velManual+1)^(0+256)
  7227  04DE  0020               	movlb	0	; select bank0
  7228  04DF  082E               	movf	?___flneg,w
  7229  04E0  0022               	movlb	2	; select bank2
  7230  04E1  00D0               	movwf	_velManual^(0+256)
  7231  04E2                     l8951:
  7232                           
  7233                           ;main.c: 276:         if(in_ramp) ramp_step_function(velManual,0,100);
  7234  04E2  0022               	movlb	2	; select bank2
  7235  04E3  086A               	movf	_in_ramp^(0+256),w
  7236  04E4  1903               	btfsc	3,2
  7237  04E5  2CE7               	goto	u9361
  7238  04E6  2CE8               	goto	u9360
  7239  04E7                     u9361:
  7240  04E7  2C78               	goto	l8937
  7241  04E8                     u9360:
  7242  04E8                     l8953:
  7243  04E8  0853               	movf	(_velManual+3)^(0+256),w
  7244  04E9  00BB               	movwf	(ramp_step_function@velocity+3)^(0+256)
  7245  04EA  0852               	movf	(_velManual+2)^(0+256),w
  7246  04EB  00BA               	movwf	(ramp_step_function@velocity+2)^(0+256)
  7247  04EC  0851               	movf	(_velManual+1)^(0+256),w
  7248  04ED  00B9               	movwf	(ramp_step_function@velocity+1)^(0+256)
  7249  04EE  0850               	movf	_velManual^(0+256),w
  7250  04EF  00B8               	movwf	ramp_step_function@velocity^(0+256)
  7251  04F0  3000               	movlw	0
  7252  04F1  00BF               	movwf	(ramp_step_function@radius+3)^(0+256)
  7253  04F2  3000               	movlw	0
  7254  04F3  00BE               	movwf	(ramp_step_function@radius+2)^(0+256)
  7255  04F4  3000               	movlw	0
  7256  04F5  00BD               	movwf	(ramp_step_function@radius+1)^(0+256)
  7257  04F6  3000               	movlw	0
  7258  04F7  00BC               	movwf	ramp_step_function@radius^(0+256)
  7259  04F8  3042               	movlw	66
  7260  04F9  00C3               	movwf	(ramp_step_function@total_time+3)^(0+256)
  7261  04FA  30C8               	movlw	200
  7262  04FB  00C2               	movwf	(ramp_step_function@total_time+2)^(0+256)
  7263  04FC  3000               	movlw	0
  7264  04FD  00C1               	movwf	(ramp_step_function@total_time+1)^(0+256)
  7265  04FE  3000               	movlw	0
  7266  04FF  00C0               	movwf	ramp_step_function@total_time^(0+256)
  7267  0500  318B  2337  3183   	fcall	_ramp_step_function
  7268  0503  2C78               	goto	l8937
  7269  0504                     l8957:
  7270  0504  304C               	movlw	76
  7271  0505  0628               	xorwf	_buffer_sys^(0+640),w
  7272  0506  1D03               	btfss	3,2
  7273  0507  2D09               	goto	u9371
  7274  0508  2D0A               	goto	u9370
  7275  0509                     u9371:
  7276  0509  2D6C               	goto	l8967
  7277  050A                     u9370:
  7278  050A                     l8959:
  7279                           
  7280                           ;main.c: 280:         cnt_sys = 0;
  7281  050A  0022               	movlb	2	; select bank2
  7282  050B  01DC               	clrf	_cnt_sys^(0+256)
  7283  050C                     l8961:
  7284                           
  7285                           ;main.c: 281:         totalTime = 100000;
  7286  050C  30A0               	movlw	160
  7287  050D  0020               	movlb	0	; select bank0
  7288  050E  00D4               	movwf	_totalTime
  7289  050F  3086               	movlw	134
  7290  0510  00D5               	movwf	_totalTime+1
  7291  0511                     l8963:
  7292                           
  7293                           ;main.c: 282:         if(velManual != 0) velManual_t = velManual;
  7294  0511  0022               	movlb	2	; select bank2
  7295  0512  0853               	movf	(_velManual+3)^(0+256),w
  7296  0513  0021               	movlb	1	; select bank1
  7297  0514  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  7298  0515  0022               	movlb	2	; select bank2
  7299  0516  0852               	movf	(_velManual+2)^(0+256),w
  7300  0517  0021               	movlb	1	; select bank1
  7301  0518  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  7302  0519  0022               	movlb	2	; select bank2
  7303  051A  0851               	movf	(_velManual+1)^(0+256),w
  7304  051B  0021               	movlb	1	; select bank1
  7305  051C  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  7306  051D  0022               	movlb	2	; select bank2
  7307  051E  0850               	movf	_velManual^(0+256),w
  7308  051F  0021               	movlb	1	; select bank1
  7309  0520  00A0               	movwf	___fleq@ff1^(0+128)
  7310  0521  3000               	movlw	0
  7311  0522  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  7312  0523  3000               	movlw	0
  7313  0524  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  7314  0525  3000               	movlw	0
  7315  0526  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  7316  0527  3000               	movlw	0
  7317  0528  00A4               	movwf	___fleq@ff2^(0+128)
  7318  0529  3188  2000  3183   	fcall	___fleq
  7319  052C  1803               	btfsc	3,0
  7320  052D  2D2F               	goto	u9381
  7321  052E  2D30               	goto	u9380
  7322  052F                     u9381:
  7323  052F  2D40               	goto	l1542
  7324  0530                     u9380:
  7325  0530                     l8965:
  7326  0530  0022               	movlb	2	; select bank2
  7327  0531  0853               	movf	(_velManual+3)^(0+256),w
  7328  0532  0023               	movlb	3	; select bank3
  7329  0533  00C7               	movwf	(_velManual_t+3)^(0+384)
  7330  0534  0022               	movlb	2	; select bank2
  7331  0535  0852               	movf	(_velManual+2)^(0+256),w
  7332  0536  0023               	movlb	3	; select bank3
  7333  0537  00C6               	movwf	(_velManual_t+2)^(0+384)
  7334  0538  0022               	movlb	2	; select bank2
  7335  0539  0851               	movf	(_velManual+1)^(0+256),w
  7336  053A  0023               	movlb	3	; select bank3
  7337  053B  00C5               	movwf	(_velManual_t+1)^(0+384)
  7338  053C  0022               	movlb	2	; select bank2
  7339  053D  0850               	movf	_velManual^(0+256),w
  7340  053E  0023               	movlb	3	; select bank3
  7341  053F  00C4               	movwf	_velManual_t^(0+384)
  7342  0540                     l1542:
  7343                           
  7344                           ;main.c: 283:         velManual = 0;
  7345  0540  3000               	movlw	0
  7346  0541  0022               	movlb	2	; select bank2
  7347  0542  00D3               	movwf	(_velManual+3)^(0+256)
  7348  0543  3000               	movlw	0
  7349  0544  00D2               	movwf	(_velManual+2)^(0+256)
  7350  0545  3000               	movlw	0
  7351  0546  00D1               	movwf	(_velManual+1)^(0+256)
  7352  0547  3000               	movlw	0
  7353  0548  00D0               	movwf	_velManual^(0+256)
  7354                           
  7355                           ;main.c: 284:         omegaManual = 7/2;
  7356  0549  3040               	movlw	64
  7357  054A  0023               	movlb	3	; select bank3
  7358  054B  00C3               	movwf	(_omegaManual+3)^(0+384)
  7359  054C  3040               	movlw	64
  7360  054D  00C2               	movwf	(_omegaManual+2)^(0+384)
  7361  054E  3000               	movlw	0
  7362  054F  00C1               	movwf	(_omegaManual+1)^(0+384)
  7363  0550  3000               	movlw	0
  7364  0551  00C0               	movwf	_omegaManual^(0+384)
  7365                           
  7366                           ;main.c: 285:         velocity_sys = velManual;
  7367  0552  0022               	movlb	2	; select bank2
  7368  0553  0853               	movf	(_velManual+3)^(0+256),w
  7369  0554  00C7               	movwf	(_velocity_sys+3)^(0+256)
  7370  0555  0852               	movf	(_velManual+2)^(0+256),w
  7371  0556  00C6               	movwf	(_velocity_sys+2)^(0+256)
  7372  0557  0851               	movf	(_velManual+1)^(0+256),w
  7373  0558  00C5               	movwf	(_velocity_sys+1)^(0+256)
  7374  0559  0850               	movf	_velManual^(0+256),w
  7375  055A  00C4               	movwf	_velocity_sys^(0+256)
  7376                           
  7377                           ;main.c: 286:         omega_sys = omegaManual;
  7378  055B  0023               	movlb	3	; select bank3
  7379  055C  0843               	movf	(_omegaManual+3)^(0+384),w
  7380  055D  0024               	movlb	4	; select bank4
  7381  055E  00E5               	movwf	(_omega_sys+3)^(0+512)
  7382  055F  0023               	movlb	3	; select bank3
  7383  0560  0842               	movf	(_omegaManual+2)^(0+384),w
  7384  0561  0024               	movlb	4	; select bank4
  7385  0562  00E4               	movwf	(_omega_sys+2)^(0+512)
  7386  0563  0023               	movlb	3	; select bank3
  7387  0564  0841               	movf	(_omegaManual+1)^(0+384),w
  7388  0565  0024               	movlb	4	; select bank4
  7389  0566  00E3               	movwf	(_omega_sys+1)^(0+512)
  7390  0567  0023               	movlb	3	; select bank3
  7391  0568  0840               	movf	_omegaManual^(0+384),w
  7392  0569  0024               	movlb	4	; select bank4
  7393  056A  00E2               	movwf	_omega_sys^(0+512)
  7394                           
  7395                           ;main.c: 287:     }
  7396  056B  2E98               	goto	l1558
  7397  056C                     l8967:
  7398  056C  3052               	movlw	82
  7399  056D  0628               	xorwf	_buffer_sys^(0+640),w
  7400  056E  1D03               	btfss	3,2
  7401  056F  2D71               	goto	u9391
  7402  0570  2D72               	goto	u9390
  7403  0571                     u9391:
  7404  0571  2DD4               	goto	l8977
  7405  0572                     u9390:
  7406  0572                     l8969:
  7407                           
  7408                           ;main.c: 289:         cnt_sys = 0;
  7409  0572  0022               	movlb	2	; select bank2
  7410  0573  01DC               	clrf	_cnt_sys^(0+256)
  7411  0574                     l8971:
  7412                           
  7413                           ;main.c: 290:         totalTime = 100000;
  7414  0574  30A0               	movlw	160
  7415  0575  0020               	movlb	0	; select bank0
  7416  0576  00D4               	movwf	_totalTime
  7417  0577  3086               	movlw	134
  7418  0578  00D5               	movwf	_totalTime+1
  7419  0579                     l8973:
  7420                           
  7421                           ;main.c: 291:         if(velManual != 0) velManual_t = velManual;
  7422  0579  0022               	movlb	2	; select bank2
  7423  057A  0853               	movf	(_velManual+3)^(0+256),w
  7424  057B  0021               	movlb	1	; select bank1
  7425  057C  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  7426  057D  0022               	movlb	2	; select bank2
  7427  057E  0852               	movf	(_velManual+2)^(0+256),w
  7428  057F  0021               	movlb	1	; select bank1
  7429  0580  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  7430  0581  0022               	movlb	2	; select bank2
  7431  0582  0851               	movf	(_velManual+1)^(0+256),w
  7432  0583  0021               	movlb	1	; select bank1
  7433  0584  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  7434  0585  0022               	movlb	2	; select bank2
  7435  0586  0850               	movf	_velManual^(0+256),w
  7436  0587  0021               	movlb	1	; select bank1
  7437  0588  00A0               	movwf	___fleq@ff1^(0+128)
  7438  0589  3000               	movlw	0
  7439  058A  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  7440  058B  3000               	movlw	0
  7441  058C  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  7442  058D  3000               	movlw	0
  7443  058E  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  7444  058F  3000               	movlw	0
  7445  0590  00A4               	movwf	___fleq@ff2^(0+128)
  7446  0591  3188  2000  3183   	fcall	___fleq
  7447  0594  1803               	btfsc	3,0
  7448  0595  2D97               	goto	u9401
  7449  0596  2D98               	goto	u9400
  7450  0597                     u9401:
  7451  0597  2DA8               	goto	l1545
  7452  0598                     u9400:
  7453  0598                     l8975:
  7454  0598  0022               	movlb	2	; select bank2
  7455  0599  0853               	movf	(_velManual+3)^(0+256),w
  7456  059A  0023               	movlb	3	; select bank3
  7457  059B  00C7               	movwf	(_velManual_t+3)^(0+384)
  7458  059C  0022               	movlb	2	; select bank2
  7459  059D  0852               	movf	(_velManual+2)^(0+256),w
  7460  059E  0023               	movlb	3	; select bank3
  7461  059F  00C6               	movwf	(_velManual_t+2)^(0+384)
  7462  05A0  0022               	movlb	2	; select bank2
  7463  05A1  0851               	movf	(_velManual+1)^(0+256),w
  7464  05A2  0023               	movlb	3	; select bank3
  7465  05A3  00C5               	movwf	(_velManual_t+1)^(0+384)
  7466  05A4  0022               	movlb	2	; select bank2
  7467  05A5  0850               	movf	_velManual^(0+256),w
  7468  05A6  0023               	movlb	3	; select bank3
  7469  05A7  00C4               	movwf	_velManual_t^(0+384)
  7470  05A8                     l1545:
  7471                           
  7472                           ;main.c: 292:         velManual = 0;
  7473  05A8  3000               	movlw	0
  7474  05A9  0022               	movlb	2	; select bank2
  7475  05AA  00D3               	movwf	(_velManual+3)^(0+256)
  7476  05AB  3000               	movlw	0
  7477  05AC  00D2               	movwf	(_velManual+2)^(0+256)
  7478  05AD  3000               	movlw	0
  7479  05AE  00D1               	movwf	(_velManual+1)^(0+256)
  7480  05AF  3000               	movlw	0
  7481  05B0  00D0               	movwf	_velManual^(0+256)
  7482                           
  7483                           ;main.c: 293:         omegaManual = -7/2;
  7484  05B1  30C0               	movlw	192
  7485  05B2  0023               	movlb	3	; select bank3
  7486  05B3  00C3               	movwf	(_omegaManual+3)^(0+384)
  7487  05B4  3040               	movlw	64
  7488  05B5  00C2               	movwf	(_omegaManual+2)^(0+384)
  7489  05B6  3000               	movlw	0
  7490  05B7  00C1               	movwf	(_omegaManual+1)^(0+384)
  7491  05B8  3000               	movlw	0
  7492  05B9  00C0               	movwf	_omegaManual^(0+384)
  7493                           
  7494                           ;main.c: 294:         velocity_sys = velManual;
  7495  05BA  0022               	movlb	2	; select bank2
  7496  05BB  0853               	movf	(_velManual+3)^(0+256),w
  7497  05BC  00C7               	movwf	(_velocity_sys+3)^(0+256)
  7498  05BD  0852               	movf	(_velManual+2)^(0+256),w
  7499  05BE  00C6               	movwf	(_velocity_sys+2)^(0+256)
  7500  05BF  0851               	movf	(_velManual+1)^(0+256),w
  7501  05C0  00C5               	movwf	(_velocity_sys+1)^(0+256)
  7502  05C1  0850               	movf	_velManual^(0+256),w
  7503  05C2  00C4               	movwf	_velocity_sys^(0+256)
  7504                           
  7505                           ;main.c: 295:         omega_sys = omegaManual;
  7506  05C3  0023               	movlb	3	; select bank3
  7507  05C4  0843               	movf	(_omegaManual+3)^(0+384),w
  7508  05C5  0024               	movlb	4	; select bank4
  7509  05C6  00E5               	movwf	(_omega_sys+3)^(0+512)
  7510  05C7  0023               	movlb	3	; select bank3
  7511  05C8  0842               	movf	(_omegaManual+2)^(0+384),w
  7512  05C9  0024               	movlb	4	; select bank4
  7513  05CA  00E4               	movwf	(_omega_sys+2)^(0+512)
  7514  05CB  0023               	movlb	3	; select bank3
  7515  05CC  0841               	movf	(_omegaManual+1)^(0+384),w
  7516  05CD  0024               	movlb	4	; select bank4
  7517  05CE  00E3               	movwf	(_omega_sys+1)^(0+512)
  7518  05CF  0023               	movlb	3	; select bank3
  7519  05D0  0840               	movf	_omegaManual^(0+384),w
  7520  05D1  0024               	movlb	4	; select bank4
  7521  05D2  00E2               	movwf	_omega_sys^(0+512)
  7522                           
  7523                           ;main.c: 296:     }
  7524  05D3  2E98               	goto	l1558
  7525  05D4                     l8977:
  7526  05D4  3044               	movlw	68
  7527  05D5  0628               	xorwf	_buffer_sys^(0+640),w
  7528  05D6  1D03               	btfss	3,2
  7529  05D7  2DD9               	goto	u9411
  7530  05D8  2DDA               	goto	u9410
  7531  05D9                     u9411:
  7532  05D9  2DF1               	goto	l8989
  7533  05DA                     u9410:
  7534  05DA                     l8979:
  7535                           
  7536                           ;main.c: 298:         cnt_sys = 0;
  7537  05DA  0022               	movlb	2	; select bank2
  7538  05DB  01DC               	clrf	_cnt_sys^(0+256)
  7539  05DC                     l8981:
  7540                           
  7541                           ;main.c: 299:         if(t_dp == 1000) t_dp = 32;
  7542  05DC  30E8               	movlw	232
  7543  05DD  0020               	movlb	0	; select bank0
  7544  05DE  0660               	xorwf	_t_dp,w
  7545  05DF  3003               	movlw	3
  7546  05E0  1903               	skipnz
  7547  05E1  0661               	xorwf	_t_dp+1,w
  7548  05E2  1D03               	btfss	3,2
  7549  05E3  2DE5               	goto	u9421
  7550  05E4  2DE6               	goto	u9420
  7551  05E5                     u9421:
  7552  05E5  2DEA               	goto	l8985
  7553  05E6                     u9420:
  7554  05E6                     l8983:
  7555  05E6  3020               	movlw	32
  7556  05E7  00E0               	movwf	_t_dp
  7557  05E8  3000               	movlw	0
  7558  05E9  00E1               	movwf	_t_dp+1
  7559  05EA                     l8985:
  7560                           
  7561                           ;main.c: 300:         if(LATBbits.LATB0 == 0) LATBbits.LATB0 = 1;
  7562  05EA  0022               	movlb	2	; select bank2
  7563  05EB  180D               	btfsc	13,0	;volatile
  7564  05EC  2DEE               	goto	u9431
  7565  05ED  2DEF               	goto	u9430
  7566  05EE                     u9431:
  7567  05EE  2E98               	goto	l1558
  7568  05EF                     u9430:
  7569  05EF                     l8987:
  7570  05EF  140D               	bsf	13,0	;volatile
  7571  05F0  2E98               	goto	l1558
  7572  05F1                     l8989:
  7573  05F1  3055               	movlw	85
  7574  05F2  0628               	xorwf	_buffer_sys^(0+640),w
  7575  05F3  1D03               	btfss	3,2
  7576  05F4  2DF6               	goto	u9441
  7577  05F5  2DF7               	goto	u9440
  7578  05F6                     u9441:
  7579  05F6  2E0E               	goto	l9001
  7580  05F7                     u9440:
  7581  05F7                     l8991:
  7582                           
  7583                           ;main.c: 303:         cnt_sys = 0;
  7584  05F7  0022               	movlb	2	; select bank2
  7585  05F8  01DC               	clrf	_cnt_sys^(0+256)
  7586  05F9                     l8993:
  7587                           
  7588                           ;main.c: 304:         if(t_dp == 1000) t_dp = 32;
  7589  05F9  30E8               	movlw	232
  7590  05FA  0020               	movlb	0	; select bank0
  7591  05FB  0660               	xorwf	_t_dp,w
  7592  05FC  3003               	movlw	3
  7593  05FD  1903               	skipnz
  7594  05FE  0661               	xorwf	_t_dp+1,w
  7595  05FF  1D03               	btfss	3,2
  7596  0600  2E02               	goto	u9451
  7597  0601  2E03               	goto	u9450
  7598  0602                     u9451:
  7599  0602  2E07               	goto	l8997
  7600  0603                     u9450:
  7601  0603                     l8995:
  7602  0603  3020               	movlw	32
  7603  0604  00E0               	movwf	_t_dp
  7604  0605  3000               	movlw	0
  7605  0606  00E1               	movwf	_t_dp+1
  7606  0607                     l8997:
  7607                           
  7608                           ;main.c: 305:         if(LATBbits.LATB0 == 1) LATBbits.LATB0 = 0;
  7609  0607  0022               	movlb	2	; select bank2
  7610  0608  1C0D               	btfss	13,0	;volatile
  7611  0609  2E0B               	goto	u9461
  7612  060A  2E0C               	goto	u9460
  7613  060B                     u9461:
  7614  060B  2E98               	goto	l1546
  7615  060C                     u9460:
  7616  060C                     l8999:
  7617  060C  100D               	bcf	13,0	;volatile
  7618  060D  2E98               	goto	l1558
  7619  060E                     l9001:
  7620  060E  304E               	movlw	78
  7621  060F  0628               	xorwf	_buffer_sys^(0+640),w
  7622  0610  1D03               	btfss	3,2
  7623  0611  2E13               	goto	u9471
  7624  0612  2E14               	goto	u9470
  7625  0613                     u9471:
  7626  0613  2E98               	goto	l1546
  7627  0614                     u9470:
  7628  0614                     l9003:
  7629                           
  7630                           ;main.c: 308:         cnt_sys = 0;
  7631  0614  0022               	movlb	2	; select bank2
  7632  0615  01DC               	clrf	_cnt_sys^(0+256)
  7633  0616                     l9005:
  7634                           
  7635                           ;main.c: 309:         if(velManual_t != velManual) velManual = velManual_t;
  7636  0616  0023               	movlb	3	; select bank3
  7637  0617  0847               	movf	(_velManual_t+3)^(0+384),w
  7638  0618  0021               	movlb	1	; select bank1
  7639  0619  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  7640  061A  0023               	movlb	3	; select bank3
  7641  061B  0846               	movf	(_velManual_t+2)^(0+384),w
  7642  061C  0021               	movlb	1	; select bank1
  7643  061D  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  7644  061E  0023               	movlb	3	; select bank3
  7645  061F  0845               	movf	(_velManual_t+1)^(0+384),w
  7646  0620  0021               	movlb	1	; select bank1
  7647  0621  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  7648  0622  0023               	movlb	3	; select bank3
  7649  0623  0844               	movf	_velManual_t^(0+384),w
  7650  0624  0021               	movlb	1	; select bank1
  7651  0625  00A0               	movwf	___fleq@ff1^(0+128)
  7652  0626  0022               	movlb	2	; select bank2
  7653  0627  0853               	movf	(_velManual+3)^(0+256),w
  7654  0628  0021               	movlb	1	; select bank1
  7655  0629  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  7656  062A  0022               	movlb	2	; select bank2
  7657  062B  0852               	movf	(_velManual+2)^(0+256),w
  7658  062C  0021               	movlb	1	; select bank1
  7659  062D  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  7660  062E  0022               	movlb	2	; select bank2
  7661  062F  0851               	movf	(_velManual+1)^(0+256),w
  7662  0630  0021               	movlb	1	; select bank1
  7663  0631  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  7664  0632  0022               	movlb	2	; select bank2
  7665  0633  0850               	movf	_velManual^(0+256),w
  7666  0634  0021               	movlb	1	; select bank1
  7667  0635  00A4               	movwf	___fleq@ff2^(0+128)
  7668  0636  3188  2000  3183   	fcall	___fleq
  7669  0639  1803               	btfsc	3,0
  7670  063A  2E3C               	goto	u9481
  7671  063B  2E3D               	goto	u9480
  7672  063C                     u9481:
  7673  063C  2E4D               	goto	l9009
  7674  063D                     u9480:
  7675  063D                     l9007:
  7676  063D  0023               	movlb	3	; select bank3
  7677  063E  0847               	movf	(_velManual_t+3)^(0+384),w
  7678  063F  0022               	movlb	2	; select bank2
  7679  0640  00D3               	movwf	(_velManual+3)^(0+256)
  7680  0641  0023               	movlb	3	; select bank3
  7681  0642  0846               	movf	(_velManual_t+2)^(0+384),w
  7682  0643  0022               	movlb	2	; select bank2
  7683  0644  00D2               	movwf	(_velManual+2)^(0+256)
  7684  0645  0023               	movlb	3	; select bank3
  7685  0646  0845               	movf	(_velManual_t+1)^(0+384),w
  7686  0647  0022               	movlb	2	; select bank2
  7687  0648  00D1               	movwf	(_velManual+1)^(0+256)
  7688  0649  0023               	movlb	3	; select bank3
  7689  064A  0844               	movf	_velManual_t^(0+384),w
  7690  064B  0022               	movlb	2	; select bank2
  7691  064C  00D0               	movwf	_velManual^(0+256)
  7692  064D                     l9009:
  7693                           
  7694                           ;main.c: 310:         if(in_ramp == 0) ramp_step_function(0,0,100);
  7695  064D  0022               	movlb	2	; select bank2
  7696  064E  086A               	movf	_in_ramp^(0+256),w
  7697  064F  1D03               	btfss	3,2
  7698  0650  2E52               	goto	u9491
  7699  0651  2E53               	goto	u9490
  7700  0652                     u9491:
  7701  0652  2E6E               	goto	l9013
  7702  0653                     u9490:
  7703  0653                     l9011:
  7704  0653  3000               	movlw	0
  7705  0654  00BB               	movwf	(ramp_step_function@velocity+3)^(0+256)
  7706  0655  3000               	movlw	0
  7707  0656  00BA               	movwf	(ramp_step_function@velocity+2)^(0+256)
  7708  0657  3000               	movlw	0
  7709  0658  00B9               	movwf	(ramp_step_function@velocity+1)^(0+256)
  7710  0659  3000               	movlw	0
  7711  065A  00B8               	movwf	ramp_step_function@velocity^(0+256)
  7712  065B  3000               	movlw	0
  7713  065C  00BF               	movwf	(ramp_step_function@radius+3)^(0+256)
  7714  065D  3000               	movlw	0
  7715  065E  00BE               	movwf	(ramp_step_function@radius+2)^(0+256)
  7716  065F  3000               	movlw	0
  7717  0660  00BD               	movwf	(ramp_step_function@radius+1)^(0+256)
  7718  0661  3000               	movlw	0
  7719  0662  00BC               	movwf	ramp_step_function@radius^(0+256)
  7720  0663  3042               	movlw	66
  7721  0664  00C3               	movwf	(ramp_step_function@total_time+3)^(0+256)
  7722  0665  30C8               	movlw	200
  7723  0666  00C2               	movwf	(ramp_step_function@total_time+2)^(0+256)
  7724  0667  3000               	movlw	0
  7725  0668  00C1               	movwf	(ramp_step_function@total_time+1)^(0+256)
  7726  0669  3000               	movlw	0
  7727  066A  00C0               	movwf	ramp_step_function@total_time^(0+256)
  7728  066B  318B  2337  3183   	fcall	_ramp_step_function
  7729  066E                     l9013:
  7730                           
  7731                           ;main.c: 311:         omegaManual = 0;
  7732  066E  3000               	movlw	0
  7733  066F  0023               	movlb	3	; select bank3
  7734  0670  00C3               	movwf	(_omegaManual+3)^(0+384)
  7735  0671  3000               	movlw	0
  7736  0672  00C2               	movwf	(_omegaManual+2)^(0+384)
  7737  0673  3000               	movlw	0
  7738  0674  00C1               	movwf	(_omegaManual+1)^(0+384)
  7739  0675  3000               	movlw	0
  7740  0676  00C0               	movwf	_omegaManual^(0+384)
  7741  0677                     l9015:
  7742                           
  7743                           ;main.c: 312:         cntTime = 0;
  7744  0677  0022               	movlb	2	; select bank2
  7745  0678  01DA               	clrf	_cntTime^(0+256)
  7746  0679  01DB               	clrf	(_cntTime+1)^(0+256)
  7747  067A                     l9017:
  7748                           
  7749                           ;main.c: 313:         totalTime = 0;
  7750  067A  0020               	movlb	0	; select bank0
  7751  067B  01D4               	clrf	_totalTime
  7752  067C  01D5               	clrf	_totalTime+1
  7753  067D                     l9019:
  7754                           
  7755                           ;main.c: 314:         velocity_sys = 0;
  7756  067D  3000               	movlw	0
  7757  067E  0022               	movlb	2	; select bank2
  7758  067F  00C7               	movwf	(_velocity_sys+3)^(0+256)
  7759  0680  3000               	movlw	0
  7760  0681  00C6               	movwf	(_velocity_sys+2)^(0+256)
  7761  0682  3000               	movlw	0
  7762  0683  00C5               	movwf	(_velocity_sys+1)^(0+256)
  7763  0684  3000               	movlw	0
  7764  0685  00C4               	movwf	_velocity_sys^(0+256)
  7765  0686                     l9021:
  7766                           
  7767                           ;main.c: 315:         omega_sys = 0;
  7768  0686  3000               	movlw	0
  7769  0687  0024               	movlb	4	; select bank4
  7770  0688  00E5               	movwf	(_omega_sys+3)^(0+512)
  7771  0689  3000               	movlw	0
  7772  068A  00E4               	movwf	(_omega_sys+2)^(0+512)
  7773  068B  3000               	movlw	0
  7774  068C  00E3               	movwf	(_omega_sys+1)^(0+512)
  7775  068D  3000               	movlw	0
  7776  068E  00E2               	movwf	_omega_sys^(0+512)
  7777  068F                     l9023:
  7778                           
  7779                           ;main.c: 316:         in_ramp = 1;
  7780  068F  0022               	movlb	2	; select bank2
  7781  0690  01EA               	clrf	_in_ramp^(0+256)
  7782  0691  0AEA               	incf	_in_ramp^(0+256),f
  7783  0692                     l9025:
  7784                           
  7785                           ;main.c: 318:         t_dp = 1000;
  7786  0692  30E8               	movlw	232
  7787  0693  0020               	movlb	0	; select bank0
  7788  0694  00E0               	movwf	_t_dp
  7789  0695  3003               	movlw	3
  7790  0696  00E1               	movwf	_t_dp+1
  7791  0697  2E98               	goto	l1558
  7792  0698                     l1546:
  7793  0698                     l1558:
  7794  0698  0008               	return
  7795  0699                     __end_of_ManualControl:
  7796                           
  7797                           	psect	text23
  7798  2645                     __ptext23:	
  7799 ;; *************** function _EUSART2_Write *****************
  7800 ;; Defined at:
  7801 ;;		line 132 in file "mcc_generated_files/eusart2.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  txData          1    wreg     unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  txData          1   14[BANK0 ] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7818 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7819 ;;Total ram usage:        1 bytes
  7820 ;; Hardware stack levels used: 1
  7821 ;; Hardware stack levels required when called: 5
  7822 ;; This function calls:
  7823 ;;		Nothing
  7824 ;; This function is called by:
  7825 ;;		_main
  7826 ;;		_putch
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           
  7831                           ;psect for function _EUSART2_Write
  7832  2645                     _EUSART2_Write:
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in _EUSART2_Write: [wreg]
  7836                           ;EUSART2_Write@txData stored from wreg
  7837  2645  0020               	movlb	0	; select bank0
  7838  2646  00AE               	movwf	EUSART2_Write@txData
  7839  2647                     l7119:
  7840  2647                     l1291:	
  7841                           ;mcc_generated_files/eusart2.c: 135:     {;mcc_generated_files/eusart2.c: 136:     }
  7842                           
  7843                           
  7844                           ;mcc_generated_files/eusart2.c: 134:     while(0 == PIR4bits.TX2IF)
  7845  2647  1E14               	btfss	20,4	;volatile
  7846  2648  2E4A               	goto	u6131
  7847  2649  2E4B               	goto	u6130
  7848  264A                     u6131:
  7849  264A  2E47               	goto	l1291
  7850  264B                     u6130:
  7851  264B                     l7121:
  7852                           
  7853                           ;mcc_generated_files/eusart2.c: 138:     TX2REG = txData;
  7854  264B  082E               	movf	EUSART2_Write@txData,w
  7855  264C  0029               	movlb	9	; select bank9
  7856  264D  0092               	movwf	18	;volatile
  7857  264E                     l1294:
  7858  264E  0008               	return
  7859  264F                     __end_of_EUSART2_Write:
  7860                           
  7861                           	psect	text24
  7862  25E0                     __ptext24:	
  7863 ;; *************** function _EUSART1_is_rx_ready *****************
  7864 ;; Defined at:
  7865 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  1    wreg      _Bool 
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;Total ram usage:        0 bytes
  7884 ;; Hardware stack levels used: 1
  7885 ;; Hardware stack levels required when called: 5
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_main
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function _EUSART1_is_rx_ready
  7895  25E0                     _EUSART1_is_rx_ready:
  7896  25E0                     l7103:	
  7897                           ;incstack = 0
  7898                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
  7899                           
  7900                           
  7901                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7902  25E0  0020               	movlb	0	; select bank0
  7903  25E1  0E11               	swapf	17,w	;volatile
  7904  25E2  0C89               	rrf	9,f
  7905  25E3  3901               	andlw	1
  7906  25E4                     l515:
  7907  25E4  0008               	return
  7908  25E5                     __end_of_EUSART1_is_rx_ready:
  7909                           
  7910                           	psect	text25
  7911  267E                     __ptext25:	
  7912 ;; *************** function _EUSART1_Read *****************
  7913 ;; Defined at:
  7914 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;		None
  7917 ;; Auto vars:     Size  Location     Type
  7918 ;;		None
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  1    wreg      unsigned char 
  7921 ;; Registers used:
  7922 ;;		wreg, status,2
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7932 ;;Total ram usage:        0 bytes
  7933 ;; Hardware stack levels used: 1
  7934 ;; Hardware stack levels required when called: 5
  7935 ;; This function calls:
  7936 ;;		Nothing
  7937 ;; This function is called by:
  7938 ;;		_main
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           
  7943                           ;psect for function _EUSART1_Read
  7944  267E                     _EUSART1_Read:
  7945  267E                     l7107:	
  7946                           ;incstack = 0
  7947                           ; Regs used in _EUSART1_Read: [wreg+status,2]
  7948                           
  7949  267E                     l524:	
  7950                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
  7951                           
  7952                           
  7953                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7954  267E  0020               	movlb	0	; select bank0
  7955  267F  1E91               	btfss	17,5	;volatile
  7956  2680  2E82               	goto	u6111
  7957  2681  2E83               	goto	u6110
  7958  2682                     u6111:
  7959  2682  2E7E               	goto	l524
  7960  2683                     u6110:
  7961  2683                     l7109:
  7962                           
  7963                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7964  2683  0022               	movlb	2	; select bank2
  7965  2684  01E3               	clrf	_eusart1RxLastError^(0+256)	;volatile
  7966  2685                     l7111:
  7967                           
  7968                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  7969  2685  0023               	movlb	3	; select bank3
  7970  2686  1C9D               	btfss	29,1	;volatile
  7971  2687  2E89               	goto	u6121
  7972  2688  2E8A               	goto	u6120
  7973  2689                     u6121:
  7974  2689  2E8C               	goto	l7115
  7975  268A                     u6120:
  7976  268A                     l7113:
  7977                           
  7978                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  7979  268A  121D               	bcf	29,4	;volatile
  7980                           
  7981                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  7982  268B  161D               	bsf	29,4	;volatile
  7983  268C                     l7115:
  7984                           
  7985                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  7986  268C  0819               	movf	25,w	;volatile
  7987  268D                     l528:
  7988  268D  0008               	return
  7989  268E                     __end_of_EUSART1_Read:
  7990                           
  7991                           	psect	text26
  7992  1E52                     __ptext26:	
  7993 ;; *************** function _AutoLineHandle *****************
  7994 ;; Defined at:
  7995 ;;		line 386 in file "main.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;		None
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;  j               2   26[BANK1 ] int 
  8000 ;;  j               2   24[BANK1 ] int 
  8001 ;;  j               2   22[BANK1 ] int 
  8002 ;;  j               2   20[BANK1 ] int 
  8003 ;;  i               2   28[BANK1 ] int 
  8004 ;;  bufferALine_   20    0[BANK1 ] unsigned char [20]
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      void 
  8007 ;; Registers used:
  8008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;      Totals:         0       1      30       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;Total ram usage:       31 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; Hardware stack levels required when called: 7
  8021 ;; This function calls:
  8022 ;;		___xxtofl
  8023 ;;		_atoi
  8024 ;;		_strlen
  8025 ;; This function is called by:
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           
  8031                           ;psect for function _AutoLineHandle
  8032  1E52                     _AutoLineHandle:
  8033  1E52                     l9121:	
  8034                           ;incstack = 0
  8035                           ; Regs used in _AutoLineHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8036                           
  8037                           
  8038                           ;main.c: 388:     char bufferALine_t[20];;main.c: 389:     if((buffer_sys[0] == 'S') || 
      +                          (flagALine == 1)){
  8039  1E52  3053               	movlw	83
  8040  1E53  0025               	movlb	5	; select bank5
  8041  1E54  0628               	xorwf	_buffer_sys^(0+640),w
  8042  1E55  1903               	btfsc	3,2
  8043  1E56  2E58               	goto	u9681
  8044  1E57  2E59               	goto	u9680
  8045  1E58                     u9681:
  8046  1E58  2E5F               	goto	l1598
  8047  1E59                     u9680:
  8048  1E59                     l9123:
  8049  1E59  0021               	movlb	1	; select bank1
  8050  1E5A  036F               	decf	_flagALine^(0+128),w
  8051  1E5B  1D03               	btfss	3,2
  8052  1E5C  2E5E               	goto	u9691
  8053  1E5D  2E5F               	goto	u9690
  8054  1E5E                     u9691:
  8055  1E5E  2FFF               	goto	l1625
  8056  1E5F                     u9690:
  8057  1E5F                     l1598:
  8058                           
  8059                           ;main.c: 390:         flagALine = 1;
  8060  1E5F  0021               	movlb	1	; select bank1
  8061  1E60  01EF               	clrf	_flagALine^(0+128)
  8062  1E61  0AEF               	incf	_flagALine^(0+128),f
  8063  1E62                     l9125:
  8064                           
  8065                           ;main.c: 391:         for(int i = 0; i < strlen(buffer_sys); i++){
  8066  1E62  01BC               	clrf	AutoLineHandle@i^(0+128)
  8067  1E63  01BD               	clrf	(AutoLineHandle@i+1)^(0+128)
  8068  1E64  2FE9               	goto	l9203
  8069  1E65                     l9127:
  8070                           
  8071                           ;main.c: 392:             if(buffer_sys[0] == 'S'){
  8072  1E65  3053               	movlw	83
  8073  1E66  0025               	movlb	5	; select bank5
  8074  1E67  0628               	xorwf	_buffer_sys^(0+640),w
  8075  1E68  1D03               	btfss	3,2
  8076  1E69  2E6B               	goto	u9701
  8077  1E6A  2E6C               	goto	u9700
  8078  1E6B                     u9701:
  8079  1E6B  2E72               	goto	l9131
  8080  1E6C                     u9700:
  8081  1E6C                     l9129:
  8082                           
  8083                           ;main.c: 393:                 buffer_sys[0] = '0';
  8084  1E6C  3030               	movlw	48
  8085  1E6D  0020               	movlb	0	; select bank0
  8086  1E6E  00D1               	movwf	??_AutoLineHandle
  8087  1E6F  0851               	movf	??_AutoLineHandle,w
  8088  1E70  0025               	movlb	5	; select bank5
  8089  1E71  00A8               	movwf	_buffer_sys^(0+640)
  8090  1E72                     l9131:
  8091                           
  8092                           ;main.c: 395:             if((buffer_sys[i] == 'v') || (buffer_sys[i] == 'l') || (buffer
      +                          _sys[i] == 'd') || (buffer_sys[i] == '#')){
  8093  1E72  0021               	movlb	1	; select bank1
  8094  1E73  083C               	movf	AutoLineHandle@i^(0+128),w
  8095  1E74  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8096  1E75  0086               	movwf	6
  8097  1E76  3002               	movlw	2	; select bank5/6
  8098  1E77  0087               	movwf	7
  8099  1E78  3076               	movlw	118
  8100  1E79  0601               	xorwf	1,w
  8101  1E7A  1903               	btfsc	3,2
  8102  1E7B  2E7D               	goto	u9711
  8103  1E7C  2E7E               	goto	u9710
  8104  1E7D                     u9711:
  8105  1E7D  2E9F               	goto	l9139
  8106  1E7E                     u9710:
  8107  1E7E                     l9133:
  8108  1E7E  083C               	movf	AutoLineHandle@i^(0+128),w
  8109  1E7F  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8110  1E80  0086               	movwf	6
  8111  1E81  3002               	movlw	2	; select bank5/6
  8112  1E82  0087               	movwf	7
  8113  1E83  306C               	movlw	108
  8114  1E84  0601               	xorwf	1,w
  8115  1E85  1903               	btfsc	3,2
  8116  1E86  2E88               	goto	u9721
  8117  1E87  2E89               	goto	u9720
  8118  1E88                     u9721:
  8119  1E88  2E9F               	goto	l9139
  8120  1E89                     u9720:
  8121  1E89                     l9135:
  8122  1E89  083C               	movf	AutoLineHandle@i^(0+128),w
  8123  1E8A  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8124  1E8B  0086               	movwf	6
  8125  1E8C  3002               	movlw	2	; select bank5/6
  8126  1E8D  0087               	movwf	7
  8127  1E8E  3064               	movlw	100
  8128  1E8F  0601               	xorwf	1,w
  8129  1E90  1903               	btfsc	3,2
  8130  1E91  2E93               	goto	u9731
  8131  1E92  2E94               	goto	u9730
  8132  1E93                     u9731:
  8133  1E93  2E9F               	goto	l9139
  8134  1E94                     u9730:
  8135  1E94                     l9137:
  8136  1E94  083C               	movf	AutoLineHandle@i^(0+128),w
  8137  1E95  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8138  1E96  0086               	movwf	6
  8139  1E97  3002               	movlw	2	; select bank5/6
  8140  1E98  0087               	movwf	7
  8141  1E99  3023               	movlw	35
  8142  1E9A  0601               	xorwf	1,w
  8143  1E9B  1D03               	btfss	3,2
  8144  1E9C  2E9E               	goto	u9741
  8145  1E9D  2E9F               	goto	u9740
  8146  1E9E                     u9741:
  8147  1E9E  2FD1               	goto	l9197
  8148  1E9F                     u9740:
  8149  1E9F                     l9139:
  8150                           
  8151                           ;main.c: 396:                 if((buffer_sys[i] == 'v')){
  8152  1E9F  083C               	movf	AutoLineHandle@i^(0+128),w
  8153  1EA0  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8154  1EA1  0086               	movwf	6
  8155  1EA2  3002               	movlw	2	; select bank5/6
  8156  1EA3  0087               	movwf	7
  8157  1EA4  3076               	movlw	118
  8158  1EA5  0601               	xorwf	1,w
  8159  1EA6  1D03               	btfss	3,2
  8160  1EA7  2EA9               	goto	u9751
  8161  1EA8  2EAA               	goto	u9750
  8162  1EA9                     u9751:
  8163  1EA9  2EFC               	goto	l9153
  8164  1EAA                     u9750:
  8165  1EAA                     l9141:
  8166                           
  8167                           ;main.c: 397:                     velALine = atoi(bufferALine_t);
  8168  1EAA  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8169  1EAB  0020               	movlb	0	; select bank0
  8170  1EAC  00B4               	movwf	atoi@s
  8171  1EAD  3000               	movlw	high AutoLineHandle@bufferALine_t
  8172  1EAE  00B5               	movwf	atoi@s+1
  8173  1EAF  319B  230A  319E   	fcall	_atoi
  8174  1EB2  0020               	movlb	0	; select bank0
  8175  1EB3  0834               	movf	?_atoi,w
  8176  1EB4  00C3               	movwf	___xxtofl@val
  8177  1EB5  0835               	movf	?_atoi+1,w
  8178  1EB6  00C4               	movwf	___xxtofl@val+1
  8179  1EB7  0D89               	rlf	9,f
  8180  1EB8  3B89               	subwfb	9,f
  8181  1EB9  0989               	comf	9,f
  8182  1EBA  00C5               	movwf	___xxtofl@val+2
  8183  1EBB  00C6               	movwf	___xxtofl@val+3
  8184  1EBC  3001               	movlw	1
  8185  1EBD  319A  225D  319E   	fcall	___xxtofl
  8186  1EC0  0020               	movlb	0	; select bank0
  8187  1EC1  0846               	movf	?___xxtofl+3,w
  8188  1EC2  0023               	movlb	3	; select bank3
  8189  1EC3  00BF               	movwf	(_velALine+3)^(0+384)
  8190  1EC4  0020               	movlb	0	; select bank0
  8191  1EC5  0845               	movf	?___xxtofl+2,w
  8192  1EC6  0023               	movlb	3	; select bank3
  8193  1EC7  00BE               	movwf	(_velALine+2)^(0+384)
  8194  1EC8  0020               	movlb	0	; select bank0
  8195  1EC9  0844               	movf	?___xxtofl+1,w
  8196  1ECA  0023               	movlb	3	; select bank3
  8197  1ECB  00BD               	movwf	(_velALine+1)^(0+384)
  8198  1ECC  0020               	movlb	0	; select bank0
  8199  1ECD  0843               	movf	?___xxtofl,w
  8200  1ECE  0023               	movlb	3	; select bank3
  8201  1ECF  00BC               	movwf	_velALine^(0+384)
  8202  1ED0                     l9143:
  8203                           
  8204                           ;main.c: 399:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  8205  1ED0  0021               	movlb	1	; select bank1
  8206  1ED1  01B4               	clrf	AutoLineHandle@j^(0+128)
  8207  1ED2  01B5               	clrf	(AutoLineHandle@j+1)^(0+128)
  8208  1ED3  2EE4               	goto	l9149
  8209  1ED4                     l9145:
  8210                           
  8211                           ;main.c: 400:                         bufferALine_t[j] = ' ';
  8212  1ED4  3020               	movlw	32
  8213  1ED5  0020               	movlb	0	; select bank0
  8214  1ED6  00D1               	movwf	??_AutoLineHandle
  8215  1ED7  0021               	movlb	1	; select bank1
  8216  1ED8  0834               	movf	AutoLineHandle@j^(0+128),w
  8217  1ED9  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8218  1EDA  0086               	movwf	6
  8219  1EDB  0187               	clrf	7
  8220  1EDC  0020               	movlb	0	; select bank0
  8221  1EDD  0851               	movf	??_AutoLineHandle,w
  8222  1EDE  0081               	movwf	1
  8223  1EDF                     l9147:
  8224                           
  8225                           ;main.c: 401:                     }
  8226  1EDF  3001               	movlw	1
  8227  1EE0  0021               	movlb	1	; select bank1
  8228  1EE1  07B4               	addwf	AutoLineHandle@j^(0+128),f
  8229  1EE2  3000               	movlw	0
  8230  1EE3  3DB5               	addwfc	(AutoLineHandle@j+1)^(0+128),f
  8231  1EE4                     l9149:
  8232  1EE4  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8233  1EE5  0020               	movlb	0	; select bank0
  8234  1EE6  00AE               	movwf	strlen@s
  8235  1EE7  3000               	movlw	high AutoLineHandle@bufferALine_t
  8236  1EE8  00AF               	movwf	strlen@s+1
  8237  1EE9  31A6  26C0  319E   	fcall	_strlen
  8238  1EEC  0020               	movlb	0	; select bank0
  8239  1EED  082F               	movf	?_strlen+1,w
  8240  1EEE  0021               	movlb	1	; select bank1
  8241  1EEF  0235               	subwf	(AutoLineHandle@j+1)^(0+128),w
  8242  1EF0  1D03               	skipz
  8243  1EF1  2EF6               	goto	u9765
  8244  1EF2  0020               	movlb	0	; select bank0
  8245  1EF3  082E               	movf	?_strlen,w
  8246  1EF4  0021               	movlb	1	; select bank1
  8247  1EF5  0234               	subwf	AutoLineHandle@j^(0+128),w
  8248  1EF6                     u9765:
  8249  1EF6  1C03               	skipc
  8250  1EF7  2EF9               	goto	u9761
  8251  1EF8  2EFA               	goto	u9760
  8252  1EF9                     u9761:
  8253  1EF9  2ED4               	goto	l9145
  8254  1EFA                     u9760:
  8255  1EFA                     l9151:
  8256                           
  8257                           ;main.c: 402:                     cntALine = 0;
  8258  1EFA  0020               	movlb	0	; select bank0
  8259  1EFB  01D8               	clrf	_cntALine
  8260  1EFC                     l9153:
  8261                           
  8262                           ;main.c: 404:                 if(buffer_sys[i] == 'l'){
  8263  1EFC  0021               	movlb	1	; select bank1
  8264  1EFD  083C               	movf	AutoLineHandle@i^(0+128),w
  8265  1EFE  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8266  1EFF  0086               	movwf	6
  8267  1F00  3002               	movlw	2	; select bank5/6
  8268  1F01  0087               	movwf	7
  8269  1F02  306C               	movlw	108
  8270  1F03  0601               	xorwf	1,w
  8271  1F04  1D03               	btfss	3,2
  8272  1F05  2F07               	goto	u9771
  8273  1F06  2F08               	goto	u9770
  8274  1F07                     u9771:
  8275  1F07  2F44               	goto	l9167
  8276  1F08                     u9770:
  8277  1F08                     l9155:
  8278                           
  8279                           ;main.c: 405:                     length_ALine = atoi(bufferALine_t);
  8280  1F08  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8281  1F09  0020               	movlb	0	; select bank0
  8282  1F0A  00B4               	movwf	atoi@s
  8283  1F0B  3000               	movlw	high AutoLineHandle@bufferALine_t
  8284  1F0C  00B5               	movwf	atoi@s+1
  8285  1F0D  319B  230A  319E   	fcall	_atoi
  8286  1F10  0020               	movlb	0	; select bank0
  8287  1F11  0835               	movf	?_atoi+1,w
  8288  1F12  0023               	movlb	3	; select bank3
  8289  1F13  00DF               	movwf	(_length_ALine+1)^(0+384)
  8290  1F14  0020               	movlb	0	; select bank0
  8291  1F15  0834               	movf	?_atoi,w
  8292  1F16  0023               	movlb	3	; select bank3
  8293  1F17  00DE               	movwf	_length_ALine^(0+384)
  8294  1F18                     l9157:
  8295                           
  8296                           ;main.c: 407:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  8297  1F18  0021               	movlb	1	; select bank1
  8298  1F19  01B6               	clrf	AutoLineHandle@j_2373^(0+128)
  8299  1F1A  01B7               	clrf	(AutoLineHandle@j_2373+1)^(0+128)
  8300  1F1B  2F2C               	goto	l9163
  8301  1F1C                     l9159:
  8302                           
  8303                           ;main.c: 408:                         bufferALine_t[j] = ' ';
  8304  1F1C  3020               	movlw	32
  8305  1F1D  0020               	movlb	0	; select bank0
  8306  1F1E  00D1               	movwf	??_AutoLineHandle
  8307  1F1F  0021               	movlb	1	; select bank1
  8308  1F20  0836               	movf	AutoLineHandle@j_2373^(0+128),w
  8309  1F21  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8310  1F22  0086               	movwf	6
  8311  1F23  0187               	clrf	7
  8312  1F24  0020               	movlb	0	; select bank0
  8313  1F25  0851               	movf	??_AutoLineHandle,w
  8314  1F26  0081               	movwf	1
  8315  1F27                     l9161:
  8316                           
  8317                           ;main.c: 409:                     }
  8318  1F27  3001               	movlw	1
  8319  1F28  0021               	movlb	1	; select bank1
  8320  1F29  07B6               	addwf	AutoLineHandle@j_2373^(0+128),f
  8321  1F2A  3000               	movlw	0
  8322  1F2B  3DB7               	addwfc	(AutoLineHandle@j_2373+1)^(0+128),f
  8323  1F2C                     l9163:
  8324  1F2C  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8325  1F2D  0020               	movlb	0	; select bank0
  8326  1F2E  00AE               	movwf	strlen@s
  8327  1F2F  3000               	movlw	high AutoLineHandle@bufferALine_t
  8328  1F30  00AF               	movwf	strlen@s+1
  8329  1F31  31A6  26C0  319E   	fcall	_strlen
  8330  1F34  0020               	movlb	0	; select bank0
  8331  1F35  082F               	movf	?_strlen+1,w
  8332  1F36  0021               	movlb	1	; select bank1
  8333  1F37  0237               	subwf	(AutoLineHandle@j_2373+1)^(0+128),w
  8334  1F38  1D03               	skipz
  8335  1F39  2F3E               	goto	u9785
  8336  1F3A  0020               	movlb	0	; select bank0
  8337  1F3B  082E               	movf	?_strlen,w
  8338  1F3C  0021               	movlb	1	; select bank1
  8339  1F3D  0236               	subwf	AutoLineHandle@j_2373^(0+128),w
  8340  1F3E                     u9785:
  8341  1F3E  1C03               	skipc
  8342  1F3F  2F41               	goto	u9781
  8343  1F40  2F42               	goto	u9780
  8344  1F41                     u9781:
  8345  1F41  2F1C               	goto	l9159
  8346  1F42                     u9780:
  8347  1F42                     l9165:
  8348                           
  8349                           ;main.c: 410:                     cntALine = 0;
  8350  1F42  0020               	movlb	0	; select bank0
  8351  1F43  01D8               	clrf	_cntALine
  8352  1F44                     l9167:
  8353                           
  8354                           ;main.c: 412:                 if(buffer_sys[i] == 'd'){
  8355  1F44  0021               	movlb	1	; select bank1
  8356  1F45  083C               	movf	AutoLineHandle@i^(0+128),w
  8357  1F46  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8358  1F47  0086               	movwf	6
  8359  1F48  3002               	movlw	2	; select bank5/6
  8360  1F49  0087               	movwf	7
  8361  1F4A  3064               	movlw	100
  8362  1F4B  0601               	xorwf	1,w
  8363  1F4C  1D03               	btfss	3,2
  8364  1F4D  2F4F               	goto	u9791
  8365  1F4E  2F50               	goto	u9790
  8366  1F4F                     u9791:
  8367  1F4F  2F89               	goto	l9181
  8368  1F50                     u9790:
  8369  1F50                     l9169:
  8370                           
  8371                           ;main.c: 413:                     direct_ALine = atoi(bufferALine_t);
  8372  1F50  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8373  1F51  0020               	movlb	0	; select bank0
  8374  1F52  00B4               	movwf	atoi@s
  8375  1F53  3000               	movlw	high AutoLineHandle@bufferALine_t
  8376  1F54  00B5               	movwf	atoi@s+1
  8377  1F55  319B  230A  319E   	fcall	_atoi
  8378  1F58  0020               	movlb	0	; select bank0
  8379  1F59  0835               	movf	?_atoi+1,w
  8380  1F5A  00DF               	movwf	_direct_ALine+1
  8381  1F5B  0834               	movf	?_atoi,w
  8382  1F5C  00DE               	movwf	_direct_ALine
  8383  1F5D                     l9171:
  8384                           
  8385                           ;main.c: 415:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  8386  1F5D  0021               	movlb	1	; select bank1
  8387  1F5E  01B8               	clrf	AutoLineHandle@j_2374^(0+128)
  8388  1F5F  01B9               	clrf	(AutoLineHandle@j_2374+1)^(0+128)
  8389  1F60  2F71               	goto	l9177
  8390  1F61                     l9173:
  8391                           
  8392                           ;main.c: 416:                         bufferALine_t[j] = ' ';
  8393  1F61  3020               	movlw	32
  8394  1F62  0020               	movlb	0	; select bank0
  8395  1F63  00D1               	movwf	??_AutoLineHandle
  8396  1F64  0021               	movlb	1	; select bank1
  8397  1F65  0838               	movf	AutoLineHandle@j_2374^(0+128),w
  8398  1F66  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8399  1F67  0086               	movwf	6
  8400  1F68  0187               	clrf	7
  8401  1F69  0020               	movlb	0	; select bank0
  8402  1F6A  0851               	movf	??_AutoLineHandle,w
  8403  1F6B  0081               	movwf	1
  8404  1F6C                     l9175:
  8405                           
  8406                           ;main.c: 417:                     }
  8407  1F6C  3001               	movlw	1
  8408  1F6D  0021               	movlb	1	; select bank1
  8409  1F6E  07B8               	addwf	AutoLineHandle@j_2374^(0+128),f
  8410  1F6F  3000               	movlw	0
  8411  1F70  3DB9               	addwfc	(AutoLineHandle@j_2374+1)^(0+128),f
  8412  1F71                     l9177:
  8413  1F71  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8414  1F72  0020               	movlb	0	; select bank0
  8415  1F73  00AE               	movwf	strlen@s
  8416  1F74  3000               	movlw	high AutoLineHandle@bufferALine_t
  8417  1F75  00AF               	movwf	strlen@s+1
  8418  1F76  31A6  26C0  319E   	fcall	_strlen
  8419  1F79  0020               	movlb	0	; select bank0
  8420  1F7A  082F               	movf	?_strlen+1,w
  8421  1F7B  0021               	movlb	1	; select bank1
  8422  1F7C  0239               	subwf	(AutoLineHandle@j_2374+1)^(0+128),w
  8423  1F7D  1D03               	skipz
  8424  1F7E  2F83               	goto	u9805
  8425  1F7F  0020               	movlb	0	; select bank0
  8426  1F80  082E               	movf	?_strlen,w
  8427  1F81  0021               	movlb	1	; select bank1
  8428  1F82  0238               	subwf	AutoLineHandle@j_2374^(0+128),w
  8429  1F83                     u9805:
  8430  1F83  1C03               	skipc
  8431  1F84  2F86               	goto	u9801
  8432  1F85  2F87               	goto	u9800
  8433  1F86                     u9801:
  8434  1F86  2F61               	goto	l9173
  8435  1F87                     u9800:
  8436  1F87                     l9179:
  8437                           
  8438                           ;main.c: 418:                     cntALine = 0;
  8439  1F87  0020               	movlb	0	; select bank0
  8440  1F88  01D8               	clrf	_cntALine
  8441  1F89                     l9181:
  8442                           
  8443                           ;main.c: 420:                 if(buffer_sys[i] == '#'){
  8444  1F89  0021               	movlb	1	; select bank1
  8445  1F8A  083C               	movf	AutoLineHandle@i^(0+128),w
  8446  1F8B  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8447  1F8C  0086               	movwf	6
  8448  1F8D  3002               	movlw	2	; select bank5/6
  8449  1F8E  0087               	movwf	7
  8450  1F8F  3023               	movlw	35
  8451  1F90  0601               	xorwf	1,w
  8452  1F91  1D03               	btfss	3,2
  8453  1F92  2F94               	goto	u9811
  8454  1F93  2F95               	goto	u9810
  8455  1F94                     u9811:
  8456  1F94  2FE4               	goto	l9201
  8457  1F95                     u9810:
  8458  1F95                     l9183:
  8459                           
  8460                           ;main.c: 421:                     if(direct_ALine != 0) flagALine = 2;
  8461  1F95  0020               	movlb	0	; select bank0
  8462  1F96  085E               	movf	_direct_ALine,w
  8463  1F97  045F               	iorwf	_direct_ALine+1,w
  8464  1F98  1903               	btfsc	3,2
  8465  1F99  2F9B               	goto	u9821
  8466  1F9A  2F9C               	goto	u9820
  8467  1F9B                     u9821:
  8468  1F9B  2FA2               	goto	l9187
  8469  1F9C                     u9820:
  8470  1F9C                     l9185:
  8471  1F9C  3002               	movlw	2
  8472  1F9D  00D1               	movwf	??_AutoLineHandle
  8473  1F9E  0851               	movf	??_AutoLineHandle,w
  8474  1F9F  0021               	movlb	1	; select bank1
  8475  1FA0  00EF               	movwf	_flagALine^(0+128)
  8476  1FA1  2FA7               	goto	l9189
  8477  1FA2                     l9187:
  8478  1FA2  3003               	movlw	3
  8479  1FA3  00D1               	movwf	??_AutoLineHandle
  8480  1FA4  0851               	movf	??_AutoLineHandle,w
  8481  1FA5  0021               	movlb	1	; select bank1
  8482  1FA6  00EF               	movwf	_flagALine^(0+128)
  8483  1FA7                     l9189:
  8484                           
  8485                           ;main.c: 424:                     for(int j = 0; j < strlen(bufferALine_t);j++){
  8486  1FA7  01BA               	clrf	AutoLineHandle@j_2375^(0+128)
  8487  1FA8  01BB               	clrf	(AutoLineHandle@j_2375+1)^(0+128)
  8488  1FA9  2FBA               	goto	l9195
  8489  1FAA                     l9191:
  8490                           
  8491                           ;main.c: 425:                         bufferALine_t[j] = ' ';
  8492  1FAA  3020               	movlw	32
  8493  1FAB  0020               	movlb	0	; select bank0
  8494  1FAC  00D1               	movwf	??_AutoLineHandle
  8495  1FAD  0021               	movlb	1	; select bank1
  8496  1FAE  083A               	movf	AutoLineHandle@j_2375^(0+128),w
  8497  1FAF  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8498  1FB0  0086               	movwf	6
  8499  1FB1  0187               	clrf	7
  8500  1FB2  0020               	movlb	0	; select bank0
  8501  1FB3  0851               	movf	??_AutoLineHandle,w
  8502  1FB4  0081               	movwf	1
  8503  1FB5                     l9193:
  8504                           
  8505                           ;main.c: 426:                     }
  8506  1FB5  3001               	movlw	1
  8507  1FB6  0021               	movlb	1	; select bank1
  8508  1FB7  07BA               	addwf	AutoLineHandle@j_2375^(0+128),f
  8509  1FB8  3000               	movlw	0
  8510  1FB9  3DBB               	addwfc	(AutoLineHandle@j_2375+1)^(0+128),f
  8511  1FBA                     l9195:
  8512  1FBA  30A0               	movlw	low AutoLineHandle@bufferALine_t
  8513  1FBB  0020               	movlb	0	; select bank0
  8514  1FBC  00AE               	movwf	strlen@s
  8515  1FBD  3000               	movlw	high AutoLineHandle@bufferALine_t
  8516  1FBE  00AF               	movwf	strlen@s+1
  8517  1FBF  31A6  26C0  319E   	fcall	_strlen
  8518  1FC2  0020               	movlb	0	; select bank0
  8519  1FC3  082F               	movf	?_strlen+1,w
  8520  1FC4  0021               	movlb	1	; select bank1
  8521  1FC5  023B               	subwf	(AutoLineHandle@j_2375+1)^(0+128),w
  8522  1FC6  1D03               	skipz
  8523  1FC7  2FCC               	goto	u9835
  8524  1FC8  0020               	movlb	0	; select bank0
  8525  1FC9  082E               	movf	?_strlen,w
  8526  1FCA  0021               	movlb	1	; select bank1
  8527  1FCB  023A               	subwf	AutoLineHandle@j_2375^(0+128),w
  8528  1FCC                     u9835:
  8529  1FCC  1C03               	skipc
  8530  1FCD  2FCF               	goto	u9831
  8531  1FCE  2FD0               	goto	u9830
  8532  1FCF                     u9831:
  8533  1FCF  2FAA               	goto	l9191
  8534  1FD0                     u9830:
  8535  1FD0  2FE4               	goto	l9201
  8536  1FD1                     l9197:
  8537                           
  8538                           ;main.c: 430:                 bufferALine_t[cntALine] = buffer_sys[i];
  8539  1FD1  083C               	movf	AutoLineHandle@i^(0+128),w
  8540  1FD2  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  8541  1FD3  0086               	movwf	6
  8542  1FD4  3002               	movlw	2	; select bank5/6
  8543  1FD5  0087               	movwf	7
  8544  1FD6  0801               	movf	1,w
  8545  1FD7  0020               	movlb	0	; select bank0
  8546  1FD8  00D1               	movwf	??_AutoLineHandle
  8547  1FD9  0858               	movf	_cntALine,w
  8548  1FDA  3EA0               	addlw	(low (AutoLineHandle@bufferALine_t| 0))& (0+255)
  8549  1FDB  0086               	movwf	6
  8550  1FDC  0187               	clrf	7
  8551  1FDD  0851               	movf	??_AutoLineHandle,w
  8552  1FDE  0081               	movwf	1
  8553  1FDF                     l9199:
  8554                           
  8555                           ;main.c: 431:                 cntALine = cntALine + 1;
  8556  1FDF  0858               	movf	_cntALine,w
  8557  1FE0  3E01               	addlw	1
  8558  1FE1  00D1               	movwf	??_AutoLineHandle
  8559  1FE2  0851               	movf	??_AutoLineHandle,w
  8560  1FE3  00D8               	movwf	_cntALine
  8561  1FE4                     l9201:
  8562                           
  8563                           ;main.c: 433:         }
  8564  1FE4  3001               	movlw	1
  8565  1FE5  0021               	movlb	1	; select bank1
  8566  1FE6  07BC               	addwf	AutoLineHandle@i^(0+128),f
  8567  1FE7  3000               	movlw	0
  8568  1FE8  3DBD               	addwfc	(AutoLineHandle@i+1)^(0+128),f
  8569  1FE9                     l9203:
  8570  1FE9  30A8               	movlw	low _buffer_sys
  8571  1FEA  0020               	movlb	0	; select bank0
  8572  1FEB  00AE               	movwf	strlen@s
  8573  1FEC  3002               	movlw	high _buffer_sys
  8574  1FED  00AF               	movwf	strlen@s+1
  8575  1FEE  31A6  26C0  319E   	fcall	_strlen
  8576  1FF1  0020               	movlb	0	; select bank0
  8577  1FF2  082F               	movf	?_strlen+1,w
  8578  1FF3  0021               	movlb	1	; select bank1
  8579  1FF4  023D               	subwf	(AutoLineHandle@i+1)^(0+128),w
  8580  1FF5  1D03               	skipz
  8581  1FF6  2FFB               	goto	u9845
  8582  1FF7  0020               	movlb	0	; select bank0
  8583  1FF8  082E               	movf	?_strlen,w
  8584  1FF9  0021               	movlb	1	; select bank1
  8585  1FFA  023C               	subwf	AutoLineHandle@i^(0+128),w
  8586  1FFB                     u9845:
  8587  1FFB  1C03               	skipc
  8588  1FFC  2FFE               	goto	u9841
  8589  1FFD  2FFF               	goto	u9840
  8590  1FFE                     u9841:
  8591  1FFE  2E65               	goto	l9127
  8592  1FFF                     u9840:
  8593  1FFF                     l1625:
  8594  1FFF  0008               	return
  8595  2000                     __end_of_AutoLineHandle:
  8596                           
  8597                           	psect	text27
  8598  15F0                     __ptext27:	
  8599 ;; *************** function _AutoLineControl *****************
  8600 ;; Defined at:
  8601 ;;		line 437 in file "main.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;		None
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;		None
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, status,2, status,0, pclath, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : 0/0
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;      Totals:         0       1       0       4       0       0       0       0       0       0       0       0       
      +0       0
  8619 ;;Total ram usage:        5 bytes
  8620 ;; Hardware stack levels used: 1
  8621 ;; Hardware stack levels required when called: 8
  8622 ;; This function calls:
  8623 ;;		_KE
  8624 ;;		___fladd
  8625 ;;		___fldiv
  8626 ;;		___fleq
  8627 ;;		___flmul
  8628 ;;		___fltol
  8629 ;;		___xxtofl
  8630 ;; This function is called by:
  8631 ;;		_main
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function _AutoLineControl
  8637  15F0                     _AutoLineControl:
  8638  15F0                     l9205:	
  8639                           ;incstack = 0
  8640                           ; Regs used in _AutoLineControl: [wreg+status,2+status,0+pclath+cstack]
  8641                           
  8642                           
  8643                           ;main.c: 439:     if(flagALine == 2){
  8644  15F0  3002               	movlw	2
  8645  15F1  0021               	movlb	1	; select bank1
  8646  15F2  066F               	xorwf	_flagALine^(0+128),w
  8647  15F3  1D03               	btfss	3,2
  8648  15F4  2DF6               	goto	u9851
  8649  15F5  2DF7               	goto	u9850
  8650  15F6                     u9851:
  8651  15F6  2F29               	goto	l9229
  8652  15F7                     u9850:
  8653  15F7                     l9207:
  8654                           
  8655                           ;main.c: 440:         if(direct_ALine < 0){
  8656  15F7  0020               	movlb	0	; select bank0
  8657  15F8  1FDF               	btfss	_direct_ALine+1,7
  8658  15F9  2DFB               	goto	u9861
  8659  15FA  2DFC               	goto	u9860
  8660  15FB                     u9861:
  8661  15FB  2E0B               	goto	l9213
  8662  15FC                     u9860:
  8663  15FC                     l9209:
  8664                           
  8665                           ;main.c: 441:             direct_ALine = -direct_ALine;
  8666  15FC  09DE               	comf	_direct_ALine,f
  8667  15FD  09DF               	comf	_direct_ALine+1,f
  8668  15FE  0ADE               	incf	_direct_ALine,f
  8669  15FF  1903               	skipnz
  8670  1600  0ADF               	incf	_direct_ALine+1,f
  8671  1601                     l9211:
  8672                           
  8673                           ;main.c: 442:             omegaALine = -3;
  8674  1601  30C0               	movlw	192
  8675  1602  0023               	movlb	3	; select bank3
  8676  1603  00BB               	movwf	(_omegaALine+3)^(0+384)
  8677  1604  3040               	movlw	64
  8678  1605  00BA               	movwf	(_omegaALine+2)^(0+384)
  8679  1606  3000               	movlw	0
  8680  1607  00B9               	movwf	(_omegaALine+1)^(0+384)
  8681  1608  3000               	movlw	0
  8682  1609  00B8               	movwf	_omegaALine^(0+384)
  8683                           
  8684                           ;main.c: 443:         }
  8685  160A  2E14               	goto	l9215
  8686  160B                     l9213:
  8687  160B  3040               	movlw	64
  8688  160C  0023               	movlb	3	; select bank3
  8689  160D  00BB               	movwf	(_omegaALine+3)^(0+384)
  8690  160E  3040               	movlw	64
  8691  160F  00BA               	movwf	(_omegaALine+2)^(0+384)
  8692  1610  3000               	movlw	0
  8693  1611  00B9               	movwf	(_omegaALine+1)^(0+384)
  8694  1612  3000               	movlw	0
  8695  1613  00B8               	movwf	_omegaALine^(0+384)
  8696  1614                     l9215:
  8697                           
  8698                           ;main.c: 445:         timeALine = (2*3.14159*69.5*direct_ALine*100)/3753;
  8699  1614  3043               	movlw	67
  8700  1615  0021               	movlb	1	; select bank1
  8701  1616  00A3               	movwf	(___flmul@b+3)^(0+128)
  8702  1617  30DA               	movlw	218
  8703  1618  00A2               	movwf	(___flmul@b+2)^(0+128)
  8704  1619  3057               	movlw	87
  8705  161A  00A1               	movwf	(___flmul@b+1)^(0+128)
  8706  161B  302B               	movlw	43
  8707  161C  00A0               	movwf	___flmul@b^(0+128)
  8708  161D  0020               	movlb	0	; select bank0
  8709  161E  085E               	movf	_direct_ALine,w
  8710  161F  00C3               	movwf	___xxtofl@val
  8711  1620  085F               	movf	_direct_ALine+1,w
  8712  1621  00C4               	movwf	___xxtofl@val+1
  8713  1622  0D89               	rlf	9,f
  8714  1623  3B89               	subwfb	9,f
  8715  1624  0989               	comf	9,f
  8716  1625  00C5               	movwf	___xxtofl@val+2
  8717  1626  00C6               	movwf	___xxtofl@val+3
  8718  1627  3001               	movlw	1
  8719  1628  319A  225D  3195   	fcall	___xxtofl
  8720  162B  0020               	movlb	0	; select bank0
  8721  162C  0846               	movf	?___xxtofl+3,w
  8722  162D  0021               	movlb	1	; select bank1
  8723  162E  00A7               	movwf	(___flmul@a+3)^(0+128)
  8724  162F  0020               	movlb	0	; select bank0
  8725  1630  0845               	movf	?___xxtofl+2,w
  8726  1631  0021               	movlb	1	; select bank1
  8727  1632  00A6               	movwf	(___flmul@a+2)^(0+128)
  8728  1633  0020               	movlb	0	; select bank0
  8729  1634  0844               	movf	?___xxtofl+1,w
  8730  1635  0021               	movlb	1	; select bank1
  8731  1636  00A5               	movwf	(___flmul@a+1)^(0+128)
  8732  1637  0020               	movlb	0	; select bank0
  8733  1638  0843               	movf	?___xxtofl,w
  8734  1639  0021               	movlb	1	; select bank1
  8735  163A  00A4               	movwf	___flmul@a^(0+128)
  8736  163B  318D  257C  3195   	fcall	___flmul
  8737  163E  0021               	movlb	1	; select bank1
  8738  163F  0823               	movf	(?___flmul+3)^(0+128),w
  8739  1640  0022               	movlb	2	; select bank2
  8740  1641  00BB               	movwf	(_AutoLineControl$3326+3)^(0+256)
  8741  1642  0021               	movlb	1	; select bank1
  8742  1643  0822               	movf	(?___flmul+2)^(0+128),w
  8743  1644  0022               	movlb	2	; select bank2
  8744  1645  00BA               	movwf	(_AutoLineControl$3326+2)^(0+256)
  8745  1646  0021               	movlb	1	; select bank1
  8746  1647  0821               	movf	(?___flmul+1)^(0+128),w
  8747  1648  0022               	movlb	2	; select bank2
  8748  1649  00B9               	movwf	(_AutoLineControl$3326+1)^(0+256)
  8749  164A  0021               	movlb	1	; select bank1
  8750  164B  0820               	movf	?___flmul^(0+128),w
  8751  164C  0022               	movlb	2	; select bank2
  8752  164D  00B8               	movwf	_AutoLineControl$3326^(0+256)
  8753  164E                     l9217:
  8754                           
  8755                           ;main.c: 445:         timeALine = (2*3.14159*69.5*direct_ALine*100)/3753;
  8756  164E  3045               	movlw	69
  8757  164F  0021               	movlb	1	; select bank1
  8758  1650  00BD               	movwf	(___fldiv@a+3)^(0+128)
  8759  1651  306A               	movlw	106
  8760  1652  00BC               	movwf	(___fldiv@a+2)^(0+128)
  8761  1653  3090               	movlw	144
  8762  1654  00BB               	movwf	(___fldiv@a+1)^(0+128)
  8763  1655  3000               	movlw	0
  8764  1656  00BA               	movwf	___fldiv@a^(0+128)
  8765  1657  3042               	movlw	66
  8766  1658  00A3               	movwf	(___flmul@b+3)^(0+128)
  8767  1659  30C8               	movlw	200
  8768  165A  00A2               	movwf	(___flmul@b+2)^(0+128)
  8769  165B  3000               	movlw	0
  8770  165C  00A1               	movwf	(___flmul@b+1)^(0+128)
  8771  165D  3000               	movlw	0
  8772  165E  00A0               	movwf	___flmul@b^(0+128)
  8773  165F  0022               	movlb	2	; select bank2
  8774  1660  083B               	movf	(_AutoLineControl$3326+3)^(0+256),w
  8775  1661  0021               	movlb	1	; select bank1
  8776  1662  00A7               	movwf	(___flmul@a+3)^(0+128)
  8777  1663  0022               	movlb	2	; select bank2
  8778  1664  083A               	movf	(_AutoLineControl$3326+2)^(0+256),w
  8779  1665  0021               	movlb	1	; select bank1
  8780  1666  00A6               	movwf	(___flmul@a+2)^(0+128)
  8781  1667  0022               	movlb	2	; select bank2
  8782  1668  0839               	movf	(_AutoLineControl$3326+1)^(0+256),w
  8783  1669  0021               	movlb	1	; select bank1
  8784  166A  00A5               	movwf	(___flmul@a+1)^(0+128)
  8785  166B  0022               	movlb	2	; select bank2
  8786  166C  0838               	movf	_AutoLineControl$3326^(0+256),w
  8787  166D  0021               	movlb	1	; select bank1
  8788  166E  00A4               	movwf	___flmul@a^(0+128)
  8789  166F  318D  257C  3195   	fcall	___flmul
  8790  1672  0021               	movlb	1	; select bank1
  8791  1673  0823               	movf	(?___flmul+3)^(0+128),w
  8792  1674  00C1               	movwf	(___fldiv@b+3)^(0+128)
  8793  1675  0822               	movf	(?___flmul+2)^(0+128),w
  8794  1676  00C0               	movwf	(___fldiv@b+2)^(0+128)
  8795  1677  0821               	movf	(?___flmul+1)^(0+128),w
  8796  1678  00BF               	movwf	(___fldiv@b+1)^(0+128)
  8797  1679  0820               	movf	?___flmul^(0+128),w
  8798  167A  00BE               	movwf	___fldiv@b^(0+128)
  8799  167B  3190  2074  3195   	fcall	___fldiv
  8800  167E  0021               	movlb	1	; select bank1
  8801  167F  083D               	movf	(?___fldiv+3)^(0+128),w
  8802  1680  0022               	movlb	2	; select bank2
  8803  1681  00CF               	movwf	(_timeALine+3)^(0+256)
  8804  1682  0021               	movlb	1	; select bank1
  8805  1683  083C               	movf	(?___fldiv+2)^(0+128),w
  8806  1684  0022               	movlb	2	; select bank2
  8807  1685  00CE               	movwf	(_timeALine+2)^(0+256)
  8808  1686  0021               	movlb	1	; select bank1
  8809  1687  083B               	movf	(?___fldiv+1)^(0+128),w
  8810  1688  0022               	movlb	2	; select bank2
  8811  1689  00CD               	movwf	(_timeALine+1)^(0+256)
  8812  168A  0021               	movlb	1	; select bank1
  8813  168B  083A               	movf	?___fldiv^(0+128),w
  8814  168C  0022               	movlb	2	; select bank2
  8815  168D  00CC               	movwf	_timeALine^(0+256)
  8816  168E                     l9219:
  8817                           
  8818                           ;main.c: 446:         cntTime = 0;
  8819  168E  01DA               	clrf	_cntTime^(0+256)
  8820  168F  01DB               	clrf	(_cntTime+1)^(0+256)
  8821  1690                     l9221:
  8822                           
  8823                           ;main.c: 447:         if(totalTime != timeALine) totalTime = timeALine-135;
  8824  1690  0020               	movlb	0	; select bank0
  8825  1691  0854               	movf	_totalTime,w
  8826  1692  00C3               	movwf	___xxtofl@val
  8827  1693  0855               	movf	_totalTime+1,w
  8828  1694  00C4               	movwf	___xxtofl@val+1
  8829  1695  01C5               	clrf	___xxtofl@val+2
  8830  1696  01C6               	clrf	___xxtofl@val+3
  8831  1697  3000               	movlw	0
  8832  1698  319A  225D  3195   	fcall	___xxtofl
  8833  169B  0020               	movlb	0	; select bank0
  8834  169C  0846               	movf	?___xxtofl+3,w
  8835  169D  0021               	movlb	1	; select bank1
  8836  169E  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  8837  169F  0020               	movlb	0	; select bank0
  8838  16A0  0845               	movf	?___xxtofl+2,w
  8839  16A1  0021               	movlb	1	; select bank1
  8840  16A2  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  8841  16A3  0020               	movlb	0	; select bank0
  8842  16A4  0844               	movf	?___xxtofl+1,w
  8843  16A5  0021               	movlb	1	; select bank1
  8844  16A6  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  8845  16A7  0020               	movlb	0	; select bank0
  8846  16A8  0843               	movf	?___xxtofl,w
  8847  16A9  0021               	movlb	1	; select bank1
  8848  16AA  00A0               	movwf	___fleq@ff1^(0+128)
  8849  16AB  0022               	movlb	2	; select bank2
  8850  16AC  084F               	movf	(_timeALine+3)^(0+256),w
  8851  16AD  0021               	movlb	1	; select bank1
  8852  16AE  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  8853  16AF  0022               	movlb	2	; select bank2
  8854  16B0  084E               	movf	(_timeALine+2)^(0+256),w
  8855  16B1  0021               	movlb	1	; select bank1
  8856  16B2  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  8857  16B3  0022               	movlb	2	; select bank2
  8858  16B4  084D               	movf	(_timeALine+1)^(0+256),w
  8859  16B5  0021               	movlb	1	; select bank1
  8860  16B6  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  8861  16B7  0022               	movlb	2	; select bank2
  8862  16B8  084C               	movf	_timeALine^(0+256),w
  8863  16B9  0021               	movlb	1	; select bank1
  8864  16BA  00A4               	movwf	___fleq@ff2^(0+128)
  8865  16BB  3188  2000  3195   	fcall	___fleq
  8866  16BE  1803               	btfsc	3,0
  8867  16BF  2EC1               	goto	u9871
  8868  16C0  2EC2               	goto	u9870
  8869  16C1                     u9871:
  8870  16C1  2EF1               	goto	l1631
  8871  16C2                     u9870:
  8872  16C2                     l9223:
  8873  16C2  0022               	movlb	2	; select bank2
  8874  16C3  084F               	movf	(_timeALine+3)^(0+256),w
  8875  16C4  0021               	movlb	1	; select bank1
  8876  16C5  00DB               	movwf	(___fladd@a+3)^(0+128)
  8877  16C6  0022               	movlb	2	; select bank2
  8878  16C7  084E               	movf	(_timeALine+2)^(0+256),w
  8879  16C8  0021               	movlb	1	; select bank1
  8880  16C9  00DA               	movwf	(___fladd@a+2)^(0+128)
  8881  16CA  0022               	movlb	2	; select bank2
  8882  16CB  084D               	movf	(_timeALine+1)^(0+256),w
  8883  16CC  0021               	movlb	1	; select bank1
  8884  16CD  00D9               	movwf	(___fladd@a+1)^(0+128)
  8885  16CE  0022               	movlb	2	; select bank2
  8886  16CF  084C               	movf	_timeALine^(0+256),w
  8887  16D0  0021               	movlb	1	; select bank1
  8888  16D1  00D8               	movwf	___fladd@a^(0+128)
  8889  16D2  30C3               	movlw	195
  8890  16D3  00D7               	movwf	(___fladd@b+3)^(0+128)
  8891  16D4  3007               	movlw	7
  8892  16D5  00D6               	movwf	(___fladd@b+2)^(0+128)
  8893  16D6  3000               	movlw	0
  8894  16D7  00D5               	movwf	(___fladd@b+1)^(0+128)
  8895  16D8  3000               	movlw	0
  8896  16D9  00D4               	movwf	___fladd@b^(0+128)
  8897  16DA  3188  20FF  3195   	fcall	___fladd
  8898  16DD  0021               	movlb	1	; select bank1
  8899  16DE  0857               	movf	(?___fladd+3)^(0+128),w
  8900  16DF  00EB               	movwf	(___fltol@f1+3)^(0+128)
  8901  16E0  0856               	movf	(?___fladd+2)^(0+128),w
  8902  16E1  00EA               	movwf	(___fltol@f1+2)^(0+128)
  8903  16E2  0855               	movf	(?___fladd+1)^(0+128),w
  8904  16E3  00E9               	movwf	(___fltol@f1+1)^(0+128)
  8905  16E4  0854               	movf	?___fladd^(0+128),w
  8906  16E5  00E8               	movwf	___fltol@f1^(0+128)
  8907  16E6  3198  2012  3195   	fcall	___fltol
  8908  16E9  0021               	movlb	1	; select bank1
  8909  16EA  0869               	movf	(?___fltol+1)^(0+128),w
  8910  16EB  0020               	movlb	0	; select bank0
  8911  16EC  00D5               	movwf	_totalTime+1
  8912  16ED  0021               	movlb	1	; select bank1
  8913  16EE  0868               	movf	?___fltol^(0+128),w
  8914  16EF  0020               	movlb	0	; select bank0
  8915  16F0  00D4               	movwf	_totalTime
  8916  16F1                     l1631:
  8917                           
  8918                           ;main.c: 448:         KE(omegaALine,0);
  8919  16F1  0023               	movlb	3	; select bank3
  8920  16F2  083B               	movf	(_omegaALine+3)^(0+384),w
  8921  16F3  0022               	movlb	2	; select bank2
  8922  16F4  00AB               	movwf	(KE@Omega_body+3)^(0+256)
  8923  16F5  0023               	movlb	3	; select bank3
  8924  16F6  083A               	movf	(_omegaALine+2)^(0+384),w
  8925  16F7  0022               	movlb	2	; select bank2
  8926  16F8  00AA               	movwf	(KE@Omega_body+2)^(0+256)
  8927  16F9  0023               	movlb	3	; select bank3
  8928  16FA  0839               	movf	(_omegaALine+1)^(0+384),w
  8929  16FB  0022               	movlb	2	; select bank2
  8930  16FC  00A9               	movwf	(KE@Omega_body+1)^(0+256)
  8931  16FD  0023               	movlb	3	; select bank3
  8932  16FE  0838               	movf	_omegaALine^(0+384),w
  8933  16FF  0022               	movlb	2	; select bank2
  8934  1700  00A8               	movwf	KE@Omega_body^(0+256)
  8935  1701  3000               	movlw	0
  8936  1702  00AF               	movwf	(KE@Velocity_body+3)^(0+256)
  8937  1703  3000               	movlw	0
  8938  1704  00AE               	movwf	(KE@Velocity_body+2)^(0+256)
  8939  1705  3000               	movlw	0
  8940  1706  00AD               	movwf	(KE@Velocity_body+1)^(0+256)
  8941  1707  3000               	movlw	0
  8942  1708  00AC               	movwf	KE@Velocity_body^(0+256)
  8943  1709  3193  23E4  3195   	fcall	_KE
  8944  170C                     l9225:	
  8945                           ;main.c: 449:         while(cntTime < totalTime);
  8946                           
  8947  170C  0020               	movlb	0	; select bank0
  8948  170D  0855               	movf	_totalTime+1,w
  8949  170E  0022               	movlb	2	; select bank2
  8950  170F  025B               	subwf	(_cntTime+1)^(0+256),w
  8951  1710  1D03               	skipz
  8952  1711  2F16               	goto	u9885
  8953  1712  0020               	movlb	0	; select bank0
  8954  1713  0854               	movf	_totalTime,w
  8955  1714  0022               	movlb	2	; select bank2
  8956  1715  025A               	subwf	_cntTime^(0+256),w
  8957  1716                     u9885:
  8958  1716  1C03               	skipc
  8959  1717  2F19               	goto	u9881
  8960  1718  2F1A               	goto	u9880
  8961  1719                     u9881:
  8962  1719  2F0C               	goto	l9225
  8963  171A                     u9880:
  8964  171A                     l9227:
  8965                           
  8966                           ;main.c: 450:         flagALine = 3;
  8967  171A  3003               	movlw	3
  8968  171B  0020               	movlb	0	; select bank0
  8969  171C  00D3               	movwf	??_AutoLineControl
  8970  171D  0853               	movf	??_AutoLineControl,w
  8971  171E  0021               	movlb	1	; select bank1
  8972  171F  00EF               	movwf	_flagALine^(0+128)
  8973                           
  8974                           ;main.c: 451:         timeALine = 0;
  8975  1720  3000               	movlw	0
  8976  1721  0022               	movlb	2	; select bank2
  8977  1722  00CF               	movwf	(_timeALine+3)^(0+256)
  8978  1723  3000               	movlw	0
  8979  1724  00CE               	movwf	(_timeALine+2)^(0+256)
  8980  1725  3000               	movlw	0
  8981  1726  00CD               	movwf	(_timeALine+1)^(0+256)
  8982  1727  3000               	movlw	0
  8983  1728  00CC               	movwf	_timeALine^(0+256)
  8984  1729                     l9229:
  8985                           
  8986                           ;main.c: 453:     if (flagALine == 3){
  8987  1729  3003               	movlw	3
  8988  172A  0021               	movlb	1	; select bank1
  8989  172B  066F               	xorwf	_flagALine^(0+128),w
  8990  172C  1D03               	btfss	3,2
  8991  172D  2F2F               	goto	u9891
  8992  172E  2F30               	goto	u9890
  8993  172F                     u9891:
  8994  172F  2FFF               	goto	l1637
  8995  1730                     u9890:
  8996  1730                     l9231:
  8997                           
  8998                           ;main.c: 454:         timeALine = (length_ALine/velALine)*1000;
  8999  1730  3044               	movlw	68
  9000  1731  00A3               	movwf	(___flmul@b+3)^(0+128)
  9001  1732  307A               	movlw	122
  9002  1733  00A2               	movwf	(___flmul@b+2)^(0+128)
  9003  1734  3000               	movlw	0
  9004  1735  00A1               	movwf	(___flmul@b+1)^(0+128)
  9005  1736  3000               	movlw	0
  9006  1737  00A0               	movwf	___flmul@b^(0+128)
  9007  1738  0023               	movlb	3	; select bank3
  9008  1739  083F               	movf	(_velALine+3)^(0+384),w
  9009  173A  0021               	movlb	1	; select bank1
  9010  173B  00BD               	movwf	(___fldiv@a+3)^(0+128)
  9011  173C  0023               	movlb	3	; select bank3
  9012  173D  083E               	movf	(_velALine+2)^(0+384),w
  9013  173E  0021               	movlb	1	; select bank1
  9014  173F  00BC               	movwf	(___fldiv@a+2)^(0+128)
  9015  1740  0023               	movlb	3	; select bank3
  9016  1741  083D               	movf	(_velALine+1)^(0+384),w
  9017  1742  0021               	movlb	1	; select bank1
  9018  1743  00BB               	movwf	(___fldiv@a+1)^(0+128)
  9019  1744  0023               	movlb	3	; select bank3
  9020  1745  083C               	movf	_velALine^(0+384),w
  9021  1746  0021               	movlb	1	; select bank1
  9022  1747  00BA               	movwf	___fldiv@a^(0+128)
  9023  1748  0023               	movlb	3	; select bank3
  9024  1749  085E               	movf	_length_ALine^(0+384),w
  9025  174A  0020               	movlb	0	; select bank0
  9026  174B  00C3               	movwf	___xxtofl@val
  9027  174C  0023               	movlb	3	; select bank3
  9028  174D  085F               	movf	(_length_ALine+1)^(0+384),w
  9029  174E  0020               	movlb	0	; select bank0
  9030  174F  00C4               	movwf	___xxtofl@val+1
  9031  1750  01C5               	clrf	___xxtofl@val+2
  9032  1751  01C6               	clrf	___xxtofl@val+3
  9033  1752  3000               	movlw	0
  9034  1753  319A  225D  3195   	fcall	___xxtofl
  9035  1756  0020               	movlb	0	; select bank0
  9036  1757  0846               	movf	?___xxtofl+3,w
  9037  1758  0021               	movlb	1	; select bank1
  9038  1759  00C1               	movwf	(___fldiv@b+3)^(0+128)
  9039  175A  0020               	movlb	0	; select bank0
  9040  175B  0845               	movf	?___xxtofl+2,w
  9041  175C  0021               	movlb	1	; select bank1
  9042  175D  00C0               	movwf	(___fldiv@b+2)^(0+128)
  9043  175E  0020               	movlb	0	; select bank0
  9044  175F  0844               	movf	?___xxtofl+1,w
  9045  1760  0021               	movlb	1	; select bank1
  9046  1761  00BF               	movwf	(___fldiv@b+1)^(0+128)
  9047  1762  0020               	movlb	0	; select bank0
  9048  1763  0843               	movf	?___xxtofl,w
  9049  1764  0021               	movlb	1	; select bank1
  9050  1765  00BE               	movwf	___fldiv@b^(0+128)
  9051  1766  3190  2074  3195   	fcall	___fldiv
  9052  1769  0021               	movlb	1	; select bank1
  9053  176A  083D               	movf	(?___fldiv+3)^(0+128),w
  9054  176B  00A7               	movwf	(___flmul@a+3)^(0+128)
  9055  176C  083C               	movf	(?___fldiv+2)^(0+128),w
  9056  176D  00A6               	movwf	(___flmul@a+2)^(0+128)
  9057  176E  083B               	movf	(?___fldiv+1)^(0+128),w
  9058  176F  00A5               	movwf	(___flmul@a+1)^(0+128)
  9059  1770  083A               	movf	?___fldiv^(0+128),w
  9060  1771  00A4               	movwf	___flmul@a^(0+128)
  9061  1772  318D  257C  3195   	fcall	___flmul
  9062  1775  0021               	movlb	1	; select bank1
  9063  1776  0823               	movf	(?___flmul+3)^(0+128),w
  9064  1777  0022               	movlb	2	; select bank2
  9065  1778  00CF               	movwf	(_timeALine+3)^(0+256)
  9066  1779  0021               	movlb	1	; select bank1
  9067  177A  0822               	movf	(?___flmul+2)^(0+128),w
  9068  177B  0022               	movlb	2	; select bank2
  9069  177C  00CE               	movwf	(_timeALine+2)^(0+256)
  9070  177D  0021               	movlb	1	; select bank1
  9071  177E  0821               	movf	(?___flmul+1)^(0+128),w
  9072  177F  0022               	movlb	2	; select bank2
  9073  1780  00CD               	movwf	(_timeALine+1)^(0+256)
  9074  1781  0021               	movlb	1	; select bank1
  9075  1782  0820               	movf	?___flmul^(0+128),w
  9076  1783  0022               	movlb	2	; select bank2
  9077  1784  00CC               	movwf	_timeALine^(0+256)
  9078                           
  9079                           ;main.c: 455:         if(totalTime != timeALine) totalTime = timeALine;
  9080  1785  0020               	movlb	0	; select bank0
  9081  1786  0854               	movf	_totalTime,w
  9082  1787  00C3               	movwf	___xxtofl@val
  9083  1788  0855               	movf	_totalTime+1,w
  9084  1789  00C4               	movwf	___xxtofl@val+1
  9085  178A  01C5               	clrf	___xxtofl@val+2
  9086  178B  01C6               	clrf	___xxtofl@val+3
  9087  178C  3000               	movlw	0
  9088  178D  319A  225D  3195   	fcall	___xxtofl
  9089  1790  0020               	movlb	0	; select bank0
  9090  1791  0846               	movf	?___xxtofl+3,w
  9091  1792  0021               	movlb	1	; select bank1
  9092  1793  00A3               	movwf	(___fleq@ff1+3)^(0+128)
  9093  1794  0020               	movlb	0	; select bank0
  9094  1795  0845               	movf	?___xxtofl+2,w
  9095  1796  0021               	movlb	1	; select bank1
  9096  1797  00A2               	movwf	(___fleq@ff1+2)^(0+128)
  9097  1798  0020               	movlb	0	; select bank0
  9098  1799  0844               	movf	?___xxtofl+1,w
  9099  179A  0021               	movlb	1	; select bank1
  9100  179B  00A1               	movwf	(___fleq@ff1+1)^(0+128)
  9101  179C  0020               	movlb	0	; select bank0
  9102  179D  0843               	movf	?___xxtofl,w
  9103  179E  0021               	movlb	1	; select bank1
  9104  179F  00A0               	movwf	___fleq@ff1^(0+128)
  9105  17A0  0022               	movlb	2	; select bank2
  9106  17A1  084F               	movf	(_timeALine+3)^(0+256),w
  9107  17A2  0021               	movlb	1	; select bank1
  9108  17A3  00A7               	movwf	(___fleq@ff2+3)^(0+128)
  9109  17A4  0022               	movlb	2	; select bank2
  9110  17A5  084E               	movf	(_timeALine+2)^(0+256),w
  9111  17A6  0021               	movlb	1	; select bank1
  9112  17A7  00A6               	movwf	(___fleq@ff2+2)^(0+128)
  9113  17A8  0022               	movlb	2	; select bank2
  9114  17A9  084D               	movf	(_timeALine+1)^(0+256),w
  9115  17AA  0021               	movlb	1	; select bank1
  9116  17AB  00A5               	movwf	(___fleq@ff2+1)^(0+128)
  9117  17AC  0022               	movlb	2	; select bank2
  9118  17AD  084C               	movf	_timeALine^(0+256),w
  9119  17AE  0021               	movlb	1	; select bank1
  9120  17AF  00A4               	movwf	___fleq@ff2^(0+128)
  9121  17B0  3188  2000  3195   	fcall	___fleq
  9122  17B3  1803               	btfsc	3,0
  9123  17B4  2FB6               	goto	u9901
  9124  17B5  2FB7               	goto	u9900
  9125  17B6                     u9901:
  9126  17B6  2FD2               	goto	l9235
  9127  17B7                     u9900:
  9128  17B7                     l9233:
  9129  17B7  0022               	movlb	2	; select bank2
  9130  17B8  084F               	movf	(_timeALine+3)^(0+256),w
  9131  17B9  0021               	movlb	1	; select bank1
  9132  17BA  00EB               	movwf	(___fltol@f1+3)^(0+128)
  9133  17BB  0022               	movlb	2	; select bank2
  9134  17BC  084E               	movf	(_timeALine+2)^(0+256),w
  9135  17BD  0021               	movlb	1	; select bank1
  9136  17BE  00EA               	movwf	(___fltol@f1+2)^(0+128)
  9137  17BF  0022               	movlb	2	; select bank2
  9138  17C0  084D               	movf	(_timeALine+1)^(0+256),w
  9139  17C1  0021               	movlb	1	; select bank1
  9140  17C2  00E9               	movwf	(___fltol@f1+1)^(0+128)
  9141  17C3  0022               	movlb	2	; select bank2
  9142  17C4  084C               	movf	_timeALine^(0+256),w
  9143  17C5  0021               	movlb	1	; select bank1
  9144  17C6  00E8               	movwf	___fltol@f1^(0+128)
  9145  17C7  3198  2012  3195   	fcall	___fltol
  9146  17CA  0021               	movlb	1	; select bank1
  9147  17CB  0869               	movf	(?___fltol+1)^(0+128),w
  9148  17CC  0020               	movlb	0	; select bank0
  9149  17CD  00D5               	movwf	_totalTime+1
  9150  17CE  0021               	movlb	1	; select bank1
  9151  17CF  0868               	movf	?___fltol^(0+128),w
  9152  17D0  0020               	movlb	0	; select bank0
  9153  17D1  00D4               	movwf	_totalTime
  9154  17D2                     l9235:
  9155                           
  9156                           ;main.c: 456:         cntTime = 0;
  9157  17D2  0022               	movlb	2	; select bank2
  9158  17D3  01DA               	clrf	_cntTime^(0+256)
  9159  17D4  01DB               	clrf	(_cntTime+1)^(0+256)
  9160  17D5                     l9237:
  9161                           
  9162                           ;main.c: 457:         omegaALine = 0;
  9163  17D5  3000               	movlw	0
  9164  17D6  0023               	movlb	3	; select bank3
  9165  17D7  00BB               	movwf	(_omegaALine+3)^(0+384)
  9166  17D8  3000               	movlw	0
  9167  17D9  00BA               	movwf	(_omegaALine+2)^(0+384)
  9168  17DA  3000               	movlw	0
  9169  17DB  00B9               	movwf	(_omegaALine+1)^(0+384)
  9170  17DC  3000               	movlw	0
  9171  17DD  00B8               	movwf	_omegaALine^(0+384)
  9172  17DE                     l9239:
  9173                           
  9174                           ;main.c: 458:         velocity_sys = velALine;
  9175  17DE  083F               	movf	(_velALine+3)^(0+384),w
  9176  17DF  0022               	movlb	2	; select bank2
  9177  17E0  00C7               	movwf	(_velocity_sys+3)^(0+256)
  9178  17E1  0023               	movlb	3	; select bank3
  9179  17E2  083E               	movf	(_velALine+2)^(0+384),w
  9180  17E3  0022               	movlb	2	; select bank2
  9181  17E4  00C6               	movwf	(_velocity_sys+2)^(0+256)
  9182  17E5  0023               	movlb	3	; select bank3
  9183  17E6  083D               	movf	(_velALine+1)^(0+384),w
  9184  17E7  0022               	movlb	2	; select bank2
  9185  17E8  00C5               	movwf	(_velocity_sys+1)^(0+256)
  9186  17E9  0023               	movlb	3	; select bank3
  9187  17EA  083C               	movf	_velALine^(0+384),w
  9188  17EB  0022               	movlb	2	; select bank2
  9189  17EC  00C4               	movwf	_velocity_sys^(0+256)
  9190  17ED                     l9241:
  9191                           
  9192                           ;main.c: 459:         omega_sys = omegaALine;
  9193  17ED  0023               	movlb	3	; select bank3
  9194  17EE  083B               	movf	(_omegaALine+3)^(0+384),w
  9195  17EF  0024               	movlb	4	; select bank4
  9196  17F0  00E5               	movwf	(_omega_sys+3)^(0+512)
  9197  17F1  0023               	movlb	3	; select bank3
  9198  17F2  083A               	movf	(_omegaALine+2)^(0+384),w
  9199  17F3  0024               	movlb	4	; select bank4
  9200  17F4  00E4               	movwf	(_omega_sys+2)^(0+512)
  9201  17F5  0023               	movlb	3	; select bank3
  9202  17F6  0839               	movf	(_omegaALine+1)^(0+384),w
  9203  17F7  0024               	movlb	4	; select bank4
  9204  17F8  00E3               	movwf	(_omega_sys+1)^(0+512)
  9205  17F9  0023               	movlb	3	; select bank3
  9206  17FA  0838               	movf	_omegaALine^(0+384),w
  9207  17FB  0024               	movlb	4	; select bank4
  9208  17FC  00E2               	movwf	_omega_sys^(0+512)
  9209  17FD                     l9243:
  9210                           
  9211                           ;main.c: 460:         flagALine = 0;
  9212  17FD  0021               	movlb	1	; select bank1
  9213  17FE  01EF               	clrf	_flagALine^(0+128)
  9214  17FF                     l1637:
  9215  17FF  0008               	return
  9216  1800                     __end_of_AutoLineControl:
  9217                           
  9218                           	psect	text28
  9219  1228                     __ptext28:	
  9220 ;; *************** function _AutoCircleHandle *****************
  9221 ;; Defined at:
  9222 ;;		line 322 in file "main.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;		None
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  j               2   26[BANK1 ] int 
  9227 ;;  j               2   24[BANK1 ] int 
  9228 ;;  j               2   22[BANK1 ] int 
  9229 ;;  j               2   20[BANK1 ] int 
  9230 ;;  i               2   28[BANK1 ] int 
  9231 ;;  bufferACircl   20    0[BANK1 ] unsigned char [20]
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Totals:         0       1      30       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;Total ram usage:       31 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 7
  9248 ;; This function calls:
  9249 ;;		___xxtofl
  9250 ;;		_atoi
  9251 ;;		_strlen
  9252 ;; This function is called by:
  9253 ;;		_main
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           
  9258                           ;psect for function _AutoCircleHandle
  9259  1228                     _AutoCircleHandle:
  9260  1228                     l9027:	
  9261                           ;incstack = 0
  9262                           ; Regs used in _AutoCircleHandle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9263                           
  9264                           
  9265                           ;main.c: 324:     char bufferACircle_t[20];;main.c: 325:     if((buffer_sys[0] == 'A') |
      +                          | (flagACircle == 1)){
  9266  1228  3041               	movlw	65
  9267  1229  0025               	movlb	5	; select bank5
  9268  122A  0628               	xorwf	_buffer_sys^(0+640),w
  9269  122B  1903               	btfsc	3,2
  9270  122C  2A2E               	goto	u9501
  9271  122D  2A2F               	goto	u9500
  9272  122E                     u9501:
  9273  122E  2A35               	goto	l1563
  9274  122F                     u9500:
  9275  122F                     l9029:
  9276  122F  0020               	movlb	0	; select bank0
  9277  1230  0357               	decf	_flagACircle,w
  9278  1231  1D03               	btfss	3,2
  9279  1232  2A34               	goto	u9511
  9280  1233  2A35               	goto	u9510
  9281  1234                     u9511:
  9282  1234  2BE3               	goto	l1588
  9283  1235                     u9510:
  9284  1235                     l1563:
  9285                           
  9286                           ;main.c: 326:         flagACircle = 1;
  9287  1235  0020               	movlb	0	; select bank0
  9288  1236  01D7               	clrf	_flagACircle
  9289  1237  0AD7               	incf	_flagACircle,f
  9290  1238                     l9031:
  9291                           
  9292                           ;main.c: 327:         for(int i = 0; i < strlen(buffer_sys); i++){
  9293  1238  0021               	movlb	1	; select bank1
  9294  1239  01BC               	clrf	AutoCircleHandle@i^(0+128)
  9295  123A  01BD               	clrf	(AutoCircleHandle@i+1)^(0+128)
  9296  123B  2BCD               	goto	l9105
  9297  123C                     l9033:
  9298                           
  9299                           ;main.c: 328:             if(buffer_sys[0] == 'A'){
  9300  123C  3041               	movlw	65
  9301  123D  0025               	movlb	5	; select bank5
  9302  123E  0628               	xorwf	_buffer_sys^(0+640),w
  9303  123F  1D03               	btfss	3,2
  9304  1240  2A42               	goto	u9521
  9305  1241  2A43               	goto	u9520
  9306  1242                     u9521:
  9307  1242  2A49               	goto	l9037
  9308  1243                     u9520:
  9309  1243                     l9035:
  9310                           
  9311                           ;main.c: 329:                 buffer_sys[0] = '0';
  9312  1243  3030               	movlw	48
  9313  1244  0020               	movlb	0	; select bank0
  9314  1245  00D1               	movwf	??_AutoCircleHandle
  9315  1246  0851               	movf	??_AutoCircleHandle,w
  9316  1247  0025               	movlb	5	; select bank5
  9317  1248  00A8               	movwf	_buffer_sys^(0+640)
  9318  1249                     l9037:
  9319                           
  9320                           ;main.c: 331:             if((buffer_sys[i] == 'v') || (buffer_sys[i] == 'r') || (buffer
      +                          _sys[i] == 'a') || (buffer_sys[i] == '#')){
  9321  1249  0021               	movlb	1	; select bank1
  9322  124A  083C               	movf	AutoCircleHandle@i^(0+128),w
  9323  124B  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9324  124C  0086               	movwf	6
  9325  124D  3002               	movlw	2	; select bank5/6
  9326  124E  0087               	movwf	7
  9327  124F  3076               	movlw	118
  9328  1250  0601               	xorwf	1,w
  9329  1251  1903               	btfsc	3,2
  9330  1252  2A54               	goto	u9531
  9331  1253  2A55               	goto	u9530
  9332  1254                     u9531:
  9333  1254  2A76               	goto	l9045
  9334  1255                     u9530:
  9335  1255                     l9039:
  9336  1255  083C               	movf	AutoCircleHandle@i^(0+128),w
  9337  1256  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9338  1257  0086               	movwf	6
  9339  1258  3002               	movlw	2	; select bank5/6
  9340  1259  0087               	movwf	7
  9341  125A  3072               	movlw	114
  9342  125B  0601               	xorwf	1,w
  9343  125C  1903               	btfsc	3,2
  9344  125D  2A5F               	goto	u9541
  9345  125E  2A60               	goto	u9540
  9346  125F                     u9541:
  9347  125F  2A76               	goto	l9045
  9348  1260                     u9540:
  9349  1260                     l9041:
  9350  1260  083C               	movf	AutoCircleHandle@i^(0+128),w
  9351  1261  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9352  1262  0086               	movwf	6
  9353  1263  3002               	movlw	2	; select bank5/6
  9354  1264  0087               	movwf	7
  9355  1265  3061               	movlw	97
  9356  1266  0601               	xorwf	1,w
  9357  1267  1903               	btfsc	3,2
  9358  1268  2A6A               	goto	u9551
  9359  1269  2A6B               	goto	u9550
  9360  126A                     u9551:
  9361  126A  2A76               	goto	l9045
  9362  126B                     u9550:
  9363  126B                     l9043:
  9364  126B  083C               	movf	AutoCircleHandle@i^(0+128),w
  9365  126C  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9366  126D  0086               	movwf	6
  9367  126E  3002               	movlw	2	; select bank5/6
  9368  126F  0087               	movwf	7
  9369  1270  3023               	movlw	35
  9370  1271  0601               	xorwf	1,w
  9371  1272  1D03               	btfss	3,2
  9372  1273  2A75               	goto	u9561
  9373  1274  2A76               	goto	u9560
  9374  1275                     u9561:
  9375  1275  2BB5               	goto	l9099
  9376  1276                     u9560:
  9377  1276                     l9045:
  9378                           
  9379                           ;main.c: 332:                 if((buffer_sys[i] == 'v')){
  9380  1276  083C               	movf	AutoCircleHandle@i^(0+128),w
  9381  1277  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9382  1278  0086               	movwf	6
  9383  1279  3002               	movlw	2	; select bank5/6
  9384  127A  0087               	movwf	7
  9385  127B  3076               	movlw	118
  9386  127C  0601               	xorwf	1,w
  9387  127D  1D03               	btfss	3,2
  9388  127E  2A80               	goto	u9571
  9389  127F  2A81               	goto	u9570
  9390  1280                     u9571:
  9391  1280  2AD3               	goto	l9059
  9392  1281                     u9570:
  9393  1281                     l9047:
  9394                           
  9395                           ;main.c: 333:                     velACircle = atoi(bufferACircle_t);
  9396  1281  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9397  1282  0020               	movlb	0	; select bank0
  9398  1283  00B4               	movwf	atoi@s
  9399  1284  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9400  1285  00B5               	movwf	atoi@s+1
  9401  1286  319B  230A  3192   	fcall	_atoi
  9402  1289  0020               	movlb	0	; select bank0
  9403  128A  0834               	movf	?_atoi,w
  9404  128B  00C3               	movwf	___xxtofl@val
  9405  128C  0835               	movf	?_atoi+1,w
  9406  128D  00C4               	movwf	___xxtofl@val+1
  9407  128E  0D89               	rlf	9,f
  9408  128F  3B89               	subwfb	9,f
  9409  1290  0989               	comf	9,f
  9410  1291  00C5               	movwf	___xxtofl@val+2
  9411  1292  00C6               	movwf	___xxtofl@val+3
  9412  1293  3001               	movlw	1
  9413  1294  319A  225D  3192   	fcall	___xxtofl
  9414  1297  0020               	movlb	0	; select bank0
  9415  1298  0846               	movf	?___xxtofl+3,w
  9416  1299  0022               	movlb	2	; select bank2
  9417  129A  00CB               	movwf	(_velACircle+3)^(0+256)
  9418  129B  0020               	movlb	0	; select bank0
  9419  129C  0845               	movf	?___xxtofl+2,w
  9420  129D  0022               	movlb	2	; select bank2
  9421  129E  00CA               	movwf	(_velACircle+2)^(0+256)
  9422  129F  0020               	movlb	0	; select bank0
  9423  12A0  0844               	movf	?___xxtofl+1,w
  9424  12A1  0022               	movlb	2	; select bank2
  9425  12A2  00C9               	movwf	(_velACircle+1)^(0+256)
  9426  12A3  0020               	movlb	0	; select bank0
  9427  12A4  0843               	movf	?___xxtofl,w
  9428  12A5  0022               	movlb	2	; select bank2
  9429  12A6  00C8               	movwf	_velACircle^(0+256)
  9430  12A7                     l9049:
  9431                           
  9432                           ;main.c: 335:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
  9433  12A7  0021               	movlb	1	; select bank1
  9434  12A8  01B4               	clrf	AutoCircleHandle@j^(0+128)
  9435  12A9  01B5               	clrf	(AutoCircleHandle@j+1)^(0+128)
  9436  12AA  2ABB               	goto	l9055
  9437  12AB                     l9051:
  9438                           
  9439                           ;main.c: 336:                         bufferACircle_t[j] = ' ';
  9440  12AB  3020               	movlw	32
  9441  12AC  0020               	movlb	0	; select bank0
  9442  12AD  00D1               	movwf	??_AutoCircleHandle
  9443  12AE  0021               	movlb	1	; select bank1
  9444  12AF  0834               	movf	AutoCircleHandle@j^(0+128),w
  9445  12B0  3EA0               	addlw	(low (AutoCircleHandle@bufferACircle_t| 0))& (0+255)
  9446  12B1  0086               	movwf	6
  9447  12B2  0187               	clrf	7
  9448  12B3  0020               	movlb	0	; select bank0
  9449  12B4  0851               	movf	??_AutoCircleHandle,w
  9450  12B5  0081               	movwf	1
  9451  12B6                     l9053:
  9452                           
  9453                           ;main.c: 337:                     }
  9454  12B6  3001               	movlw	1
  9455  12B7  0021               	movlb	1	; select bank1
  9456  12B8  07B4               	addwf	AutoCircleHandle@j^(0+128),f
  9457  12B9  3000               	movlw	0
  9458  12BA  3DB5               	addwfc	(AutoCircleHandle@j+1)^(0+128),f
  9459  12BB                     l9055:
  9460  12BB  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9461  12BC  0020               	movlb	0	; select bank0
  9462  12BD  00AE               	movwf	strlen@s
  9463  12BE  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9464  12BF  00AF               	movwf	strlen@s+1
  9465  12C0  31A6  26C0  3192   	fcall	_strlen
  9466  12C3  0020               	movlb	0	; select bank0
  9467  12C4  082F               	movf	?_strlen+1,w
  9468  12C5  0021               	movlb	1	; select bank1
  9469  12C6  0235               	subwf	(AutoCircleHandle@j+1)^(0+128),w
  9470  12C7  1D03               	skipz
  9471  12C8  2ACD               	goto	u9585
  9472  12C9  0020               	movlb	0	; select bank0
  9473  12CA  082E               	movf	?_strlen,w
  9474  12CB  0021               	movlb	1	; select bank1
  9475  12CC  0234               	subwf	AutoCircleHandle@j^(0+128),w
  9476  12CD                     u9585:
  9477  12CD  1C03               	skipc
  9478  12CE  2AD0               	goto	u9581
  9479  12CF  2AD1               	goto	u9580
  9480  12D0                     u9581:
  9481  12D0  2AAB               	goto	l9051
  9482  12D1                     u9580:
  9483  12D1                     l9057:
  9484                           
  9485                           ;main.c: 338:                     cntACircle = 0;
  9486  12D1  0020               	movlb	0	; select bank0
  9487  12D2  01D6               	clrf	_cntACircle
  9488  12D3                     l9059:
  9489                           
  9490                           ;main.c: 340:                 if(buffer_sys[i] == 'r'){
  9491  12D3  0021               	movlb	1	; select bank1
  9492  12D4  083C               	movf	AutoCircleHandle@i^(0+128),w
  9493  12D5  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9494  12D6  0086               	movwf	6
  9495  12D7  3002               	movlw	2	; select bank5/6
  9496  12D8  0087               	movwf	7
  9497  12D9  3072               	movlw	114
  9498  12DA  0601               	xorwf	1,w
  9499  12DB  1D03               	btfss	3,2
  9500  12DC  2ADE               	goto	u9591
  9501  12DD  2ADF               	goto	u9590
  9502  12DE                     u9591:
  9503  12DE  2B31               	goto	l9073
  9504  12DF                     u9590:
  9505  12DF                     l9061:
  9506                           
  9507                           ;main.c: 341:                     valRadius_AC = atoi(bufferACircle_t);
  9508  12DF  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9509  12E0  0020               	movlb	0	; select bank0
  9510  12E1  00B4               	movwf	atoi@s
  9511  12E2  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9512  12E3  00B5               	movwf	atoi@s+1
  9513  12E4  319B  230A  3192   	fcall	_atoi
  9514  12E7  0020               	movlb	0	; select bank0
  9515  12E8  0834               	movf	?_atoi,w
  9516  12E9  00C3               	movwf	___xxtofl@val
  9517  12EA  0835               	movf	?_atoi+1,w
  9518  12EB  00C4               	movwf	___xxtofl@val+1
  9519  12EC  0D89               	rlf	9,f
  9520  12ED  3B89               	subwfb	9,f
  9521  12EE  0989               	comf	9,f
  9522  12EF  00C5               	movwf	___xxtofl@val+2
  9523  12F0  00C6               	movwf	___xxtofl@val+3
  9524  12F1  3001               	movlw	1
  9525  12F2  319A  225D  3192   	fcall	___xxtofl
  9526  12F5  0020               	movlb	0	; select bank0
  9527  12F6  0846               	movf	?___xxtofl+3,w
  9528  12F7  0023               	movlb	3	; select bank3
  9529  12F8  00ED               	movwf	(_valRadius_AC+3)^(0+384)
  9530  12F9  0020               	movlb	0	; select bank0
  9531  12FA  0845               	movf	?___xxtofl+2,w
  9532  12FB  0023               	movlb	3	; select bank3
  9533  12FC  00EC               	movwf	(_valRadius_AC+2)^(0+384)
  9534  12FD  0020               	movlb	0	; select bank0
  9535  12FE  0844               	movf	?___xxtofl+1,w
  9536  12FF  0023               	movlb	3	; select bank3
  9537  1300  00EB               	movwf	(_valRadius_AC+1)^(0+384)
  9538  1301  0020               	movlb	0	; select bank0
  9539  1302  0843               	movf	?___xxtofl,w
  9540  1303  0023               	movlb	3	; select bank3
  9541  1304  00EA               	movwf	_valRadius_AC^(0+384)
  9542  1305                     l9063:
  9543                           
  9544                           ;main.c: 343:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
  9545  1305  0021               	movlb	1	; select bank1
  9546  1306  01B6               	clrf	AutoCircleHandle@j_2365^(0+128)
  9547  1307  01B7               	clrf	(AutoCircleHandle@j_2365+1)^(0+128)
  9548  1308  2B19               	goto	l9069
  9549  1309                     l9065:
  9550                           
  9551                           ;main.c: 344:                         bufferACircle_t[j] = ' ';
  9552  1309  3020               	movlw	32
  9553  130A  0020               	movlb	0	; select bank0
  9554  130B  00D1               	movwf	??_AutoCircleHandle
  9555  130C  0021               	movlb	1	; select bank1
  9556  130D  0836               	movf	AutoCircleHandle@j_2365^(0+128),w
  9557  130E  3EA0               	addlw	(low (AutoCircleHandle@bufferACircle_t| 0))& (0+255)
  9558  130F  0086               	movwf	6
  9559  1310  0187               	clrf	7
  9560  1311  0020               	movlb	0	; select bank0
  9561  1312  0851               	movf	??_AutoCircleHandle,w
  9562  1313  0081               	movwf	1
  9563  1314                     l9067:
  9564                           
  9565                           ;main.c: 345:                     }
  9566  1314  3001               	movlw	1
  9567  1315  0021               	movlb	1	; select bank1
  9568  1316  07B6               	addwf	AutoCircleHandle@j_2365^(0+128),f
  9569  1317  3000               	movlw	0
  9570  1318  3DB7               	addwfc	(AutoCircleHandle@j_2365+1)^(0+128),f
  9571  1319                     l9069:
  9572  1319  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9573  131A  0020               	movlb	0	; select bank0
  9574  131B  00AE               	movwf	strlen@s
  9575  131C  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9576  131D  00AF               	movwf	strlen@s+1
  9577  131E  31A6  26C0  3192   	fcall	_strlen
  9578  1321  0020               	movlb	0	; select bank0
  9579  1322  082F               	movf	?_strlen+1,w
  9580  1323  0021               	movlb	1	; select bank1
  9581  1324  0237               	subwf	(AutoCircleHandle@j_2365+1)^(0+128),w
  9582  1325  1D03               	skipz
  9583  1326  2B2B               	goto	u9605
  9584  1327  0020               	movlb	0	; select bank0
  9585  1328  082E               	movf	?_strlen,w
  9586  1329  0021               	movlb	1	; select bank1
  9587  132A  0236               	subwf	AutoCircleHandle@j_2365^(0+128),w
  9588  132B                     u9605:
  9589  132B  1C03               	skipc
  9590  132C  2B2E               	goto	u9601
  9591  132D  2B2F               	goto	u9600
  9592  132E                     u9601:
  9593  132E  2B09               	goto	l9065
  9594  132F                     u9600:
  9595  132F                     l9071:
  9596                           
  9597                           ;main.c: 346:                     cntACircle = 0;
  9598  132F  0020               	movlb	0	; select bank0
  9599  1330  01D6               	clrf	_cntACircle
  9600  1331                     l9073:
  9601                           
  9602                           ;main.c: 348:                 if(buffer_sys[i] == 'a'){
  9603  1331  0021               	movlb	1	; select bank1
  9604  1332  083C               	movf	AutoCircleHandle@i^(0+128),w
  9605  1333  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9606  1334  0086               	movwf	6
  9607  1335  3002               	movlw	2	; select bank5/6
  9608  1336  0087               	movwf	7
  9609  1337  3061               	movlw	97
  9610  1338  0601               	xorwf	1,w
  9611  1339  1D03               	btfss	3,2
  9612  133A  2B3C               	goto	u9611
  9613  133B  2B3D               	goto	u9610
  9614  133C                     u9611:
  9615  133C  2B79               	goto	l9087
  9616  133D                     u9610:
  9617  133D                     l9075:
  9618                           
  9619                           ;main.c: 349:                     angle_ACircle = atoi(bufferACircle_t);
  9620  133D  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9621  133E  0020               	movlb	0	; select bank0
  9622  133F  00B4               	movwf	atoi@s
  9623  1340  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9624  1341  00B5               	movwf	atoi@s+1
  9625  1342  319B  230A  3192   	fcall	_atoi
  9626  1345  0020               	movlb	0	; select bank0
  9627  1346  0835               	movf	?_atoi+1,w
  9628  1347  0023               	movlb	3	; select bank3
  9629  1348  00DD               	movwf	(_angle_ACircle+1)^(0+384)
  9630  1349  0020               	movlb	0	; select bank0
  9631  134A  0834               	movf	?_atoi,w
  9632  134B  0023               	movlb	3	; select bank3
  9633  134C  00DC               	movwf	_angle_ACircle^(0+384)
  9634  134D                     l9077:
  9635                           
  9636                           ;main.c: 351:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
  9637  134D  0021               	movlb	1	; select bank1
  9638  134E  01B8               	clrf	AutoCircleHandle@j_2366^(0+128)
  9639  134F  01B9               	clrf	(AutoCircleHandle@j_2366+1)^(0+128)
  9640  1350  2B61               	goto	l9083
  9641  1351                     l9079:
  9642                           
  9643                           ;main.c: 352:                         bufferACircle_t[j] = ' ';
  9644  1351  3020               	movlw	32
  9645  1352  0020               	movlb	0	; select bank0
  9646  1353  00D1               	movwf	??_AutoCircleHandle
  9647  1354  0021               	movlb	1	; select bank1
  9648  1355  0838               	movf	AutoCircleHandle@j_2366^(0+128),w
  9649  1356  3EA0               	addlw	(low (AutoCircleHandle@bufferACircle_t| 0))& (0+255)
  9650  1357  0086               	movwf	6
  9651  1358  0187               	clrf	7
  9652  1359  0020               	movlb	0	; select bank0
  9653  135A  0851               	movf	??_AutoCircleHandle,w
  9654  135B  0081               	movwf	1
  9655  135C                     l9081:
  9656                           
  9657                           ;main.c: 353:                     }
  9658  135C  3001               	movlw	1
  9659  135D  0021               	movlb	1	; select bank1
  9660  135E  07B8               	addwf	AutoCircleHandle@j_2366^(0+128),f
  9661  135F  3000               	movlw	0
  9662  1360  3DB9               	addwfc	(AutoCircleHandle@j_2366+1)^(0+128),f
  9663  1361                     l9083:
  9664  1361  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9665  1362  0020               	movlb	0	; select bank0
  9666  1363  00AE               	movwf	strlen@s
  9667  1364  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9668  1365  00AF               	movwf	strlen@s+1
  9669  1366  31A6  26C0  3192   	fcall	_strlen
  9670  1369  0020               	movlb	0	; select bank0
  9671  136A  082F               	movf	?_strlen+1,w
  9672  136B  0021               	movlb	1	; select bank1
  9673  136C  0239               	subwf	(AutoCircleHandle@j_2366+1)^(0+128),w
  9674  136D  1D03               	skipz
  9675  136E  2B73               	goto	u9625
  9676  136F  0020               	movlb	0	; select bank0
  9677  1370  082E               	movf	?_strlen,w
  9678  1371  0021               	movlb	1	; select bank1
  9679  1372  0238               	subwf	AutoCircleHandle@j_2366^(0+128),w
  9680  1373                     u9625:
  9681  1373  1C03               	skipc
  9682  1374  2B76               	goto	u9621
  9683  1375  2B77               	goto	u9620
  9684  1376                     u9621:
  9685  1376  2B51               	goto	l9079
  9686  1377                     u9620:
  9687  1377                     l9085:
  9688                           
  9689                           ;main.c: 354:                     cntACircle = 0;
  9690  1377  0020               	movlb	0	; select bank0
  9691  1378  01D6               	clrf	_cntACircle
  9692  1379                     l9087:
  9693                           
  9694                           ;main.c: 356:                 if(buffer_sys[i] == '#'){
  9695  1379  0021               	movlb	1	; select bank1
  9696  137A  083C               	movf	AutoCircleHandle@i^(0+128),w
  9697  137B  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9698  137C  0086               	movwf	6
  9699  137D  3002               	movlw	2	; select bank5/6
  9700  137E  0087               	movwf	7
  9701  137F  3023               	movlw	35
  9702  1380  0601               	xorwf	1,w
  9703  1381  1D03               	btfss	3,2
  9704  1382  2B84               	goto	u9631
  9705  1383  2B85               	goto	u9630
  9706  1384                     u9631:
  9707  1384  2BC8               	goto	l9103
  9708  1385                     u9630:
  9709  1385                     l9089:
  9710                           
  9711                           ;main.c: 357:                     flagACircle = 2;
  9712  1385  3002               	movlw	2
  9713  1386  0020               	movlb	0	; select bank0
  9714  1387  00D1               	movwf	??_AutoCircleHandle
  9715  1388  0851               	movf	??_AutoCircleHandle,w
  9716  1389  00D7               	movwf	_flagACircle
  9717  138A                     l9091:
  9718                           
  9719                           ;main.c: 359:                     for(int j = 0; j < strlen(bufferACircle_t);j++){
  9720  138A  0021               	movlb	1	; select bank1
  9721  138B  01BA               	clrf	AutoCircleHandle@j_2367^(0+128)
  9722  138C  01BB               	clrf	(AutoCircleHandle@j_2367+1)^(0+128)
  9723  138D  2B9E               	goto	l9097
  9724  138E                     l9093:
  9725                           
  9726                           ;main.c: 360:                         bufferACircle_t[j] = ' ';
  9727  138E  3020               	movlw	32
  9728  138F  0020               	movlb	0	; select bank0
  9729  1390  00D1               	movwf	??_AutoCircleHandle
  9730  1391  0021               	movlb	1	; select bank1
  9731  1392  083A               	movf	AutoCircleHandle@j_2367^(0+128),w
  9732  1393  3EA0               	addlw	(low (AutoCircleHandle@bufferACircle_t| 0))& (0+255)
  9733  1394  0086               	movwf	6
  9734  1395  0187               	clrf	7
  9735  1396  0020               	movlb	0	; select bank0
  9736  1397  0851               	movf	??_AutoCircleHandle,w
  9737  1398  0081               	movwf	1
  9738  1399                     l9095:
  9739                           
  9740                           ;main.c: 361:                     }
  9741  1399  3001               	movlw	1
  9742  139A  0021               	movlb	1	; select bank1
  9743  139B  07BA               	addwf	AutoCircleHandle@j_2367^(0+128),f
  9744  139C  3000               	movlw	0
  9745  139D  3DBB               	addwfc	(AutoCircleHandle@j_2367+1)^(0+128),f
  9746  139E                     l9097:
  9747  139E  30A0               	movlw	low AutoCircleHandle@bufferACircle_t
  9748  139F  0020               	movlb	0	; select bank0
  9749  13A0  00AE               	movwf	strlen@s
  9750  13A1  3000               	movlw	high AutoCircleHandle@bufferACircle_t
  9751  13A2  00AF               	movwf	strlen@s+1
  9752  13A3  31A6  26C0  3192   	fcall	_strlen
  9753  13A6  0020               	movlb	0	; select bank0
  9754  13A7  082F               	movf	?_strlen+1,w
  9755  13A8  0021               	movlb	1	; select bank1
  9756  13A9  023B               	subwf	(AutoCircleHandle@j_2367+1)^(0+128),w
  9757  13AA  1D03               	skipz
  9758  13AB  2BB0               	goto	u9645
  9759  13AC  0020               	movlb	0	; select bank0
  9760  13AD  082E               	movf	?_strlen,w
  9761  13AE  0021               	movlb	1	; select bank1
  9762  13AF  023A               	subwf	AutoCircleHandle@j_2367^(0+128),w
  9763  13B0                     u9645:
  9764  13B0  1C03               	skipc
  9765  13B1  2BB3               	goto	u9641
  9766  13B2  2BB4               	goto	u9640
  9767  13B3                     u9641:
  9768  13B3  2B8E               	goto	l9093
  9769  13B4                     u9640:
  9770  13B4  2BC8               	goto	l9103
  9771  13B5                     l9099:
  9772                           
  9773                           ;main.c: 365:                 bufferACircle_t[cntACircle] = buffer_sys[i];
  9774  13B5  083C               	movf	AutoCircleHandle@i^(0+128),w
  9775  13B6  3EA8               	addlw	(low (_buffer_sys| (0+512)))& (0+255)
  9776  13B7  0086               	movwf	6
  9777  13B8  3002               	movlw	2	; select bank5/6
  9778  13B9  0087               	movwf	7
  9779  13BA  0801               	movf	1,w
  9780  13BB  0020               	movlb	0	; select bank0
  9781  13BC  00D1               	movwf	??_AutoCircleHandle
  9782  13BD  0856               	movf	_cntACircle,w
  9783  13BE  3EA0               	addlw	(low (AutoCircleHandle@bufferACircle_t| 0))& (0+255)
  9784  13BF  0086               	movwf	6
  9785  13C0  0187               	clrf	7
  9786  13C1  0851               	movf	??_AutoCircleHandle,w
  9787  13C2  0081               	movwf	1
  9788  13C3                     l9101:
  9789                           
  9790                           ;main.c: 366:                 cntACircle = cntACircle + 1;
  9791  13C3  0856               	movf	_cntACircle,w
  9792  13C4  3E01               	addlw	1
  9793  13C5  00D1               	movwf	??_AutoCircleHandle
  9794  13C6  0851               	movf	??_AutoCircleHandle,w
  9795  13C7  00D6               	movwf	_cntACircle
  9796  13C8                     l9103:
  9797                           
  9798                           ;main.c: 368:         }
  9799  13C8  3001               	movlw	1
  9800  13C9  0021               	movlb	1	; select bank1
  9801  13CA  07BC               	addwf	AutoCircleHandle@i^(0+128),f
  9802  13CB  3000               	movlw	0
  9803  13CC  3DBD               	addwfc	(AutoCircleHandle@i+1)^(0+128),f
  9804  13CD                     l9105:
  9805  13CD  30A8               	movlw	low _buffer_sys
  9806  13CE  0020               	movlb	0	; select bank0
  9807  13CF  00AE               	movwf	strlen@s
  9808  13D0  3002               	movlw	high _buffer_sys
  9809  13D1  00AF               	movwf	strlen@s+1
  9810  13D2  31A6  26C0  3192   	fcall	_strlen
  9811  13D5  0020               	movlb	0	; select bank0
  9812  13D6  082F               	movf	?_strlen+1,w
  9813  13D7  0021               	movlb	1	; select bank1
  9814  13D8  023D               	subwf	(AutoCircleHandle@i+1)^(0+128),w
  9815  13D9  1D03               	skipz
  9816  13DA  2BDF               	goto	u9655
  9817  13DB  0020               	movlb	0	; select bank0
  9818  13DC  082E               	movf	?_strlen,w
  9819  13DD  0021               	movlb	1	; select bank1
  9820  13DE  023C               	subwf	AutoCircleHandle@i^(0+128),w
  9821  13DF                     u9655:
  9822  13DF  1C03               	skipc
  9823  13E0  2BE2               	goto	u9651
  9824  13E1  2BE3               	goto	u9650
  9825  13E2                     u9651:
  9826  13E2  2A3C               	goto	l9033
  9827  13E3                     u9650:
  9828  13E3                     l1588:
  9829  13E3  0008               	return
  9830  13E4                     __end_of_AutoCircleHandle:
  9831                           
  9832                           	psect	text29
  9833  26C0                     __ptext29:	
  9834 ;; *************** function _strlen *****************
  9835 ;; Defined at:
  9836 ;;		line 5 in file "D:\MPLAB XC8\pic\sources\c99\common\strlen.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  s               2   14[BANK0 ] PTR const unsigned char 
  9839 ;;		 -> TimeLapseHandle@bufferCamera_t(20), AutoLineHandle@bufferALine_t(20), AutoCircleHandle@bufferACircle_t(20), Manu
      +alHandle@bufferManual_t(20), 
  9840 ;;		 -> buffer_sys(50), 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  a               2   16[BANK0 ] PTR const unsigned char 
  9843 ;;		 -> TimeLapseHandle@bufferCamera_t(20), AutoLineHandle@bufferALine_t(20), AutoCircleHandle@bufferACircle_t(20), Manu
      +alHandle@bufferManual_t(20), 
  9844 ;;		 -> buffer_sys(50), 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  2   14[BANK0 ] unsigned int 
  9847 ;; Registers used:
  9848 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;Total ram usage:        4 bytes
  9859 ;; Hardware stack levels used: 1
  9860 ;; Hardware stack levels required when called: 5
  9861 ;; This function calls:
  9862 ;;		Nothing
  9863 ;; This function is called by:
  9864 ;;		_ManualHandle
  9865 ;;		_AutoCircleHandle
  9866 ;;		_AutoLineHandle
  9867 ;;		_TimeLapseHandle
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function _strlen
  9873  26C0                     _strlen:
  9874  26C0                     l8849:	
  9875                           ;incstack = 0
  9876                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9877                           
  9878  26C0  0020               	movlb	0	; select bank0
  9879  26C1  082F               	movf	strlen@s+1,w
  9880  26C2  00B1               	movwf	strlen@a+1
  9881  26C3  082E               	movf	strlen@s,w
  9882  26C4  00B0               	movwf	strlen@a
  9883  26C5  2ECA               	goto	l8853
  9884  26C6                     l8851:
  9885  26C6  3001               	movlw	1
  9886  26C7  07AE               	addwf	strlen@s,f
  9887  26C8  3000               	movlw	0
  9888  26C9  3DAF               	addwfc	strlen@s+1,f
  9889  26CA                     l8853:
  9890  26CA  082E               	movf	strlen@s,w
  9891  26CB  0086               	movwf	6
  9892  26CC  082F               	movf	strlen@s+1,w
  9893  26CD  0087               	movwf	7
  9894  26CE  0801               	movf	1,w
  9895  26CF  1D03               	btfss	3,2
  9896  26D0  2ED2               	goto	u9201
  9897  26D1  2ED3               	goto	u9200
  9898  26D2                     u9201:
  9899  26D2  2EC6               	goto	l8851
  9900  26D3                     u9200:
  9901  26D3                     l8855:
  9902  26D3  0830               	movf	strlen@a,w
  9903  26D4  022E               	subwf	strlen@s,w
  9904  26D5  00AE               	movwf	?_strlen
  9905  26D6  0831               	movf	strlen@a+1,w
  9906  26D7  3B2F               	subwfb	strlen@s+1,w
  9907  26D8  00AF               	movwf	?_strlen+1
  9908  26D9                     l2359:
  9909  26D9  0008               	return
  9910  26DA                     __end_of_strlen:
  9911                           
  9912                           	psect	text30
  9913  1B0A                     __ptext30:	
  9914 ;; *************** function _atoi *****************
  9915 ;; Defined at:
  9916 ;;		line 4 in file "D:\MPLAB XC8\pic\sources\c99\common\atoi.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;  s               2   20[BANK0 ] PTR const unsigned char 
  9919 ;;		 -> TimeLapseHandle@bufferCamera_t(20), AutoLineHandle@bufferALine_t(20), AutoCircleHandle@bufferACircle_t(20), Manu
      +alHandle@bufferManual_t(20), 
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;  n               2   33[BANK0 ] int 
  9922 ;;  neg             2   26[BANK0 ] int 
  9923 ;; Return value:  Size  Location     Type
  9924 ;;                  2   20[BANK0 ] int 
  9925 ;; Registers used:
  9926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9927 ;; Tracked objects:
  9928 ;;		On entry : 0/0
  9929 ;;		On exit  : 0/0
  9930 ;;		Unchanged: 0/0
  9931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;Total ram usage:       15 bytes
  9937 ;; Hardware stack levels used: 1
  9938 ;; Hardware stack levels required when called: 6
  9939 ;; This function calls:
  9940 ;;		___wmul
  9941 ;;		_isdigit
  9942 ;;		_isspace
  9943 ;; This function is called by:
  9944 ;;		_ManualHandle
  9945 ;;		_AutoCircleHandle
  9946 ;;		_AutoLineHandle
  9947 ;;		_TimeLapseHandle
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           
  9952                           ;psect for function _atoi
  9953  1B0A                     _atoi:
  9954  1B0A                     l8805:	
  9955                           ;incstack = 0
  9956                           ; Regs used in _atoi: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9957                           
  9958  1B0A  0020               	movlb	0	; select bank0
  9959  1B0B  01C1               	clrf	atoi@n
  9960  1B0C  01C2               	clrf	atoi@n+1
  9961  1B0D  01BA               	clrf	atoi@neg
  9962  1B0E  01BB               	clrf	atoi@neg+1
  9963  1B0F  2B14               	goto	l8809
  9964  1B10                     l8807:
  9965  1B10  3001               	movlw	1
  9966  1B11  07B4               	addwf	atoi@s,f
  9967  1B12  3000               	movlw	0
  9968  1B13  3DB5               	addwfc	atoi@s+1,f
  9969  1B14                     l8809:
  9970  1B14  01C0               	clrf	_atoi$2875
  9971  1B15  0AC0               	incf	_atoi$2875,f
  9972  1B16                     l8811:
  9973  1B16  0834               	movf	atoi@s,w
  9974  1B17  0086               	movwf	6
  9975  1B18  0835               	movf	atoi@s+1,w
  9976  1B19  0087               	movwf	7
  9977  1B1A  3020               	movlw	32
  9978  1B1B  0601               	xorwf	1,w
  9979  1B1C  1903               	btfsc	3,2
  9980  1B1D  2B1F               	goto	u9131
  9981  1B1E  2B20               	goto	u9130
  9982  1B1F                     u9131:
  9983  1B1F  2B35               	goto	l8817
  9984  1B20                     u9130:
  9985  1B20                     l8813:
  9986  1B20  0834               	movf	atoi@s,w
  9987  1B21  0086               	movwf	6
  9988  1B22  0835               	movf	atoi@s+1,w
  9989  1B23  0087               	movwf	7
  9990  1B24  0801               	movf	1,w
  9991  1B25  3EF7               	addlw	247
  9992  1B26  00B6               	movwf	??_atoi
  9993  1B27  30FF               	movlw	255
  9994  1B28  1803               	skipnc
  9995  1B29  3000               	movlw	0
  9996  1B2A  00B7               	movwf	??_atoi+1
  9997  1B2B  3000               	movlw	0
  9998  1B2C  0237               	subwf	??_atoi+1,w
  9999  1B2D  3005               	movlw	5
 10000  1B2E  1903               	skipnz
 10001  1B2F  0236               	subwf	??_atoi,w
 10002  1B30  1C03               	skipc
 10003  1B31  2B33               	goto	u9141
 10004  1B32  2B34               	goto	u9140
 10005  1B33                     u9141:
 10006  1B33  2B35               	goto	l8817
 10007  1B34                     u9140:
 10008  1B34                     l8815:
 10009  1B34  01C0               	clrf	_atoi$2875
 10010  1B35                     l8817:
 10011  1B35  0840               	movf	_atoi$2875,w
 10012  1B36  00B6               	movwf	??_atoi
 10013  1B37  01B7               	clrf	??_atoi+1
 10014  1B38  0836               	movf	??_atoi,w
 10015  1B39  00BC               	movwf	_atoi$2874
 10016  1B3A  0837               	movf	??_atoi+1,w
 10017  1B3B  00BD               	movwf	_atoi$2874+1
 10018  1B3C                     l8821:
 10019  1B3C  083C               	movf	_atoi$2874,w
 10020  1B3D  043D               	iorwf	_atoi$2874+1,w
 10021  1B3E  1D03               	btfss	3,2
 10022  1B3F  2B41               	goto	u9151
 10023  1B40  2B42               	goto	u9150
 10024  1B41                     u9151:
 10025  1B41  2B10               	goto	l8807
 10026  1B42                     u9150:
 10027  1B42  2B4C               	goto	l8825
 10028  1B43                     l8823:
 10029  1B43  3001               	movlw	1
 10030  1B44  00BA               	movwf	atoi@neg
 10031  1B45  3000               	movlw	0
 10032  1B46  00BB               	movwf	atoi@neg+1
 10033  1B47                     l2319:
 10034  1B47  3001               	movlw	1
 10035  1B48  07B4               	addwf	atoi@s,f
 10036  1B49  3000               	movlw	0
 10037  1B4A  3DB5               	addwfc	atoi@s+1,f
 10038  1B4B  2B7E               	goto	l8831
 10039  1B4C                     l8825:
 10040  1B4C  0834               	movf	atoi@s,w
 10041  1B4D  0086               	movwf	6
 10042  1B4E  0835               	movf	atoi@s+1,w
 10043  1B4F  0087               	movwf	7
 10044  1B50  0801               	movf	1,w
 10045  1B51  00B6               	movwf	??_atoi
 10046  1B52  01B7               	clrf	??_atoi+1
 10047                           
 10048                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10049                           ; Switch size 1, requested type "simple"
 10050                           ; Number of cases is 1, Range of values is 0 to 0
 10051                           ; switch strategies available:
 10052                           ; Name         Instructions Cycles
 10053                           ; simple_byte            4     3 (average)
 10054                           ; direct_byte            8     6 (fixed)
 10055                           ; jumptable            260     6 (fixed)
 10056                           ;	Chosen strategy is simple_byte
 10057  1B53  0837               	movf	??_atoi+1,w
 10058  1B54  3A00               	xorlw	0	; case 0
 10059  1B55  1903               	skipnz
 10060  1B56  2B58               	goto	l9439
 10061  1B57  2B7E               	goto	l8831
 10062  1B58                     l9439:
 10063                           
 10064                           ; Switch size 1, requested type "simple"
 10065                           ; Number of cases is 2, Range of values is 43 to 45
 10066                           ; switch strategies available:
 10067                           ; Name         Instructions Cycles
 10068                           ; simple_byte            7     4 (average)
 10069                           ; direct_byte           15     9 (fixed)
 10070                           ; jumptable            263     9 (fixed)
 10071                           ;	Chosen strategy is simple_byte
 10072  1B58  0836               	movf	??_atoi,w
 10073  1B59  3A2B               	xorlw	43	; case 43
 10074  1B5A  1903               	skipnz
 10075  1B5B  2B47               	goto	l2319
 10076  1B5C  3A06               	xorlw	6	; case 45
 10077  1B5D  1903               	skipnz
 10078  1B5E  2B43               	goto	l8823
 10079  1B5F  2B7E               	goto	l8831
 10080  1B60                     l8827:
 10081  1B60  0834               	movf	atoi@s,w
 10082  1B61  0086               	movwf	6
 10083  1B62  0835               	movf	atoi@s+1,w
 10084  1B63  0087               	movwf	7
 10085  1B64  0842               	movf	atoi@n+1,w
 10086  1B65  00AF               	movwf	___wmul@multiplier+1
 10087  1B66  0841               	movf	atoi@n,w
 10088  1B67  00AE               	movwf	___wmul@multiplier
 10089  1B68  300A               	movlw	10
 10090  1B69  00B0               	movwf	___wmul@multiplicand
 10091  1B6A  3000               	movlw	0
 10092  1B6B  00B1               	movwf	___wmul@multiplicand+1
 10093  1B6C  31A6  26F6  319B   	fcall	___wmul
 10094  1B6F  0020               	movlb	0	; select bank0
 10095  1B70  082F               	movf	?___wmul+1,w
 10096  1B71  00B7               	movwf	??_atoi+1
 10097  1B72  0801               	movf	1,w
 10098  1B73  022E               	subwf	?___wmul,w
 10099  1B74  00B6               	movwf	??_atoi
 10100  1B75  1C03               	skipc
 10101  1B76  03B7               	decf	??_atoi+1,f
 10102  1B77  0836               	movf	??_atoi,w
 10103  1B78  3E30               	addlw	48
 10104  1B79  00C1               	movwf	atoi@n
 10105  1B7A  3000               	movlw	0
 10106  1B7B  3D37               	addwfc	??_atoi+1,w
 10107  1B7C  00C2               	movwf	atoi@n+1
 10108  1B7D  2B47               	goto	l2319
 10109  1B7E                     l8831:
 10110  1B7E  0834               	movf	atoi@s,w
 10111  1B7F  0086               	movwf	6
 10112  1B80  0835               	movf	atoi@s+1,w
 10113  1B81  0087               	movwf	7
 10114  1B82  0801               	movf	1,w
 10115  1B83  3ED0               	addlw	208
 10116  1B84  00B6               	movwf	??_atoi
 10117  1B85  30FF               	movlw	255
 10118  1B86  1803               	skipnc
 10119  1B87  3000               	movlw	0
 10120  1B88  00B7               	movwf	??_atoi+1
 10121  1B89  3000               	movlw	0
 10122  1B8A  0237               	subwf	??_atoi+1,w
 10123  1B8B  300A               	movlw	10
 10124  1B8C  1903               	skipnz
 10125  1B8D  0236               	subwf	??_atoi,w
 10126  1B8E  1C03               	skipc
 10127  1B8F  2B91               	goto	u9161
 10128  1B90  2B93               	goto	u9160
 10129  1B91                     u9161:
 10130  1B91  3001               	movlw	1
 10131  1B92  2B94               	goto	u9170
 10132  1B93                     u9160:
 10133  1B93  3000               	movlw	0
 10134  1B94                     u9170:
 10135  1B94  00B8               	movwf	??_atoi+2
 10136  1B95  01B9               	clrf	??_atoi+3
 10137  1B96  0838               	movf	??_atoi+2,w
 10138  1B97  00BE               	movwf	_atoi$2876
 10139  1B98  0839               	movf	??_atoi+3,w
 10140  1B99  00BF               	movwf	_atoi$2876+1
 10141  1B9A                     l8835:
 10142  1B9A  083E               	movf	_atoi$2876,w
 10143  1B9B  043F               	iorwf	_atoi$2876+1,w
 10144  1B9C  1D03               	btfss	3,2
 10145  1B9D  2B9F               	goto	u9181
 10146  1B9E  2BA0               	goto	u9180
 10147  1B9F                     u9181:
 10148  1B9F  2B60               	goto	l8827
 10149  1BA0                     u9180:
 10150  1BA0                     l8837:
 10151  1BA0  083A               	movf	atoi@neg,w
 10152  1BA1  043B               	iorwf	atoi@neg+1,w
 10153  1BA2  1D03               	btfss	3,2
 10154  1BA3  2BA5               	goto	u9191
 10155  1BA4  2BA6               	goto	u9190
 10156  1BA5                     u9191:
 10157  1BA5  2BB2               	goto	l8841
 10158  1BA6                     u9190:
 10159  1BA6                     l8839:
 10160  1BA6  0941               	comf	atoi@n,w
 10161  1BA7  00B6               	movwf	??_atoi
 10162  1BA8  0942               	comf	atoi@n+1,w
 10163  1BA9  00B7               	movwf	??_atoi+1
 10164  1BAA  0AB6               	incf	??_atoi,f
 10165  1BAB  1903               	skipnz
 10166  1BAC  0AB7               	incf	??_atoi+1,f
 10167  1BAD  0836               	movf	??_atoi,w
 10168  1BAE  00B4               	movwf	?_atoi
 10169  1BAF  0837               	movf	??_atoi+1,w
 10170  1BB0  00B5               	movwf	?_atoi+1
 10171  1BB1  2BB6               	goto	l2332
 10172  1BB2                     l8841:
 10173  1BB2  0842               	movf	atoi@n+1,w
 10174  1BB3  00B5               	movwf	?_atoi+1
 10175  1BB4  0841               	movf	atoi@n,w
 10176  1BB5  00B4               	movwf	?_atoi
 10177  1BB6                     l2332:
 10178  1BB6  0008               	return
 10179  1BB7                     __end_of_atoi:
 10180                           
 10181                           	psect	text31
 10182  2716                     __ptext31:	
 10183 ;; *************** function _isspace *****************
 10184 ;; Defined at:
 10185 ;;		line 5 in file "D:\MPLAB XC8\pic\sources\c99\common\isspace.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  c               2   14[BANK0 ] int 
 10188 ;; Auto vars:     Size  Location     Type
 10189 ;;		None
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  2   14[BANK0 ] int 
 10192 ;; Registers used:
 10193 ;;		wreg, status,2, status,0
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10201 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10202 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10203 ;;Total ram usage:        5 bytes
 10204 ;; Hardware stack levels used: 1
 10205 ;; Hardware stack levels required when called: 5
 10206 ;; This function calls:
 10207 ;;		Nothing
 10208 ;; This function is called by:
 10209 ;;		_atoi
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           
 10214                           ;psect for function _isspace
 10215  2716                     _isspace:
 10216  2716                     l8759:	
 10217                           ;incstack = 0
 10218                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10219                           
 10220  2716  0020               	movlb	0	; select bank0
 10221  2717  01B2               	clrf	_isspace$2892
 10222  2718  0AB2               	incf	_isspace$2892,f
 10223  2719                     l8761:
 10224  2719  3020               	movlw	32
 10225  271A  062E               	xorwf	isspace@c,w
 10226  271B  042F               	iorwf	isspace@c+1,w
 10227  271C  1903               	btfsc	3,2
 10228  271D  2F1F               	goto	u9011
 10229  271E  2F20               	goto	u9010
 10230  271F                     u9011:
 10231  271F  2F30               	goto	l8767
 10232  2720                     u9010:
 10233  2720                     l8763:
 10234  2720  082E               	movf	isspace@c,w
 10235  2721  3EF7               	addlw	247
 10236  2722  00B0               	movwf	??_isspace
 10237  2723  30FF               	movlw	255
 10238  2724  3D2F               	addwfc	isspace@c+1,w
 10239  2725  00B1               	movwf	??_isspace+1
 10240  2726  3000               	movlw	0
 10241  2727  0231               	subwf	??_isspace+1,w
 10242  2728  3005               	movlw	5
 10243  2729  1903               	skipnz
 10244  272A  0230               	subwf	??_isspace,w
 10245  272B  1C03               	skipc
 10246  272C  2F2E               	goto	u9021
 10247  272D  2F2F               	goto	u9020
 10248  272E                     u9021:
 10249  272E  2F30               	goto	l8767
 10250  272F                     u9020:
 10251  272F                     l8765:
 10252  272F  01B2               	clrf	_isspace$2892
 10253  2730                     l8767:
 10254  2730  0832               	movf	_isspace$2892,w
 10255  2731  00B0               	movwf	??_isspace
 10256  2732  01B1               	clrf	??_isspace+1
 10257  2733  0830               	movf	??_isspace,w
 10258  2734  00AE               	movwf	?_isspace
 10259  2735  0831               	movf	??_isspace+1,w
 10260  2736  00AF               	movwf	?_isspace+1
 10261  2737                     l2343:
 10262  2737  0008               	return
 10263  2738                     __end_of_isspace:
 10264                           
 10265                           	psect	text32
 10266  268E                     __ptext32:	
 10267 ;; *************** function _isdigit *****************
 10268 ;; Defined at:
 10269 ;;		line 5 in file "D:\MPLAB XC8\pic\sources\c99\common\isdigit.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  c               2   14[BANK0 ] int 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  2   14[BANK0 ] int 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2, status,0
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10283 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;Total ram usage:        6 bytes
 10288 ;; Hardware stack levels used: 1
 10289 ;; Hardware stack levels required when called: 5
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_atoi
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           
 10298                           ;psect for function _isdigit
 10299  268E                     _isdigit:
 10300  268E                     l8771:	
 10301                           ;incstack = 0
 10302                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10303                           
 10304  268E  0020               	movlb	0	; select bank0
 10305  268F  082E               	movf	isdigit@c,w
 10306  2690  3ED0               	addlw	208
 10307  2691  00B0               	movwf	??_isdigit
 10308  2692  30FF               	movlw	255
 10309  2693  3D2F               	addwfc	isdigit@c+1,w
 10310  2694  00B1               	movwf	??_isdigit+1
 10311  2695  3000               	movlw	0
 10312  2696  0231               	subwf	??_isdigit+1,w
 10313  2697  300A               	movlw	10
 10314  2698  1903               	skipnz
 10315  2699  0230               	subwf	??_isdigit,w
 10316  269A  1C03               	skipc
 10317  269B  2E9D               	goto	u9031
 10318  269C  2E9F               	goto	u9030
 10319  269D                     u9031:
 10320  269D  3001               	movlw	1
 10321  269E  2EA0               	goto	u9040
 10322  269F                     u9030:
 10323  269F  3000               	movlw	0
 10324  26A0                     u9040:
 10325  26A0  00B2               	movwf	??_isdigit+2
 10326  26A1  01B3               	clrf	??_isdigit+3
 10327  26A2  0832               	movf	??_isdigit+2,w
 10328  26A3  00AE               	movwf	?_isdigit
 10329  26A4  0833               	movf	??_isdigit+3,w
 10330  26A5  00AF               	movwf	?_isdigit+1
 10331  26A6                     l2335:
 10332  26A6  0008               	return
 10333  26A7                     __end_of_isdigit:
 10334                           
 10335                           	psect	text33
 10336  26F6                     __ptext33:	
 10337 ;; *************** function ___wmul *****************
 10338 ;; Defined at:
 10339 ;;		line 15 in file "D:\MPLAB XC8\pic\sources\c99\common\Umul16.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  multiplier      2   14[BANK0 ] unsigned int 
 10342 ;;  multiplicand    2   16[BANK0 ] unsigned int 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  product         2   18[BANK0 ] unsigned int 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  2   14[BANK0 ] unsigned int 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        6 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 5
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_atoi
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           
 10369                           ;psect for function ___wmul
 10370  26F6                     ___wmul:
 10371  26F6                     l8701:	
 10372                           ;incstack = 0
 10373                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10374                           
 10375  26F6  0020               	movlb	0	; select bank0
 10376  26F7  01B2               	clrf	___wmul@product
 10377  26F8  01B3               	clrf	___wmul@product+1
 10378  26F9                     l8703:
 10379  26F9  1C2E               	btfss	___wmul@multiplier,0
 10380  26FA  2EFC               	goto	u8831
 10381  26FB  2EFD               	goto	u8830
 10382  26FC                     u8831:
 10383  26FC  2F01               	goto	l1845
 10384  26FD                     u8830:
 10385  26FD                     l8705:
 10386  26FD  0830               	movf	___wmul@multiplicand,w
 10387  26FE  07B2               	addwf	___wmul@product,f
 10388  26FF  0831               	movf	___wmul@multiplicand+1,w
 10389  2700  3DB3               	addwfc	___wmul@product+1,f
 10390  2701                     l1845:
 10391  2701  3001               	movlw	1
 10392  2702                     u8845:
 10393  2702  35B0               	lslf	___wmul@multiplicand,f
 10394  2703  0DB1               	rlf	___wmul@multiplicand+1,f
 10395  2704  0B89               	decfsz	9,f
 10396  2705  2F02               	goto	u8845
 10397  2706                     l8707:
 10398  2706  3001               	movlw	1
 10399  2707                     u8855:
 10400  2707  36AF               	lsrf	___wmul@multiplier+1,f
 10401  2708  0CAE               	rrf	___wmul@multiplier,f
 10402  2709  0B89               	decfsz	9,f
 10403  270A  2F07               	goto	u8855
 10404  270B                     l8709:
 10405  270B  082E               	movf	___wmul@multiplier,w
 10406  270C  042F               	iorwf	___wmul@multiplier+1,w
 10407  270D  1D03               	btfss	3,2
 10408  270E  2F10               	goto	u8861
 10409  270F  2F11               	goto	u8860
 10410  2710                     u8861:
 10411  2710  2EF9               	goto	l8703
 10412  2711                     u8860:
 10413  2711                     l8711:
 10414  2711  0833               	movf	___wmul@product+1,w
 10415  2712  00AF               	movwf	?___wmul+1
 10416  2713  0832               	movf	___wmul@product,w
 10417  2714  00AE               	movwf	?___wmul
 10418  2715                     l1847:
 10419  2715  0008               	return
 10420  2716                     __end_of___wmul:
 10421                           
 10422                           	psect	text34
 10423  1CB9                     __ptext34:	
 10424 ;; *************** function _AutoCircleControl *****************
 10425 ;; Defined at:
 10426 ;;		line 372 in file "main.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0, pclath, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       8       0       0       0       0       
      +0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       8       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        8 bytes
 10445 ;; Hardware stack levels used: 1
 10446 ;; Hardware stack levels required when called: 9
 10447 ;; This function calls:
 10448 ;;		___fldiv
 10449 ;;		___fleq
 10450 ;;		___flmul
 10451 ;;		___fltol
 10452 ;;		___xxtofl
 10453 ;;		_ramp_step_function
 10454 ;; This function is called by:
 10455 ;;		_main
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           
 10460                           ;psect for function _AutoCircleControl
 10461  1CB9                     _AutoCircleControl:
 10462  1CB9                     l9107:	
 10463                           ;incstack = 0
 10464                           ; Regs used in _AutoCircleControl: [wreg+status,2+status,0+pclath+cstack]
 10465                           
 10466                           
 10467                           ;main.c: 374:     if(flagACircle == 2){
 10468  1CB9  3002               	movlw	2
 10469  1CBA  0020               	movlb	0	; select bank0
 10470  1CBB  0657               	xorwf	_flagACircle,w
 10471  1CBC  1D03               	btfss	3,2
 10472  1CBD  2CBF               	goto	u9661
 10473  1CBE  2CC0               	goto	u9660
 10474  1CBF                     u9661:
 10475  1CBF  2E51               	goto	l1593
 10476  1CC0                     u9660:
 10477  1CC0                     l9109:
 10478                           
 10479                           ;main.c: 375:         timeACircle = (3.14159*valRadius_AC*angle_ACircle*100)/(18*velACir
      +                          cle);
 10480  1CC0  3040               	movlw	64
 10481  1CC1  0021               	movlb	1	; select bank1
 10482  1CC2  00A3               	movwf	(___flmul@b+3)^(0+128)
 10483  1CC3  3049               	movlw	73
 10484  1CC4  00A2               	movwf	(___flmul@b+2)^(0+128)
 10485  1CC5  300F               	movlw	15
 10486  1CC6  00A1               	movwf	(___flmul@b+1)^(0+128)
 10487  1CC7  30D0               	movlw	208
 10488  1CC8  00A0               	movwf	___flmul@b^(0+128)
 10489  1CC9  0023               	movlb	3	; select bank3
 10490  1CCA  086D               	movf	(_valRadius_AC+3)^(0+384),w
 10491  1CCB  0021               	movlb	1	; select bank1
 10492  1CCC  00A7               	movwf	(___flmul@a+3)^(0+128)
 10493  1CCD  0023               	movlb	3	; select bank3
 10494  1CCE  086C               	movf	(_valRadius_AC+2)^(0+384),w
 10495  1CCF  0021               	movlb	1	; select bank1
 10496  1CD0  00A6               	movwf	(___flmul@a+2)^(0+128)
 10497  1CD1  0023               	movlb	3	; select bank3
 10498  1CD2  086B               	movf	(_valRadius_AC+1)^(0+384),w
 10499  1CD3  0021               	movlb	1	; select bank1
 10500  1CD4  00A5               	movwf	(___flmul@a+1)^(0+128)
 10501  1CD5  0023               	movlb	3	; select bank3
 10502  1CD6  086A               	movf	_valRadius_AC^(0+384),w
 10503  1CD7  0021               	movlb	1	; select bank1
 10504  1CD8  00A4               	movwf	___flmul@a^(0+128)
 10505  1CD9  318D  257C  319C   	fcall	___flmul
 10506  1CDC  0021               	movlb	1	; select bank1
 10507  1CDD  0823               	movf	(?___flmul+3)^(0+128),w
 10508  1CDE  0026               	movlb	6	; select bank6
 10509  1CDF  00A3               	movwf	(_AutoCircleControl$3324+3)^(0+768)
 10510  1CE0  0021               	movlb	1	; select bank1
 10511  1CE1  0822               	movf	(?___flmul+2)^(0+128),w
 10512  1CE2  0026               	movlb	6	; select bank6
 10513  1CE3  00A2               	movwf	(_AutoCircleControl$3324+2)^(0+768)
 10514  1CE4  0021               	movlb	1	; select bank1
 10515  1CE5  0821               	movf	(?___flmul+1)^(0+128),w
 10516  1CE6  0026               	movlb	6	; select bank6
 10517  1CE7  00A1               	movwf	(_AutoCircleControl$3324+1)^(0+768)
 10518  1CE8  0021               	movlb	1	; select bank1
 10519  1CE9  0820               	movf	?___flmul^(0+128),w
 10520  1CEA  0026               	movlb	6	; select bank6
 10521  1CEB  00A0               	movwf	_AutoCircleControl$3324^(0+768)
 10522                           
 10523                           ;main.c: 375:         timeACircle = (3.14159*valRadius_AC*angle_ACircle*100)/(18*velACir
      +                          cle);
 10524  1CEC  0023               	movlb	3	; select bank3
 10525  1CED  085C               	movf	_angle_ACircle^(0+384),w
 10526  1CEE  0020               	movlb	0	; select bank0
 10527  1CEF  00C3               	movwf	___xxtofl@val
 10528  1CF0  0023               	movlb	3	; select bank3
 10529  1CF1  085D               	movf	(_angle_ACircle+1)^(0+384),w
 10530  1CF2  0020               	movlb	0	; select bank0
 10531  1CF3  00C4               	movwf	___xxtofl@val+1
 10532  1CF4  01C5               	clrf	___xxtofl@val+2
 10533  1CF5  01C6               	clrf	___xxtofl@val+3
 10534  1CF6  3000               	movlw	0
 10535  1CF7  319A  225D  319C   	fcall	___xxtofl
 10536  1CFA  0020               	movlb	0	; select bank0
 10537  1CFB  0846               	movf	?___xxtofl+3,w
 10538  1CFC  0021               	movlb	1	; select bank1
 10539  1CFD  00A3               	movwf	(___flmul@b+3)^(0+128)
 10540  1CFE  0020               	movlb	0	; select bank0
 10541  1CFF  0845               	movf	?___xxtofl+2,w
 10542  1D00  0021               	movlb	1	; select bank1
 10543  1D01  00A2               	movwf	(___flmul@b+2)^(0+128)
 10544  1D02  0020               	movlb	0	; select bank0
 10545  1D03  0844               	movf	?___xxtofl+1,w
 10546  1D04  0021               	movlb	1	; select bank1
 10547  1D05  00A1               	movwf	(___flmul@b+1)^(0+128)
 10548  1D06  0020               	movlb	0	; select bank0
 10549  1D07  0843               	movf	?___xxtofl,w
 10550  1D08  0021               	movlb	1	; select bank1
 10551  1D09  00A0               	movwf	___flmul@b^(0+128)
 10552  1D0A  0026               	movlb	6	; select bank6
 10553  1D0B  0823               	movf	(_AutoCircleControl$3324+3)^(0+768),w
 10554  1D0C  0021               	movlb	1	; select bank1
 10555  1D0D  00A7               	movwf	(___flmul@a+3)^(0+128)
 10556  1D0E  0026               	movlb	6	; select bank6
 10557  1D0F  0822               	movf	(_AutoCircleControl$3324+2)^(0+768),w
 10558  1D10  0021               	movlb	1	; select bank1
 10559  1D11  00A6               	movwf	(___flmul@a+2)^(0+128)
 10560  1D12  0026               	movlb	6	; select bank6
 10561  1D13  0821               	movf	(_AutoCircleControl$3324+1)^(0+768),w
 10562  1D14  0021               	movlb	1	; select bank1
 10563  1D15  00A5               	movwf	(___flmul@a+1)^(0+128)
 10564  1D16  0026               	movlb	6	; select bank6
 10565  1D17  0820               	movf	_AutoCircleControl$3324^(0+768),w
 10566  1D18  0021               	movlb	1	; select bank1
 10567  1D19  00A4               	movwf	___flmul@a^(0+128)
 10568  1D1A  318D  257C  319C   	fcall	___flmul
 10569  1D1D  0021               	movlb	1	; select bank1
 10570  1D1E  0823               	movf	(?___flmul+3)^(0+128),w
 10571  1D1F  0026               	movlb	6	; select bank6
 10572  1D20  00A7               	movwf	(_AutoCircleControl$3325+3)^(0+768)
 10573  1D21  0021               	movlb	1	; select bank1
 10574  1D22  0822               	movf	(?___flmul+2)^(0+128),w
 10575  1D23  0026               	movlb	6	; select bank6
 10576  1D24  00A6               	movwf	(_AutoCircleControl$3325+2)^(0+768)
 10577  1D25  0021               	movlb	1	; select bank1
 10578  1D26  0821               	movf	(?___flmul+1)^(0+128),w
 10579  1D27  0026               	movlb	6	; select bank6
 10580  1D28  00A5               	movwf	(_AutoCircleControl$3325+1)^(0+768)
 10581  1D29  0021               	movlb	1	; select bank1
 10582  1D2A  0820               	movf	?___flmul^(0+128),w
 10583  1D2B  0026               	movlb	6	; select bank6
 10584  1D2C  00A4               	movwf	_AutoCircleControl$3325^(0+768)
 10585                           
 10586                           ;main.c: 375:         timeACircle = (3.14159*valRadius_AC*angle_ACircle*100)/(18*velACir
      +                          cle);
 10587  1D2D  3041               	movlw	65
 10588  1D2E  0021               	movlb	1	; select bank1
 10589  1D2F  00A3               	movwf	(___flmul@b+3)^(0+128)
 10590  1D30  3090               	movlw	144
 10591  1D31  00A2               	movwf	(___flmul@b+2)^(0+128)
 10592  1D32  3000               	movlw	0
 10593  1D33  00A1               	movwf	(___flmul@b+1)^(0+128)
 10594  1D34  3000               	movlw	0
 10595  1D35  00A0               	movwf	___flmul@b^(0+128)
 10596  1D36  0022               	movlb	2	; select bank2
 10597  1D37  084B               	movf	(_velACircle+3)^(0+256),w
 10598  1D38  0021               	movlb	1	; select bank1
 10599  1D39  00A7               	movwf	(___flmul@a+3)^(0+128)
 10600  1D3A  0022               	movlb	2	; select bank2
 10601  1D3B  084A               	movf	(_velACircle+2)^(0+256),w
 10602  1D3C  0021               	movlb	1	; select bank1
 10603  1D3D  00A6               	movwf	(___flmul@a+2)^(0+128)
 10604  1D3E  0022               	movlb	2	; select bank2
 10605  1D3F  0849               	movf	(_velACircle+1)^(0+256),w
 10606  1D40  0021               	movlb	1	; select bank1
 10607  1D41  00A5               	movwf	(___flmul@a+1)^(0+128)
 10608  1D42  0022               	movlb	2	; select bank2
 10609  1D43  0848               	movf	_velACircle^(0+256),w
 10610  1D44  0021               	movlb	1	; select bank1
 10611  1D45  00A4               	movwf	___flmul@a^(0+128)
 10612  1D46  318D  257C  319C   	fcall	___flmul
 10613  1D49  0021               	movlb	1	; select bank1
 10614  1D4A  0823               	movf	(?___flmul+3)^(0+128),w
 10615  1D4B  00BD               	movwf	(___fldiv@a+3)^(0+128)
 10616  1D4C  0822               	movf	(?___flmul+2)^(0+128),w
 10617  1D4D  00BC               	movwf	(___fldiv@a+2)^(0+128)
 10618  1D4E  0821               	movf	(?___flmul+1)^(0+128),w
 10619  1D4F  00BB               	movwf	(___fldiv@a+1)^(0+128)
 10620  1D50  0820               	movf	?___flmul^(0+128),w
 10621  1D51  00BA               	movwf	___fldiv@a^(0+128)
 10622  1D52  3042               	movlw	66
 10623  1D53  00A3               	movwf	(___flmul@b+3)^(0+128)
 10624  1D54  30C8               	movlw	200
 10625  1D55  00A2               	movwf	(___flmul@b+2)^(0+128)
 10626  1D56  3000               	movlw	0
 10627  1D57  00A1               	movwf	(___flmul@b+1)^(0+128)
 10628  1D58  3000               	movlw	0
 10629  1D59  00A0               	movwf	___flmul@b^(0+128)
 10630  1D5A  0026               	movlb	6	; select bank6
 10631  1D5B  0827               	movf	(_AutoCircleControl$3325+3)^(0+768),w
 10632  1D5C  0021               	movlb	1	; select bank1
 10633  1D5D  00A7               	movwf	(___flmul@a+3)^(0+128)
 10634  1D5E  0026               	movlb	6	; select bank6
 10635  1D5F  0826               	movf	(_AutoCircleControl$3325+2)^(0+768),w
 10636  1D60  0021               	movlb	1	; select bank1
 10637  1D61  00A6               	movwf	(___flmul@a+2)^(0+128)
 10638  1D62  0026               	movlb	6	; select bank6
 10639  1D63  0825               	movf	(_AutoCircleControl$3325+1)^(0+768),w
 10640  1D64  0021               	movlb	1	; select bank1
 10641  1D65  00A5               	movwf	(___flmul@a+1)^(0+128)
 10642  1D66  0026               	movlb	6	; select bank6
 10643  1D67  0824               	movf	_AutoCircleControl$3325^(0+768),w
 10644  1D68  0021               	movlb	1	; select bank1
 10645  1D69  00A4               	movwf	___flmul@a^(0+128)
 10646  1D6A  318D  257C  319C   	fcall	___flmul
 10647  1D6D  0021               	movlb	1	; select bank1
 10648  1D6E  0823               	movf	(?___flmul+3)^(0+128),w
 10649  1D6F  00C1               	movwf	(___fldiv@b+3)^(0+128)
 10650  1D70  0822               	movf	(?___flmul+2)^(0+128),w
 10651  1D71  00C0               	movwf	(___fldiv@b+2)^(0+128)
 10652  1D72  0821               	movf	(?___flmul+1)^(0+128),w
 10653  1D73  00BF               	movwf	(___fldiv@b+1)^(0+128)
 10654  1D74  0820               	movf	?___flmul^(0+128),w
 10655  1D75  00BE               	movwf	___fldiv@b^(0+128)
 10656  1D76  3190  2074  319C   	fcall	___fldiv
 10657  1D79  0021               	movlb	1	; select bank1
 10658  1D7A  083D               	movf	(?___fldiv+3)^(0+128),w
 10659  1D7B  0023               	movlb	3	; select bank3
 10660  1D7C  00B3               	movwf	(_timeACircle+3)^(0+384)
 10661  1D7D  0021               	movlb	1	; select bank1
 10662  1D7E  083C               	movf	(?___fldiv+2)^(0+128),w
 10663  1D7F  0023               	movlb	3	; select bank3
 10664  1D80  00B2               	movwf	(_timeACircle+2)^(0+384)
 10665  1D81  0021               	movlb	1	; select bank1
 10666  1D82  083B               	movf	(?___fldiv+1)^(0+128),w
 10667  1D83  0023               	movlb	3	; select bank3
 10668  1D84  00B1               	movwf	(_timeACircle+1)^(0+384)
 10669  1D85  0021               	movlb	1	; select bank1
 10670  1D86  083A               	movf	?___fldiv^(0+128),w
 10671  1D87  0023               	movlb	3	; select bank3
 10672  1D88  00B0               	movwf	_timeACircle^(0+384)
 10673                           
 10674                           ;main.c: 376:         omegaACircle = velACircle/valRadius_AC;
 10675  1D89  086D               	movf	(_valRadius_AC+3)^(0+384),w
 10676  1D8A  0021               	movlb	1	; select bank1
 10677  1D8B  00BD               	movwf	(___fldiv@a+3)^(0+128)
 10678  1D8C  0023               	movlb	3	; select bank3
 10679  1D8D  086C               	movf	(_valRadius_AC+2)^(0+384),w
 10680  1D8E  0021               	movlb	1	; select bank1
 10681  1D8F  00BC               	movwf	(___fldiv@a+2)^(0+128)
 10682  1D90  0023               	movlb	3	; select bank3
 10683  1D91  086B               	movf	(_valRadius_AC+1)^(0+384),w
 10684  1D92  0021               	movlb	1	; select bank1
 10685  1D93  00BB               	movwf	(___fldiv@a+1)^(0+128)
 10686  1D94  0023               	movlb	3	; select bank3
 10687  1D95  086A               	movf	_valRadius_AC^(0+384),w
 10688  1D96  0021               	movlb	1	; select bank1
 10689  1D97  00BA               	movwf	___fldiv@a^(0+128)
 10690  1D98  0022               	movlb	2	; select bank2
 10691  1D99  084B               	movf	(_velACircle+3)^(0+256),w
 10692  1D9A  0021               	movlb	1	; select bank1
 10693  1D9B  00C1               	movwf	(___fldiv@b+3)^(0+128)
 10694  1D9C  0022               	movlb	2	; select bank2
 10695  1D9D  084A               	movf	(_velACircle+2)^(0+256),w
 10696  1D9E  0021               	movlb	1	; select bank1
 10697  1D9F  00C0               	movwf	(___fldiv@b+2)^(0+128)
 10698  1DA0  0022               	movlb	2	; select bank2
 10699  1DA1  0849               	movf	(_velACircle+1)^(0+256),w
 10700  1DA2  0021               	movlb	1	; select bank1
 10701  1DA3  00BF               	movwf	(___fldiv@b+1)^(0+128)
 10702  1DA4  0022               	movlb	2	; select bank2
 10703  1DA5  0848               	movf	_velACircle^(0+256),w
 10704  1DA6  0021               	movlb	1	; select bank1
 10705  1DA7  00BE               	movwf	___fldiv@b^(0+128)
 10706  1DA8  3190  2074  319C   	fcall	___fldiv
 10707  1DAB  0021               	movlb	1	; select bank1
 10708  1DAC  083D               	movf	(?___fldiv+3)^(0+128),w
 10709  1DAD  0023               	movlb	3	; select bank3
 10710  1DAE  00B7               	movwf	(_omegaACircle+3)^(0+384)
 10711  1DAF  0021               	movlb	1	; select bank1
 10712  1DB0  083C               	movf	(?___fldiv+2)^(0+128),w
 10713  1DB1  0023               	movlb	3	; select bank3
 10714  1DB2  00B6               	movwf	(_omegaACircle+2)^(0+384)
 10715  1DB3  0021               	movlb	1	; select bank1
 10716  1DB4  083B               	movf	(?___fldiv+1)^(0+128),w
 10717  1DB5  0023               	movlb	3	; select bank3
 10718  1DB6  00B5               	movwf	(_omegaACircle+1)^(0+384)
 10719  1DB7  0021               	movlb	1	; select bank1
 10720  1DB8  083A               	movf	?___fldiv^(0+128),w
 10721  1DB9  0023               	movlb	3	; select bank3
 10722  1DBA  00B4               	movwf	_omegaACircle^(0+384)
 10723                           
 10724                           ;main.c: 377:         if(totalTime != timeACircle) totalTime = timeACircle;
 10725  1DBB  0020               	movlb	0	; select bank0
 10726  1DBC  0854               	movf	_totalTime,w
 10727  1DBD  00C3               	movwf	___xxtofl@val
 10728  1DBE  0855               	movf	_totalTime+1,w
 10729  1DBF  00C4               	movwf	___xxtofl@val+1
 10730  1DC0  01C5               	clrf	___xxtofl@val+2
 10731  1DC1  01C6               	clrf	___xxtofl@val+3
 10732  1DC2  3000               	movlw	0
 10733  1DC3  319A  225D  319C   	fcall	___xxtofl
 10734  1DC6  0020               	movlb	0	; select bank0
 10735  1DC7  0846               	movf	?___xxtofl+3,w
 10736  1DC8  0021               	movlb	1	; select bank1
 10737  1DC9  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 10738  1DCA  0020               	movlb	0	; select bank0
 10739  1DCB  0845               	movf	?___xxtofl+2,w
 10740  1DCC  0021               	movlb	1	; select bank1
 10741  1DCD  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 10742  1DCE  0020               	movlb	0	; select bank0
 10743  1DCF  0844               	movf	?___xxtofl+1,w
 10744  1DD0  0021               	movlb	1	; select bank1
 10745  1DD1  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 10746  1DD2  0020               	movlb	0	; select bank0
 10747  1DD3  0843               	movf	?___xxtofl,w
 10748  1DD4  0021               	movlb	1	; select bank1
 10749  1DD5  00A0               	movwf	___fleq@ff1^(0+128)
 10750  1DD6  0023               	movlb	3	; select bank3
 10751  1DD7  0833               	movf	(_timeACircle+3)^(0+384),w
 10752  1DD8  0021               	movlb	1	; select bank1
 10753  1DD9  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 10754  1DDA  0023               	movlb	3	; select bank3
 10755  1DDB  0832               	movf	(_timeACircle+2)^(0+384),w
 10756  1DDC  0021               	movlb	1	; select bank1
 10757  1DDD  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 10758  1DDE  0023               	movlb	3	; select bank3
 10759  1DDF  0831               	movf	(_timeACircle+1)^(0+384),w
 10760  1DE0  0021               	movlb	1	; select bank1
 10761  1DE1  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 10762  1DE2  0023               	movlb	3	; select bank3
 10763  1DE3  0830               	movf	_timeACircle^(0+384),w
 10764  1DE4  0021               	movlb	1	; select bank1
 10765  1DE5  00A4               	movwf	___fleq@ff2^(0+128)
 10766  1DE6  3188  2000  319C   	fcall	___fleq
 10767  1DE9  1803               	btfsc	3,0
 10768  1DEA  2DEC               	goto	u9671
 10769  1DEB  2DED               	goto	u9670
 10770  1DEC                     u9671:
 10771  1DEC  2E08               	goto	l9113
 10772  1DED                     u9670:
 10773  1DED                     l9111:
 10774  1DED  0023               	movlb	3	; select bank3
 10775  1DEE  0833               	movf	(_timeACircle+3)^(0+384),w
 10776  1DEF  0021               	movlb	1	; select bank1
 10777  1DF0  00EB               	movwf	(___fltol@f1+3)^(0+128)
 10778  1DF1  0023               	movlb	3	; select bank3
 10779  1DF2  0832               	movf	(_timeACircle+2)^(0+384),w
 10780  1DF3  0021               	movlb	1	; select bank1
 10781  1DF4  00EA               	movwf	(___fltol@f1+2)^(0+128)
 10782  1DF5  0023               	movlb	3	; select bank3
 10783  1DF6  0831               	movf	(_timeACircle+1)^(0+384),w
 10784  1DF7  0021               	movlb	1	; select bank1
 10785  1DF8  00E9               	movwf	(___fltol@f1+1)^(0+128)
 10786  1DF9  0023               	movlb	3	; select bank3
 10787  1DFA  0830               	movf	_timeACircle^(0+384),w
 10788  1DFB  0021               	movlb	1	; select bank1
 10789  1DFC  00E8               	movwf	___fltol@f1^(0+128)
 10790  1DFD  3198  2012  319C   	fcall	___fltol
 10791  1E00  0021               	movlb	1	; select bank1
 10792  1E01  0869               	movf	(?___fltol+1)^(0+128),w
 10793  1E02  0020               	movlb	0	; select bank0
 10794  1E03  00D5               	movwf	_totalTime+1
 10795  1E04  0021               	movlb	1	; select bank1
 10796  1E05  0868               	movf	?___fltol^(0+128),w
 10797  1E06  0020               	movlb	0	; select bank0
 10798  1E07  00D4               	movwf	_totalTime
 10799  1E08                     l9113:
 10800                           
 10801                           ;main.c: 378:         cntTime = 0;
 10802  1E08  0022               	movlb	2	; select bank2
 10803  1E09  01DA               	clrf	_cntTime^(0+256)
 10804  1E0A  01DB               	clrf	(_cntTime+1)^(0+256)
 10805  1E0B                     l9115:
 10806                           
 10807                           ;main.c: 379:         ramp_step_function(velACircle,valRadius_AC,timeACircle);
 10808  1E0B  084B               	movf	(_velACircle+3)^(0+256),w
 10809  1E0C  00BB               	movwf	(ramp_step_function@velocity+3)^(0+256)
 10810  1E0D  084A               	movf	(_velACircle+2)^(0+256),w
 10811  1E0E  00BA               	movwf	(ramp_step_function@velocity+2)^(0+256)
 10812  1E0F  0849               	movf	(_velACircle+1)^(0+256),w
 10813  1E10  00B9               	movwf	(ramp_step_function@velocity+1)^(0+256)
 10814  1E11  0848               	movf	_velACircle^(0+256),w
 10815  1E12  00B8               	movwf	ramp_step_function@velocity^(0+256)
 10816  1E13  0023               	movlb	3	; select bank3
 10817  1E14  086D               	movf	(_valRadius_AC+3)^(0+384),w
 10818  1E15  0022               	movlb	2	; select bank2
 10819  1E16  00BF               	movwf	(ramp_step_function@radius+3)^(0+256)
 10820  1E17  0023               	movlb	3	; select bank3
 10821  1E18  086C               	movf	(_valRadius_AC+2)^(0+384),w
 10822  1E19  0022               	movlb	2	; select bank2
 10823  1E1A  00BE               	movwf	(ramp_step_function@radius+2)^(0+256)
 10824  1E1B  0023               	movlb	3	; select bank3
 10825  1E1C  086B               	movf	(_valRadius_AC+1)^(0+384),w
 10826  1E1D  0022               	movlb	2	; select bank2
 10827  1E1E  00BD               	movwf	(ramp_step_function@radius+1)^(0+256)
 10828  1E1F  0023               	movlb	3	; select bank3
 10829  1E20  086A               	movf	_valRadius_AC^(0+384),w
 10830  1E21  0022               	movlb	2	; select bank2
 10831  1E22  00BC               	movwf	ramp_step_function@radius^(0+256)
 10832  1E23  0023               	movlb	3	; select bank3
 10833  1E24  0833               	movf	(_timeACircle+3)^(0+384),w
 10834  1E25  0022               	movlb	2	; select bank2
 10835  1E26  00C3               	movwf	(ramp_step_function@total_time+3)^(0+256)
 10836  1E27  0023               	movlb	3	; select bank3
 10837  1E28  0832               	movf	(_timeACircle+2)^(0+384),w
 10838  1E29  0022               	movlb	2	; select bank2
 10839  1E2A  00C2               	movwf	(ramp_step_function@total_time+2)^(0+256)
 10840  1E2B  0023               	movlb	3	; select bank3
 10841  1E2C  0831               	movf	(_timeACircle+1)^(0+384),w
 10842  1E2D  0022               	movlb	2	; select bank2
 10843  1E2E  00C1               	movwf	(ramp_step_function@total_time+1)^(0+256)
 10844  1E2F  0023               	movlb	3	; select bank3
 10845  1E30  0830               	movf	_timeACircle^(0+384),w
 10846  1E31  0022               	movlb	2	; select bank2
 10847  1E32  00C0               	movwf	ramp_step_function@total_time^(0+256)
 10848  1E33  318B  2337  319C   	fcall	_ramp_step_function
 10849  1E36                     l9117:
 10850                           
 10851                           ;main.c: 380:         velocity_sys = velACircle;
 10852  1E36  0022               	movlb	2	; select bank2
 10853  1E37  084B               	movf	(_velACircle+3)^(0+256),w
 10854  1E38  00C7               	movwf	(_velocity_sys+3)^(0+256)
 10855  1E39  084A               	movf	(_velACircle+2)^(0+256),w
 10856  1E3A  00C6               	movwf	(_velocity_sys+2)^(0+256)
 10857  1E3B  0849               	movf	(_velACircle+1)^(0+256),w
 10858  1E3C  00C5               	movwf	(_velocity_sys+1)^(0+256)
 10859  1E3D  0848               	movf	_velACircle^(0+256),w
 10860  1E3E  00C4               	movwf	_velocity_sys^(0+256)
 10861  1E3F                     l9119:
 10862                           
 10863                           ;main.c: 381:         omega_sys = omegaACircle;
 10864  1E3F  0023               	movlb	3	; select bank3
 10865  1E40  0837               	movf	(_omegaACircle+3)^(0+384),w
 10866  1E41  0024               	movlb	4	; select bank4
 10867  1E42  00E5               	movwf	(_omega_sys+3)^(0+512)
 10868  1E43  0023               	movlb	3	; select bank3
 10869  1E44  0836               	movf	(_omegaACircle+2)^(0+384),w
 10870  1E45  0024               	movlb	4	; select bank4
 10871  1E46  00E4               	movwf	(_omega_sys+2)^(0+512)
 10872  1E47  0023               	movlb	3	; select bank3
 10873  1E48  0835               	movf	(_omegaACircle+1)^(0+384),w
 10874  1E49  0024               	movlb	4	; select bank4
 10875  1E4A  00E3               	movwf	(_omega_sys+1)^(0+512)
 10876  1E4B  0023               	movlb	3	; select bank3
 10877  1E4C  0834               	movf	_omegaACircle^(0+384),w
 10878  1E4D  0024               	movlb	4	; select bank4
 10879  1E4E  00E2               	movwf	_omega_sys^(0+512)
 10880                           
 10881                           ;main.c: 382:         flagACircle = 0;
 10882  1E4F  0020               	movlb	0	; select bank0
 10883  1E50  01D7               	clrf	_flagACircle
 10884  1E51                     l1593:
 10885  1E51  0008               	return
 10886  1E52                     __end_of_AutoCircleControl:
 10887                           
 10888                           	psect	text35
 10889  0B37                     __ptext35:	
 10890 ;; *************** function _ramp_step_function *****************
 10891 ;; Defined at:
 10892 ;;		line 176 in file "main.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  velocity        4   24[BANK2 ] float 
 10895 ;;  radius          4   28[BANK2 ] float 
 10896 ;;  total_time      4   32[BANK2 ] float 
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;  i               2    4[BANK5 ] int 
 10899 ;;  velocity_ram    4    6[BANK5 ] float 
 10900 ;;  omega_ramp      4    0[BANK5 ] float 
 10901 ;; Return value:  Size  Location     Type
 10902 ;;                  1    wreg      void 
 10903 ;; Registers used:
 10904 ;;		wreg, status,2, status,0, pclath, cstack
 10905 ;; Tracked objects:
 10906 ;;		On entry : 0/0
 10907 ;;		On exit  : 0/0
 10908 ;;		Unchanged: 0/0
 10909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10910 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 10911 ;;      Locals:         0       0       0       0       0       0      10       0       0       0       0       0       
      +0       0
 10912 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10913 ;;      Totals:         0       1       0      12       0       0      10       0       0       0       0       0       
      +0       0
 10914 ;;Total ram usage:       23 bytes
 10915 ;; Hardware stack levels used: 1
 10916 ;; Hardware stack levels required when called: 8
 10917 ;; This function calls:
 10918 ;;		_KE
 10919 ;;		___fladd
 10920 ;;		___fldiv
 10921 ;;		___fleq
 10922 ;;		___flge
 10923 ;;		___flmul
 10924 ;;		___flsub
 10925 ;;		___xxtofl
 10926 ;; This function is called by:
 10927 ;;		_ManualControl
 10928 ;;		_AutoCircleControl
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           
 10933                           ;psect for function _ramp_step_function
 10934  0B37                     _ramp_step_function:
 10935  0B37                     l8775:	
 10936                           ;incstack = 0
 10937                           ; Regs used in _ramp_step_function: [wreg+status,2+status,0+pclath+cstack]
 10938                           
 10939                           
 10940                           ;main.c: 176: void ramp_step_function(float velocity, float radius, float total_time);ma
      +                          in.c: 177: {;main.c: 178:     float omega_ramp = 0, velocity_ramp = velocity_sys;
 10941  0B37  3000               	movlw	0
 10942  0B38  0025               	movlb	5	; select bank5
 10943  0B39  00E7               	movwf	(ramp_step_function@omega_ramp+3)^(0+640)
 10944  0B3A  3000               	movlw	0
 10945  0B3B  00E6               	movwf	(ramp_step_function@omega_ramp+2)^(0+640)
 10946  0B3C  3000               	movlw	0
 10947  0B3D  00E5               	movwf	(ramp_step_function@omega_ramp+1)^(0+640)
 10948  0B3E  3000               	movlw	0
 10949  0B3F  00E4               	movwf	ramp_step_function@omega_ramp^(0+640)
 10950  0B40  0022               	movlb	2	; select bank2
 10951  0B41  0847               	movf	(_velocity_sys+3)^(0+256),w
 10952  0B42  0025               	movlb	5	; select bank5
 10953  0B43  00ED               	movwf	(ramp_step_function@velocity_ramp+3)^(0+640)
 10954  0B44  0022               	movlb	2	; select bank2
 10955  0B45  0846               	movf	(_velocity_sys+2)^(0+256),w
 10956  0B46  0025               	movlb	5	; select bank5
 10957  0B47  00EC               	movwf	(ramp_step_function@velocity_ramp+2)^(0+640)
 10958  0B48  0022               	movlb	2	; select bank2
 10959  0B49  0845               	movf	(_velocity_sys+1)^(0+256),w
 10960  0B4A  0025               	movlb	5	; select bank5
 10961  0B4B  00EB               	movwf	(ramp_step_function@velocity_ramp+1)^(0+640)
 10962  0B4C  0022               	movlb	2	; select bank2
 10963  0B4D  0844               	movf	_velocity_sys^(0+256),w
 10964  0B4E  0025               	movlb	5	; select bank5
 10965  0B4F  00EA               	movwf	ramp_step_function@velocity_ramp^(0+640)
 10966  0B50                     l8777:
 10967                           
 10968                           ;main.c: 179:     for(int i = 0; i < (total_time*0.2); i++) {
 10969  0B50  01E8               	clrf	ramp_step_function@i^(0+640)
 10970  0B51  01E9               	clrf	(ramp_step_function@i+1)^(0+640)
 10971  0B52  2D2E               	goto	l8801
 10972  0B53                     l8779:
 10973                           
 10974                           ;main.c: 180:         _delay((unsigned long)((1)*(16000000/4000.0)));
 10975  0B53  3006               	movlw	6
 10976  0B54  0020               	movlb	0	; select bank0
 10977  0B55  00D3               	movwf	??_ramp_step_function
 10978  0B56  3030               	movlw	48
 10979  0B57                     u10197:
 10980  0B57  0B89               	decfsz	9,f
 10981  0B58  2B57               	goto	u10197
 10982  0B59  0BD3               	decfsz	??_ramp_step_function,f
 10983  0B5A  2B57               	goto	u10197
 10984  0B5B  0000               	nop
 10985  0B5C                     l8781:
 10986                           
 10987                           ;main.c: 181:         if((velocity_sys == 0) && (velocity != 0)) {
 10988  0B5C  0022               	movlb	2	; select bank2
 10989  0B5D  0847               	movf	(_velocity_sys+3)^(0+256),w
 10990  0B5E  0021               	movlb	1	; select bank1
 10991  0B5F  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 10992  0B60  0022               	movlb	2	; select bank2
 10993  0B61  0846               	movf	(_velocity_sys+2)^(0+256),w
 10994  0B62  0021               	movlb	1	; select bank1
 10995  0B63  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 10996  0B64  0022               	movlb	2	; select bank2
 10997  0B65  0845               	movf	(_velocity_sys+1)^(0+256),w
 10998  0B66  0021               	movlb	1	; select bank1
 10999  0B67  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11000  0B68  0022               	movlb	2	; select bank2
 11001  0B69  0844               	movf	_velocity_sys^(0+256),w
 11002  0B6A  0021               	movlb	1	; select bank1
 11003  0B6B  00A0               	movwf	___fleq@ff1^(0+128)
 11004  0B6C  3000               	movlw	0
 11005  0B6D  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11006  0B6E  3000               	movlw	0
 11007  0B6F  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11008  0B70  3000               	movlw	0
 11009  0B71  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11010  0B72  3000               	movlw	0
 11011  0B73  00A4               	movwf	___fleq@ff2^(0+128)
 11012  0B74  3188  2000  318B   	fcall	___fleq
 11013  0B77  1C03               	btfss	3,0
 11014  0B78  2B7A               	goto	u9051
 11015  0B79  2B7B               	goto	u9050
 11016  0B7A                     u9051:
 11017  0B7A  2C09               	goto	l8789
 11018  0B7B                     u9050:
 11019  0B7B                     l8783:
 11020  0B7B  0022               	movlb	2	; select bank2
 11021  0B7C  083B               	movf	(ramp_step_function@velocity+3)^(0+256),w
 11022  0B7D  0021               	movlb	1	; select bank1
 11023  0B7E  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11024  0B7F  0022               	movlb	2	; select bank2
 11025  0B80  083A               	movf	(ramp_step_function@velocity+2)^(0+256),w
 11026  0B81  0021               	movlb	1	; select bank1
 11027  0B82  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11028  0B83  0022               	movlb	2	; select bank2
 11029  0B84  0839               	movf	(ramp_step_function@velocity+1)^(0+256),w
 11030  0B85  0021               	movlb	1	; select bank1
 11031  0B86  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11032  0B87  0022               	movlb	2	; select bank2
 11033  0B88  0838               	movf	ramp_step_function@velocity^(0+256),w
 11034  0B89  0021               	movlb	1	; select bank1
 11035  0B8A  00A0               	movwf	___fleq@ff1^(0+128)
 11036  0B8B  3000               	movlw	0
 11037  0B8C  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11038  0B8D  3000               	movlw	0
 11039  0B8E  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11040  0B8F  3000               	movlw	0
 11041  0B90  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11042  0B91  3000               	movlw	0
 11043  0B92  00A4               	movwf	___fleq@ff2^(0+128)
 11044  0B93  3188  2000  318B   	fcall	___fleq
 11045  0B96  1803               	btfsc	3,0
 11046  0B97  2B99               	goto	u9061
 11047  0B98  2B9A               	goto	u9060
 11048  0B99                     u9061:
 11049  0B99  2C09               	goto	l8789
 11050  0B9A                     u9060:
 11051  0B9A                     l8785:
 11052                           
 11053                           ;main.c: 182:             if(velocity_ramp != velocity) velocity_ramp = velocity_ramp + 
      +                          (0.05*velocity);
 11054  0B9A  0025               	movlb	5	; select bank5
 11055  0B9B  086D               	movf	(ramp_step_function@velocity_ramp+3)^(0+640),w
 11056  0B9C  0021               	movlb	1	; select bank1
 11057  0B9D  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11058  0B9E  0025               	movlb	5	; select bank5
 11059  0B9F  086C               	movf	(ramp_step_function@velocity_ramp+2)^(0+640),w
 11060  0BA0  0021               	movlb	1	; select bank1
 11061  0BA1  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11062  0BA2  0025               	movlb	5	; select bank5
 11063  0BA3  086B               	movf	(ramp_step_function@velocity_ramp+1)^(0+640),w
 11064  0BA4  0021               	movlb	1	; select bank1
 11065  0BA5  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11066  0BA6  0025               	movlb	5	; select bank5
 11067  0BA7  086A               	movf	ramp_step_function@velocity_ramp^(0+640),w
 11068  0BA8  0021               	movlb	1	; select bank1
 11069  0BA9  00A0               	movwf	___fleq@ff1^(0+128)
 11070  0BAA  0022               	movlb	2	; select bank2
 11071  0BAB  083B               	movf	(ramp_step_function@velocity+3)^(0+256),w
 11072  0BAC  0021               	movlb	1	; select bank1
 11073  0BAD  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11074  0BAE  0022               	movlb	2	; select bank2
 11075  0BAF  083A               	movf	(ramp_step_function@velocity+2)^(0+256),w
 11076  0BB0  0021               	movlb	1	; select bank1
 11077  0BB1  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11078  0BB2  0022               	movlb	2	; select bank2
 11079  0BB3  0839               	movf	(ramp_step_function@velocity+1)^(0+256),w
 11080  0BB4  0021               	movlb	1	; select bank1
 11081  0BB5  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11082  0BB6  0022               	movlb	2	; select bank2
 11083  0BB7  0838               	movf	ramp_step_function@velocity^(0+256),w
 11084  0BB8  0021               	movlb	1	; select bank1
 11085  0BB9  00A4               	movwf	___fleq@ff2^(0+128)
 11086  0BBA  3188  2000  318B   	fcall	___fleq
 11087  0BBD  1803               	btfsc	3,0
 11088  0BBE  2BC0               	goto	u9071
 11089  0BBF  2BC1               	goto	u9070
 11090  0BC0                     u9071:
 11091  0BC0  2CB4               	goto	l1494
 11092  0BC1                     u9070:
 11093  0BC1                     l8787:
 11094  0BC1  0025               	movlb	5	; select bank5
 11095  0BC2  086D               	movf	(ramp_step_function@velocity_ramp+3)^(0+640),w
 11096  0BC3  0021               	movlb	1	; select bank1
 11097  0BC4  00D7               	movwf	(___fladd@b+3)^(0+128)
 11098  0BC5  0025               	movlb	5	; select bank5
 11099  0BC6  086C               	movf	(ramp_step_function@velocity_ramp+2)^(0+640),w
 11100  0BC7  0021               	movlb	1	; select bank1
 11101  0BC8  00D6               	movwf	(___fladd@b+2)^(0+128)
 11102  0BC9  0025               	movlb	5	; select bank5
 11103  0BCA  086B               	movf	(ramp_step_function@velocity_ramp+1)^(0+640),w
 11104  0BCB  0021               	movlb	1	; select bank1
 11105  0BCC  00D5               	movwf	(___fladd@b+1)^(0+128)
 11106  0BCD  0025               	movlb	5	; select bank5
 11107  0BCE  086A               	movf	ramp_step_function@velocity_ramp^(0+640),w
 11108  0BCF  0021               	movlb	1	; select bank1
 11109  0BD0  00D4               	movwf	___fladd@b^(0+128)
 11110  0BD1  303D               	movlw	61
 11111  0BD2  00A3               	movwf	(___flmul@b+3)^(0+128)
 11112  0BD3  304C               	movlw	76
 11113  0BD4  00A2               	movwf	(___flmul@b+2)^(0+128)
 11114  0BD5  30CC               	movlw	204
 11115  0BD6  00A1               	movwf	(___flmul@b+1)^(0+128)
 11116  0BD7  30CD               	movlw	205
 11117  0BD8  00A0               	movwf	___flmul@b^(0+128)
 11118  0BD9  0022               	movlb	2	; select bank2
 11119  0BDA  083B               	movf	(ramp_step_function@velocity+3)^(0+256),w
 11120  0BDB  0021               	movlb	1	; select bank1
 11121  0BDC  00A7               	movwf	(___flmul@a+3)^(0+128)
 11122  0BDD  0022               	movlb	2	; select bank2
 11123  0BDE  083A               	movf	(ramp_step_function@velocity+2)^(0+256),w
 11124  0BDF  0021               	movlb	1	; select bank1
 11125  0BE0  00A6               	movwf	(___flmul@a+2)^(0+128)
 11126  0BE1  0022               	movlb	2	; select bank2
 11127  0BE2  0839               	movf	(ramp_step_function@velocity+1)^(0+256),w
 11128  0BE3  0021               	movlb	1	; select bank1
 11129  0BE4  00A5               	movwf	(___flmul@a+1)^(0+128)
 11130  0BE5  0022               	movlb	2	; select bank2
 11131  0BE6  0838               	movf	ramp_step_function@velocity^(0+256),w
 11132  0BE7  0021               	movlb	1	; select bank1
 11133  0BE8  00A4               	movwf	___flmul@a^(0+128)
 11134  0BE9  318D  257C  318B   	fcall	___flmul
 11135  0BEC  0021               	movlb	1	; select bank1
 11136  0BED  0823               	movf	(?___flmul+3)^(0+128),w
 11137  0BEE  00DB               	movwf	(___fladd@a+3)^(0+128)
 11138  0BEF  0822               	movf	(?___flmul+2)^(0+128),w
 11139  0BF0  00DA               	movwf	(___fladd@a+2)^(0+128)
 11140  0BF1  0821               	movf	(?___flmul+1)^(0+128),w
 11141  0BF2  00D9               	movwf	(___fladd@a+1)^(0+128)
 11142  0BF3  0820               	movf	?___flmul^(0+128),w
 11143  0BF4  00D8               	movwf	___fladd@a^(0+128)
 11144  0BF5  3188  20FF  318B   	fcall	___fladd
 11145  0BF8  0021               	movlb	1	; select bank1
 11146  0BF9  0857               	movf	(?___fladd+3)^(0+128),w
 11147  0BFA  0025               	movlb	5	; select bank5
 11148  0BFB  00ED               	movwf	(ramp_step_function@velocity_ramp+3)^(0+640)
 11149  0BFC  0021               	movlb	1	; select bank1
 11150  0BFD  0856               	movf	(?___fladd+2)^(0+128),w
 11151  0BFE  0025               	movlb	5	; select bank5
 11152  0BFF  00EC               	movwf	(ramp_step_function@velocity_ramp+2)^(0+640)
 11153  0C00  0021               	movlb	1	; select bank1
 11154  0C01  0855               	movf	(?___fladd+1)^(0+128),w
 11155  0C02  0025               	movlb	5	; select bank5
 11156  0C03  00EB               	movwf	(ramp_step_function@velocity_ramp+1)^(0+640)
 11157  0C04  0021               	movlb	1	; select bank1
 11158  0C05  0854               	movf	?___fladd^(0+128),w
 11159  0C06  0025               	movlb	5	; select bank5
 11160  0C07  00EA               	movwf	ramp_step_function@velocity_ramp^(0+640)
 11161  0C08  2CB4               	goto	l1494
 11162  0C09                     l8789:
 11163  0C09  0022               	movlb	2	; select bank2
 11164  0C0A  0847               	movf	(_velocity_sys+3)^(0+256),w
 11165  0C0B  0021               	movlb	1	; select bank1
 11166  0C0C  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11167  0C0D  0022               	movlb	2	; select bank2
 11168  0C0E  0846               	movf	(_velocity_sys+2)^(0+256),w
 11169  0C0F  0021               	movlb	1	; select bank1
 11170  0C10  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11171  0C11  0022               	movlb	2	; select bank2
 11172  0C12  0845               	movf	(_velocity_sys+1)^(0+256),w
 11173  0C13  0021               	movlb	1	; select bank1
 11174  0C14  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11175  0C15  0022               	movlb	2	; select bank2
 11176  0C16  0844               	movf	_velocity_sys^(0+256),w
 11177  0C17  0021               	movlb	1	; select bank1
 11178  0C18  00A0               	movwf	___fleq@ff1^(0+128)
 11179  0C19  3000               	movlw	0
 11180  0C1A  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11181  0C1B  3000               	movlw	0
 11182  0C1C  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11183  0C1D  3000               	movlw	0
 11184  0C1E  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11185  0C1F  3000               	movlw	0
 11186  0C20  00A4               	movwf	___fleq@ff2^(0+128)
 11187  0C21  3188  2000  318B   	fcall	___fleq
 11188  0C24  1803               	btfsc	3,0
 11189  0C25  2C27               	goto	u9081
 11190  0C26  2C28               	goto	u9080
 11191  0C27                     u9081:
 11192  0C27  2CB4               	goto	l1494
 11193  0C28                     u9080:
 11194  0C28                     l8791:
 11195  0C28  0022               	movlb	2	; select bank2
 11196  0C29  083B               	movf	(ramp_step_function@velocity+3)^(0+256),w
 11197  0C2A  0021               	movlb	1	; select bank1
 11198  0C2B  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11199  0C2C  0022               	movlb	2	; select bank2
 11200  0C2D  083A               	movf	(ramp_step_function@velocity+2)^(0+256),w
 11201  0C2E  0021               	movlb	1	; select bank1
 11202  0C2F  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11203  0C30  0022               	movlb	2	; select bank2
 11204  0C31  0839               	movf	(ramp_step_function@velocity+1)^(0+256),w
 11205  0C32  0021               	movlb	1	; select bank1
 11206  0C33  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11207  0C34  0022               	movlb	2	; select bank2
 11208  0C35  0838               	movf	ramp_step_function@velocity^(0+256),w
 11209  0C36  0021               	movlb	1	; select bank1
 11210  0C37  00A0               	movwf	___fleq@ff1^(0+128)
 11211  0C38  3000               	movlw	0
 11212  0C39  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11213  0C3A  3000               	movlw	0
 11214  0C3B  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11215  0C3C  3000               	movlw	0
 11216  0C3D  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11217  0C3E  3000               	movlw	0
 11218  0C3F  00A4               	movwf	___fleq@ff2^(0+128)
 11219  0C40  3188  2000  318B   	fcall	___fleq
 11220  0C43  1C03               	btfss	3,0
 11221  0C44  2C46               	goto	u9091
 11222  0C45  2C47               	goto	u9090
 11223  0C46                     u9091:
 11224  0C46  2CB4               	goto	l1494
 11225  0C47                     u9090:
 11226  0C47                     l8793:
 11227                           
 11228                           ;main.c: 185:             if(velocity_ramp != 0) velocity_ramp -= (0.05*velocity_sys);
 11229  0C47  0025               	movlb	5	; select bank5
 11230  0C48  086D               	movf	(ramp_step_function@velocity_ramp+3)^(0+640),w
 11231  0C49  0021               	movlb	1	; select bank1
 11232  0C4A  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11233  0C4B  0025               	movlb	5	; select bank5
 11234  0C4C  086C               	movf	(ramp_step_function@velocity_ramp+2)^(0+640),w
 11235  0C4D  0021               	movlb	1	; select bank1
 11236  0C4E  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11237  0C4F  0025               	movlb	5	; select bank5
 11238  0C50  086B               	movf	(ramp_step_function@velocity_ramp+1)^(0+640),w
 11239  0C51  0021               	movlb	1	; select bank1
 11240  0C52  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11241  0C53  0025               	movlb	5	; select bank5
 11242  0C54  086A               	movf	ramp_step_function@velocity_ramp^(0+640),w
 11243  0C55  0021               	movlb	1	; select bank1
 11244  0C56  00A0               	movwf	___fleq@ff1^(0+128)
 11245  0C57  3000               	movlw	0
 11246  0C58  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11247  0C59  3000               	movlw	0
 11248  0C5A  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11249  0C5B  3000               	movlw	0
 11250  0C5C  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11251  0C5D  3000               	movlw	0
 11252  0C5E  00A4               	movwf	___fleq@ff2^(0+128)
 11253  0C5F  3188  2000  318B   	fcall	___fleq
 11254  0C62  1803               	btfsc	3,0
 11255  0C63  2C65               	goto	u9101
 11256  0C64  2C66               	goto	u9100
 11257  0C65                     u9101:
 11258  0C65  2CB4               	goto	l1494
 11259  0C66                     u9100:
 11260  0C66                     l8795:
 11261  0C66  0022               	movlb	2	; select bank2
 11262  0C67  0847               	movf	(_velocity_sys+3)^(0+256),w
 11263  0C68  0021               	movlb	1	; select bank1
 11264  0C69  00A7               	movwf	(___flmul@a+3)^(0+128)
 11265  0C6A  0022               	movlb	2	; select bank2
 11266  0C6B  0846               	movf	(_velocity_sys+2)^(0+256),w
 11267  0C6C  0021               	movlb	1	; select bank1
 11268  0C6D  00A6               	movwf	(___flmul@a+2)^(0+128)
 11269  0C6E  0022               	movlb	2	; select bank2
 11270  0C6F  0845               	movf	(_velocity_sys+1)^(0+256),w
 11271  0C70  0021               	movlb	1	; select bank1
 11272  0C71  00A5               	movwf	(___flmul@a+1)^(0+128)
 11273  0C72  0022               	movlb	2	; select bank2
 11274  0C73  0844               	movf	_velocity_sys^(0+256),w
 11275  0C74  0021               	movlb	1	; select bank1
 11276  0C75  00A4               	movwf	___flmul@a^(0+128)
 11277  0C76  303D               	movlw	61
 11278  0C77  00A3               	movwf	(___flmul@b+3)^(0+128)
 11279  0C78  304C               	movlw	76
 11280  0C79  00A2               	movwf	(___flmul@b+2)^(0+128)
 11281  0C7A  30CC               	movlw	204
 11282  0C7B  00A1               	movwf	(___flmul@b+1)^(0+128)
 11283  0C7C  30CD               	movlw	205
 11284  0C7D  00A0               	movwf	___flmul@b^(0+128)
 11285  0C7E  318D  257C  318B   	fcall	___flmul
 11286  0C81  0021               	movlb	1	; select bank1
 11287  0C82  0823               	movf	(?___flmul+3)^(0+128),w
 11288  0C83  0022               	movlb	2	; select bank2
 11289  0C84  00A3               	movwf	(___flsub@a+3)^(0+256)
 11290  0C85  0021               	movlb	1	; select bank1
 11291  0C86  0822               	movf	(?___flmul+2)^(0+128),w
 11292  0C87  0022               	movlb	2	; select bank2
 11293  0C88  00A2               	movwf	(___flsub@a+2)^(0+256)
 11294  0C89  0021               	movlb	1	; select bank1
 11295  0C8A  0821               	movf	(?___flmul+1)^(0+128),w
 11296  0C8B  0022               	movlb	2	; select bank2
 11297  0C8C  00A1               	movwf	(___flsub@a+1)^(0+256)
 11298  0C8D  0021               	movlb	1	; select bank1
 11299  0C8E  0820               	movf	?___flmul^(0+128),w
 11300  0C8F  0022               	movlb	2	; select bank2
 11301  0C90  00A0               	movwf	___flsub@a^(0+256)
 11302  0C91  0025               	movlb	5	; select bank5
 11303  0C92  086D               	movf	(ramp_step_function@velocity_ramp+3)^(0+640),w
 11304  0C93  0022               	movlb	2	; select bank2
 11305  0C94  00A7               	movwf	(___flsub@b+3)^(0+256)
 11306  0C95  0025               	movlb	5	; select bank5
 11307  0C96  086C               	movf	(ramp_step_function@velocity_ramp+2)^(0+640),w
 11308  0C97  0022               	movlb	2	; select bank2
 11309  0C98  00A6               	movwf	(___flsub@b+2)^(0+256)
 11310  0C99  0025               	movlb	5	; select bank5
 11311  0C9A  086B               	movf	(ramp_step_function@velocity_ramp+1)^(0+640),w
 11312  0C9B  0022               	movlb	2	; select bank2
 11313  0C9C  00A5               	movwf	(___flsub@b+1)^(0+256)
 11314  0C9D  0025               	movlb	5	; select bank5
 11315  0C9E  086A               	movf	ramp_step_function@velocity_ramp^(0+640),w
 11316  0C9F  0022               	movlb	2	; select bank2
 11317  0CA0  00A4               	movwf	___flsub@b^(0+256)
 11318  0CA1  3190  203E  318B   	fcall	___flsub
 11319  0CA4  0022               	movlb	2	; select bank2
 11320  0CA5  0823               	movf	(?___flsub+3)^(0+256),w
 11321  0CA6  0025               	movlb	5	; select bank5
 11322  0CA7  00ED               	movwf	(ramp_step_function@velocity_ramp+3)^(0+640)
 11323  0CA8  0022               	movlb	2	; select bank2
 11324  0CA9  0822               	movf	(?___flsub+2)^(0+256),w
 11325  0CAA  0025               	movlb	5	; select bank5
 11326  0CAB  00EC               	movwf	(ramp_step_function@velocity_ramp+2)^(0+640)
 11327  0CAC  0022               	movlb	2	; select bank2
 11328  0CAD  0821               	movf	(?___flsub+1)^(0+256),w
 11329  0CAE  0025               	movlb	5	; select bank5
 11330  0CAF  00EB               	movwf	(ramp_step_function@velocity_ramp+1)^(0+640)
 11331  0CB0  0022               	movlb	2	; select bank2
 11332  0CB1  0820               	movf	?___flsub^(0+256),w
 11333  0CB2  0025               	movlb	5	; select bank5
 11334  0CB3  00EA               	movwf	ramp_step_function@velocity_ramp^(0+640)
 11335  0CB4                     l1494:
 11336                           
 11337                           ;main.c: 187:         if(radius != 0) {
 11338  0CB4  0022               	movlb	2	; select bank2
 11339  0CB5  083F               	movf	(ramp_step_function@radius+3)^(0+256),w
 11340  0CB6  0021               	movlb	1	; select bank1
 11341  0CB7  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 11342  0CB8  0022               	movlb	2	; select bank2
 11343  0CB9  083E               	movf	(ramp_step_function@radius+2)^(0+256),w
 11344  0CBA  0021               	movlb	1	; select bank1
 11345  0CBB  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 11346  0CBC  0022               	movlb	2	; select bank2
 11347  0CBD  083D               	movf	(ramp_step_function@radius+1)^(0+256),w
 11348  0CBE  0021               	movlb	1	; select bank1
 11349  0CBF  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 11350  0CC0  0022               	movlb	2	; select bank2
 11351  0CC1  083C               	movf	ramp_step_function@radius^(0+256),w
 11352  0CC2  0021               	movlb	1	; select bank1
 11353  0CC3  00A0               	movwf	___fleq@ff1^(0+128)
 11354  0CC4  3000               	movlw	0
 11355  0CC5  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 11356  0CC6  3000               	movlw	0
 11357  0CC7  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 11358  0CC8  3000               	movlw	0
 11359  0CC9  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 11360  0CCA  3000               	movlw	0
 11361  0CCB  00A4               	movwf	___fleq@ff2^(0+128)
 11362  0CCC  3188  2000  318B   	fcall	___fleq
 11363  0CCF  1803               	btfsc	3,0
 11364  0CD0  2CD2               	goto	u9111
 11365  0CD1  2CD3               	goto	u9110
 11366  0CD2                     u9111:
 11367  0CD2  2D06               	goto	l1497
 11368  0CD3                     u9110:
 11369  0CD3                     l8797:
 11370                           
 11371                           ;main.c: 188:             omega_ramp = velocity_ramp/radius;
 11372  0CD3  0022               	movlb	2	; select bank2
 11373  0CD4  083F               	movf	(ramp_step_function@radius+3)^(0+256),w
 11374  0CD5  0021               	movlb	1	; select bank1
 11375  0CD6  00BD               	movwf	(___fldiv@a+3)^(0+128)
 11376  0CD7  0022               	movlb	2	; select bank2
 11377  0CD8  083E               	movf	(ramp_step_function@radius+2)^(0+256),w
 11378  0CD9  0021               	movlb	1	; select bank1
 11379  0CDA  00BC               	movwf	(___fldiv@a+2)^(0+128)
 11380  0CDB  0022               	movlb	2	; select bank2
 11381  0CDC  083D               	movf	(ramp_step_function@radius+1)^(0+256),w
 11382  0CDD  0021               	movlb	1	; select bank1
 11383  0CDE  00BB               	movwf	(___fldiv@a+1)^(0+128)
 11384  0CDF  0022               	movlb	2	; select bank2
 11385  0CE0  083C               	movf	ramp_step_function@radius^(0+256),w
 11386  0CE1  0021               	movlb	1	; select bank1
 11387  0CE2  00BA               	movwf	___fldiv@a^(0+128)
 11388  0CE3  0025               	movlb	5	; select bank5
 11389  0CE4  086D               	movf	(ramp_step_function@velocity_ramp+3)^(0+640),w
 11390  0CE5  0021               	movlb	1	; select bank1
 11391  0CE6  00C1               	movwf	(___fldiv@b+3)^(0+128)
 11392  0CE7  0025               	movlb	5	; select bank5
 11393  0CE8  086C               	movf	(ramp_step_function@velocity_ramp+2)^(0+640),w
 11394  0CE9  0021               	movlb	1	; select bank1
 11395  0CEA  00C0               	movwf	(___fldiv@b+2)^(0+128)
 11396  0CEB  0025               	movlb	5	; select bank5
 11397  0CEC  086B               	movf	(ramp_step_function@velocity_ramp+1)^(0+640),w
 11398  0CED  0021               	movlb	1	; select bank1
 11399  0CEE  00BF               	movwf	(___fldiv@b+1)^(0+128)
 11400  0CEF  0025               	movlb	5	; select bank5
 11401  0CF0  086A               	movf	ramp_step_function@velocity_ramp^(0+640),w
 11402  0CF1  0021               	movlb	1	; select bank1
 11403  0CF2  00BE               	movwf	___fldiv@b^(0+128)
 11404  0CF3  3190  2074  318B   	fcall	___fldiv
 11405  0CF6  0021               	movlb	1	; select bank1
 11406  0CF7  083D               	movf	(?___fldiv+3)^(0+128),w
 11407  0CF8  0025               	movlb	5	; select bank5
 11408  0CF9  00E7               	movwf	(ramp_step_function@omega_ramp+3)^(0+640)
 11409  0CFA  0021               	movlb	1	; select bank1
 11410  0CFB  083C               	movf	(?___fldiv+2)^(0+128),w
 11411  0CFC  0025               	movlb	5	; select bank5
 11412  0CFD  00E6               	movwf	(ramp_step_function@omega_ramp+2)^(0+640)
 11413  0CFE  0021               	movlb	1	; select bank1
 11414  0CFF  083B               	movf	(?___fldiv+1)^(0+128),w
 11415  0D00  0025               	movlb	5	; select bank5
 11416  0D01  00E5               	movwf	(ramp_step_function@omega_ramp+1)^(0+640)
 11417  0D02  0021               	movlb	1	; select bank1
 11418  0D03  083A               	movf	?___fldiv^(0+128),w
 11419  0D04  0025               	movlb	5	; select bank5
 11420  0D05  00E4               	movwf	ramp_step_function@omega_ramp^(0+640)
 11421  0D06                     l1497:	
 11422                           ;main.c: 189:         }
 11423                           
 11424                           
 11425                           ;main.c: 190:         KE(omega_ramp,velocity_ramp);
 11426  0D06  0025               	movlb	5	; select bank5
 11427  0D07  0867               	movf	(ramp_step_function@omega_ramp+3)^(0+640),w
 11428  0D08  0022               	movlb	2	; select bank2
 11429  0D09  00AB               	movwf	(KE@Omega_body+3)^(0+256)
 11430  0D0A  0025               	movlb	5	; select bank5
 11431  0D0B  0866               	movf	(ramp_step_function@omega_ramp+2)^(0+640),w
 11432  0D0C  0022               	movlb	2	; select bank2
 11433  0D0D  00AA               	movwf	(KE@Omega_body+2)^(0+256)
 11434  0D0E  0025               	movlb	5	; select bank5
 11435  0D0F  0865               	movf	(ramp_step_function@omega_ramp+1)^(0+640),w
 11436  0D10  0022               	movlb	2	; select bank2
 11437  0D11  00A9               	movwf	(KE@Omega_body+1)^(0+256)
 11438  0D12  0025               	movlb	5	; select bank5
 11439  0D13  0864               	movf	ramp_step_function@omega_ramp^(0+640),w
 11440  0D14  0022               	movlb	2	; select bank2
 11441  0D15  00A8               	movwf	KE@Omega_body^(0+256)
 11442  0D16  0025               	movlb	5	; select bank5
 11443  0D17  086D               	movf	(ramp_step_function@velocity_ramp+3)^(0+640),w
 11444  0D18  0022               	movlb	2	; select bank2
 11445  0D19  00AF               	movwf	(KE@Velocity_body+3)^(0+256)
 11446  0D1A  0025               	movlb	5	; select bank5
 11447  0D1B  086C               	movf	(ramp_step_function@velocity_ramp+2)^(0+640),w
 11448  0D1C  0022               	movlb	2	; select bank2
 11449  0D1D  00AE               	movwf	(KE@Velocity_body+2)^(0+256)
 11450  0D1E  0025               	movlb	5	; select bank5
 11451  0D1F  086B               	movf	(ramp_step_function@velocity_ramp+1)^(0+640),w
 11452  0D20  0022               	movlb	2	; select bank2
 11453  0D21  00AD               	movwf	(KE@Velocity_body+1)^(0+256)
 11454  0D22  0025               	movlb	5	; select bank5
 11455  0D23  086A               	movf	ramp_step_function@velocity_ramp^(0+640),w
 11456  0D24  0022               	movlb	2	; select bank2
 11457  0D25  00AC               	movwf	KE@Velocity_body^(0+256)
 11458  0D26  3193  23E4  318B   	fcall	_KE
 11459  0D29                     l8799:
 11460                           
 11461                           ;main.c: 191:     }
 11462  0D29  3001               	movlw	1
 11463  0D2A  0025               	movlb	5	; select bank5
 11464  0D2B  07E8               	addwf	ramp_step_function@i^(0+640),f
 11465  0D2C  3000               	movlw	0
 11466  0D2D  3DE9               	addwfc	(ramp_step_function@i+1)^(0+640),f
 11467  0D2E                     l8801:
 11468  0D2E  0868               	movf	ramp_step_function@i^(0+640),w
 11469  0D2F  0020               	movlb	0	; select bank0
 11470  0D30  00C3               	movwf	___xxtofl@val
 11471  0D31  0025               	movlb	5	; select bank5
 11472  0D32  0869               	movf	(ramp_step_function@i+1)^(0+640),w
 11473  0D33  0020               	movlb	0	; select bank0
 11474  0D34  00C4               	movwf	___xxtofl@val+1
 11475  0D35  0D89               	rlf	9,f
 11476  0D36  3B89               	subwfb	9,f
 11477  0D37  0989               	comf	9,f
 11478  0D38  00C5               	movwf	___xxtofl@val+2
 11479  0D39  00C6               	movwf	___xxtofl@val+3
 11480  0D3A  3001               	movlw	1
 11481  0D3B  319A  225D  318B   	fcall	___xxtofl
 11482  0D3E  0020               	movlb	0	; select bank0
 11483  0D3F  0846               	movf	?___xxtofl+3,w
 11484  0D40  0021               	movlb	1	; select bank1
 11485  0D41  00BD               	movwf	(___flge@ff1+3)^(0+128)
 11486  0D42  0020               	movlb	0	; select bank0
 11487  0D43  0845               	movf	?___xxtofl+2,w
 11488  0D44  0021               	movlb	1	; select bank1
 11489  0D45  00BC               	movwf	(___flge@ff1+2)^(0+128)
 11490  0D46  0020               	movlb	0	; select bank0
 11491  0D47  0844               	movf	?___xxtofl+1,w
 11492  0D48  0021               	movlb	1	; select bank1
 11493  0D49  00BB               	movwf	(___flge@ff1+1)^(0+128)
 11494  0D4A  0020               	movlb	0	; select bank0
 11495  0D4B  0843               	movf	?___xxtofl,w
 11496  0D4C  0021               	movlb	1	; select bank1
 11497  0D4D  00BA               	movwf	___flge@ff1^(0+128)
 11498  0D4E  0022               	movlb	2	; select bank2
 11499  0D4F  0843               	movf	(ramp_step_function@total_time+3)^(0+256),w
 11500  0D50  0021               	movlb	1	; select bank1
 11501  0D51  00A7               	movwf	(___flmul@a+3)^(0+128)
 11502  0D52  0022               	movlb	2	; select bank2
 11503  0D53  0842               	movf	(ramp_step_function@total_time+2)^(0+256),w
 11504  0D54  0021               	movlb	1	; select bank1
 11505  0D55  00A6               	movwf	(___flmul@a+2)^(0+128)
 11506  0D56  0022               	movlb	2	; select bank2
 11507  0D57  0841               	movf	(ramp_step_function@total_time+1)^(0+256),w
 11508  0D58  0021               	movlb	1	; select bank1
 11509  0D59  00A5               	movwf	(___flmul@a+1)^(0+128)
 11510  0D5A  0022               	movlb	2	; select bank2
 11511  0D5B  0840               	movf	ramp_step_function@total_time^(0+256),w
 11512  0D5C  0021               	movlb	1	; select bank1
 11513  0D5D  00A4               	movwf	___flmul@a^(0+128)
 11514  0D5E  303E               	movlw	62
 11515  0D5F  00A3               	movwf	(___flmul@b+3)^(0+128)
 11516  0D60  304C               	movlw	76
 11517  0D61  00A2               	movwf	(___flmul@b+2)^(0+128)
 11518  0D62  30CC               	movlw	204
 11519  0D63  00A1               	movwf	(___flmul@b+1)^(0+128)
 11520  0D64  30CD               	movlw	205
 11521  0D65  00A0               	movwf	___flmul@b^(0+128)
 11522  0D66  318D  257C  318B   	fcall	___flmul
 11523  0D69  0021               	movlb	1	; select bank1
 11524  0D6A  0823               	movf	(?___flmul+3)^(0+128),w
 11525  0D6B  00C1               	movwf	(___flge@ff2+3)^(0+128)
 11526  0D6C  0822               	movf	(?___flmul+2)^(0+128),w
 11527  0D6D  00C0               	movwf	(___flge@ff2+2)^(0+128)
 11528  0D6E  0821               	movf	(?___flmul+1)^(0+128),w
 11529  0D6F  00BF               	movwf	(___flge@ff2+1)^(0+128)
 11530  0D70  0820               	movf	?___flmul^(0+128),w
 11531  0D71  00BE               	movwf	___flge@ff2^(0+128)
 11532  0D72  3199  2126  318B   	fcall	___flge
 11533  0D75  1C03               	btfss	3,0
 11534  0D76  2D78               	goto	u9121
 11535  0D77  2D79               	goto	u9120
 11536  0D78                     u9121:
 11537  0D78  2B53               	goto	l8779
 11538  0D79                     u9120:
 11539  0D79                     l8803:
 11540                           
 11541                           ;main.c: 192:     in_ramp = 0;
 11542  0D79  0022               	movlb	2	; select bank2
 11543  0D7A  01EA               	clrf	_in_ramp^(0+256)
 11544  0D7B                     l1499:
 11545  0D7B  0008               	return
 11546  0D7C                     __end_of_ramp_step_function:
 11547                           
 11548                           	psect	text36
 11549  1A5D                     __ptext36:	
 11550 ;; *************** function ___xxtofl *****************
 11551 ;; Defined at:
 11552 ;;		line 10 in file "D:\MPLAB XC8\pic\sources\c99\common\xxtofl.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  sign            1    wreg     unsigned char 
 11555 ;;  val             4   35[BANK0 ] long 
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;  sign            1   43[BANK0 ] unsigned char 
 11558 ;;  arg             4   45[BANK0 ] unsigned long 
 11559 ;;  exp             1   44[BANK0 ] unsigned char 
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  4   35[BANK0 ] unsigned char 
 11562 ;; Registers used:
 11563 ;;		wreg, status,2, status,0
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11570 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;Total ram usage:       14 bytes
 11574 ;; Hardware stack levels used: 1
 11575 ;; Hardware stack levels required when called: 5
 11576 ;; This function calls:
 11577 ;;		Nothing
 11578 ;; This function is called by:
 11579 ;;		_ramp_step_function
 11580 ;;		_ManualHandle
 11581 ;;		_AutoCircleHandle
 11582 ;;		_AutoCircleControl
 11583 ;;		_AutoLineHandle
 11584 ;;		_AutoLineControl
 11585 ;;		_TimeLapseHandle
 11586 ;;		_TimeLapseControl
 11587 ;;		_distance_sensor_bottom
 11588 ;;		_distance_sensor_top
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           
 11593                           ;psect for function ___xxtofl
 11594  1A5D                     ___xxtofl:
 11595                           
 11596                           ;incstack = 0
 11597                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11598                           ;___xxtofl@sign stored from wreg
 11599  1A5D  0020               	movlb	0	; select bank0
 11600  1A5E  00CB               	movwf	___xxtofl@sign
 11601  1A5F                     l8715:
 11602  1A5F  084B               	movf	___xxtofl@sign,w
 11603  1A60  1903               	btfsc	3,2
 11604  1A61  2A63               	goto	u8871
 11605  1A62  2A64               	goto	u8870
 11606  1A63                     u8871:
 11607  1A63  2A78               	goto	l8721
 11608  1A64                     u8870:
 11609  1A64                     l8717:
 11610  1A64  1FC6               	btfss	___xxtofl@val+3,7
 11611  1A65  2A67               	goto	u8881
 11612  1A66  2A68               	goto	u8880
 11613  1A67                     u8881:
 11614  1A67  2A78               	goto	l8721
 11615  1A68                     u8880:
 11616  1A68                     l8719:
 11617  1A68  0943               	comf	___xxtofl@val,w
 11618  1A69  00CD               	movwf	___xxtofl@arg
 11619  1A6A  0944               	comf	___xxtofl@val+1,w
 11620  1A6B  00CE               	movwf	___xxtofl@arg+1
 11621  1A6C  0945               	comf	___xxtofl@val+2,w
 11622  1A6D  00CF               	movwf	___xxtofl@arg+2
 11623  1A6E  0946               	comf	___xxtofl@val+3,w
 11624  1A6F  00D0               	movwf	___xxtofl@arg+3
 11625  1A70  0ACD               	incf	___xxtofl@arg,f
 11626  1A71  1903               	skipnz
 11627  1A72  0ACE               	incf	___xxtofl@arg+1,f
 11628  1A73  1903               	skipnz
 11629  1A74  0ACF               	incf	___xxtofl@arg+2,f
 11630  1A75  1903               	skipnz
 11631  1A76  0AD0               	incf	___xxtofl@arg+3,f
 11632  1A77  2A80               	goto	l2286
 11633  1A78                     l8721:
 11634  1A78  0846               	movf	___xxtofl@val+3,w
 11635  1A79  00D0               	movwf	___xxtofl@arg+3
 11636  1A7A  0845               	movf	___xxtofl@val+2,w
 11637  1A7B  00CF               	movwf	___xxtofl@arg+2
 11638  1A7C  0844               	movf	___xxtofl@val+1,w
 11639  1A7D  00CE               	movwf	___xxtofl@arg+1
 11640  1A7E  0843               	movf	___xxtofl@val,w
 11641  1A7F  00CD               	movwf	___xxtofl@arg
 11642  1A80                     l2286:
 11643  1A80  0846               	movf	___xxtofl@val+3,w
 11644  1A81  0445               	iorwf	___xxtofl@val+2,w
 11645  1A82  0444               	iorwf	___xxtofl@val+1,w
 11646  1A83  0443               	iorwf	___xxtofl@val,w
 11647  1A84  1D03               	skipz
 11648  1A85  2A87               	goto	u8891
 11649  1A86  2A88               	goto	u8890
 11650  1A87                     u8891:
 11651  1A87  2A91               	goto	l8727
 11652  1A88                     u8890:
 11653  1A88                     l8723:
 11654  1A88  3000               	movlw	0
 11655  1A89  00C6               	movwf	?___xxtofl+3
 11656  1A8A  3000               	movlw	0
 11657  1A8B  00C5               	movwf	?___xxtofl+2
 11658  1A8C  3000               	movlw	0
 11659  1A8D  00C4               	movwf	?___xxtofl+1
 11660  1A8E  3000               	movlw	0
 11661  1A8F  00C3               	movwf	?___xxtofl
 11662  1A90  2B09               	goto	l2288
 11663  1A91                     l8727:
 11664  1A91  3096               	movlw	150
 11665  1A92  00C7               	movwf	??___xxtofl
 11666  1A93  0847               	movf	??___xxtofl,w
 11667  1A94  00CC               	movwf	___xxtofl@exp
 11668  1A95  2AA1               	goto	l8731
 11669  1A96                     l8729:
 11670  1A96  3001               	movlw	1
 11671  1A97  00C7               	movwf	??___xxtofl
 11672  1A98  0847               	movf	??___xxtofl,w
 11673  1A99  07CC               	addwf	___xxtofl@exp,f
 11674  1A9A  3001               	movlw	1
 11675  1A9B                     u8905:
 11676  1A9B  36D0               	lsrf	___xxtofl@arg+3,f
 11677  1A9C  0CCF               	rrf	___xxtofl@arg+2,f
 11678  1A9D  0CCE               	rrf	___xxtofl@arg+1,f
 11679  1A9E  0CCD               	rrf	___xxtofl@arg,f
 11680  1A9F  0B89               	decfsz	9,f
 11681  1AA0  2A9B               	goto	u8905
 11682  1AA1                     l8731:
 11683  1AA1  30FE               	movlw	254
 11684  1AA2  0550               	andwf	___xxtofl@arg+3,w
 11685  1AA3  1D03               	btfss	3,2
 11686  1AA4  2AA6               	goto	u8911
 11687  1AA5  2AA7               	goto	u8910
 11688  1AA6                     u8911:
 11689  1AA6  2A96               	goto	l8729
 11690  1AA7                     u8910:
 11691  1AA7  2ABB               	goto	l2292
 11692  1AA8                     l8733:
 11693  1AA8  3001               	movlw	1
 11694  1AA9  00C7               	movwf	??___xxtofl
 11695  1AAA  0847               	movf	??___xxtofl,w
 11696  1AAB  07CC               	addwf	___xxtofl@exp,f
 11697  1AAC                     l8735:
 11698  1AAC  3001               	movlw	1
 11699  1AAD  07CD               	addwf	___xxtofl@arg,f
 11700  1AAE  3000               	movlw	0
 11701  1AAF  3DCE               	addwfc	___xxtofl@arg+1,f
 11702  1AB0  3000               	movlw	0
 11703  1AB1  3DCF               	addwfc	___xxtofl@arg+2,f
 11704  1AB2  3000               	movlw	0
 11705  1AB3  3DD0               	addwfc	___xxtofl@arg+3,f
 11706  1AB4                     l8737:
 11707  1AB4  3001               	movlw	1
 11708  1AB5                     u8925:
 11709  1AB5  36D0               	lsrf	___xxtofl@arg+3,f
 11710  1AB6  0CCF               	rrf	___xxtofl@arg+2,f
 11711  1AB7  0CCE               	rrf	___xxtofl@arg+1,f
 11712  1AB8  0CCD               	rrf	___xxtofl@arg,f
 11713  1AB9  0B89               	decfsz	9,f
 11714  1ABA  2AB5               	goto	u8925
 11715  1ABB                     l2292:
 11716  1ABB  30FF               	movlw	255
 11717  1ABC  0550               	andwf	___xxtofl@arg+3,w
 11718  1ABD  1D03               	btfss	3,2
 11719  1ABE  2AC0               	goto	u8931
 11720  1ABF  2AC1               	goto	u8930
 11721  1AC0                     u8931:
 11722  1AC0  2AA8               	goto	l8733
 11723  1AC1                     u8930:
 11724  1AC1  2ACB               	goto	l8741
 11725  1AC2                     l8739:
 11726  1AC2  3001               	movlw	1
 11727  1AC3  02CC               	subwf	___xxtofl@exp,f
 11728  1AC4  3001               	movlw	1
 11729  1AC5                     u8945:
 11730  1AC5  35CD               	lslf	___xxtofl@arg,f
 11731  1AC6  0DCE               	rlf	___xxtofl@arg+1,f
 11732  1AC7  0DCF               	rlf	___xxtofl@arg+2,f
 11733  1AC8  0DD0               	rlf	___xxtofl@arg+3,f
 11734  1AC9  0B89               	decfsz	9,f
 11735  1ACA  2AC5               	goto	u8945
 11736  1ACB                     l8741:
 11737  1ACB  1BCF               	btfsc	___xxtofl@arg+2,7
 11738  1ACC  2ACE               	goto	u8951
 11739  1ACD  2ACF               	goto	u8950
 11740  1ACE                     u8951:
 11741  1ACE  2AD5               	goto	l2299
 11742  1ACF                     u8950:
 11743  1ACF                     l8743:
 11744  1ACF  3002               	movlw	2
 11745  1AD0  024C               	subwf	___xxtofl@exp,w
 11746  1AD1  1803               	skipnc
 11747  1AD2  2AD4               	goto	u8961
 11748  1AD3  2AD5               	goto	u8960
 11749  1AD4                     u8961:
 11750  1AD4  2AC2               	goto	l8739
 11751  1AD5                     u8960:
 11752  1AD5                     l2299:
 11753  1AD5  184C               	btfsc	___xxtofl@exp,0
 11754  1AD6  2AD8               	goto	u8971
 11755  1AD7  2AD9               	goto	u8970
 11756  1AD8                     u8971:
 11757  1AD8  2AE1               	goto	l2300
 11758  1AD9                     u8970:
 11759  1AD9                     l8745:
 11760  1AD9  30FF               	movlw	255
 11761  1ADA  05CD               	andwf	___xxtofl@arg,f
 11762  1ADB  30FF               	movlw	255
 11763  1ADC  05CE               	andwf	___xxtofl@arg+1,f
 11764  1ADD  307F               	movlw	127
 11765  1ADE  05CF               	andwf	___xxtofl@arg+2,f
 11766  1ADF  30FF               	movlw	255
 11767  1AE0  05D0               	andwf	___xxtofl@arg+3,f
 11768  1AE1                     l2300:
 11769  1AE1  1003               	clrc
 11770  1AE2  0CCC               	rrf	___xxtofl@exp,f
 11771  1AE3                     l8747:
 11772  1AE3  084C               	movf	___xxtofl@exp,w
 11773  1AE4  00C7               	movwf	??___xxtofl
 11774  1AE5  01C8               	clrf	??___xxtofl+1
 11775  1AE6  01C9               	clrf	??___xxtofl+2
 11776  1AE7  01CA               	clrf	??___xxtofl+3
 11777  1AE8  3018               	movlw	24
 11778  1AE9                     u8985:
 11779  1AE9  35C7               	lslf	??___xxtofl,f
 11780  1AEA  0DC8               	rlf	??___xxtofl+1,f
 11781  1AEB  0DC9               	rlf	??___xxtofl+2,f
 11782  1AEC  0DCA               	rlf	??___xxtofl+3,f
 11783  1AED                     u8980:
 11784  1AED  0B89               	decfsz	9,f
 11785  1AEE  2AE9               	goto	u8985
 11786  1AEF  0847               	movf	??___xxtofl,w
 11787  1AF0  04CD               	iorwf	___xxtofl@arg,f
 11788  1AF1  0848               	movf	??___xxtofl+1,w
 11789  1AF2  04CE               	iorwf	___xxtofl@arg+1,f
 11790  1AF3  0849               	movf	??___xxtofl+2,w
 11791  1AF4  04CF               	iorwf	___xxtofl@arg+2,f
 11792  1AF5  084A               	movf	??___xxtofl+3,w
 11793  1AF6  04D0               	iorwf	___xxtofl@arg+3,f
 11794  1AF7                     l8749:
 11795  1AF7  084B               	movf	___xxtofl@sign,w
 11796  1AF8  1903               	btfsc	3,2
 11797  1AF9  2AFB               	goto	u8991
 11798  1AFA  2AFC               	goto	u8990
 11799  1AFB                     u8991:
 11800  1AFB  2B01               	goto	l8755
 11801  1AFC                     u8990:
 11802  1AFC                     l8751:
 11803  1AFC  1FC6               	btfss	___xxtofl@val+3,7
 11804  1AFD  2AFF               	goto	u9001
 11805  1AFE  2B00               	goto	u9000
 11806  1AFF                     u9001:
 11807  1AFF  2B01               	goto	l8755
 11808  1B00                     u9000:
 11809  1B00                     l8753:
 11810  1B00  17D0               	bsf	___xxtofl@arg+3,7
 11811  1B01                     l8755:
 11812  1B01  0850               	movf	___xxtofl@arg+3,w
 11813  1B02  00C6               	movwf	?___xxtofl+3
 11814  1B03  084F               	movf	___xxtofl@arg+2,w
 11815  1B04  00C5               	movwf	?___xxtofl+2
 11816  1B05  084E               	movf	___xxtofl@arg+1,w
 11817  1B06  00C4               	movwf	?___xxtofl+1
 11818  1B07  084D               	movf	___xxtofl@arg,w
 11819  1B08  00C3               	movwf	?___xxtofl
 11820  1B09                     l2288:
 11821  1B09  0008               	return
 11822  1B0A                     __end_of___xxtofl:
 11823                           
 11824                           	psect	text37
 11825  13E4                     __ptext37:	
 11826 ;; *************** function _KE *****************
 11827 ;; Defined at:
 11828 ;;		line 148 in file "main.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  Omega_body      4    8[BANK2 ] float 
 11831 ;;  Velocity_bod    4   12[BANK2 ] float 
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  OmegaRight      4   20[BANK2 ] float 
 11834 ;;  OmegaLeft       4   16[BANK2 ] float 
 11835 ;; Return value:  Size  Location     Type
 11836 ;;                  1    wreg      void 
 11837 ;; Registers used:
 11838 ;;		wreg, status,2, status,0, pclath, cstack
 11839 ;; Tracked objects:
 11840 ;;		On entry : 0/0
 11841 ;;		On exit  : 0/0
 11842 ;;		Unchanged: 0/0
 11843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11844 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11845 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Totals:         0       0       2      16       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;Total ram usage:       18 bytes
 11849 ;; Hardware stack levels used: 1
 11850 ;; Hardware stack levels required when called: 7
 11851 ;; This function calls:
 11852 ;;		___fladd
 11853 ;;		___fldiv
 11854 ;;		___fleq
 11855 ;;		___flge
 11856 ;;		___flmul
 11857 ;;		___flneg
 11858 ;;		___flsub
 11859 ;;		___fltol
 11860 ;; This function is called by:
 11861 ;;		_ramp_step_function
 11862 ;;		_AutoLineControl
 11863 ;;		_main
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           
 11868                           ;psect for function _KE
 11869  13E4                     _KE:
 11870  13E4                     l8673:	
 11871                           ;incstack = 0
 11872                           ; Regs used in _KE: [wreg+status,2+status,0+pclath+cstack]
 11873                           
 11874                           
 11875                           ;main.c: 150:     float OmegaRight = 0;
 11876  13E4  3000               	movlw	0
 11877  13E5  0022               	movlb	2	; select bank2
 11878  13E6  00B7               	movwf	(KE@OmegaRight+3)^(0+256)
 11879  13E7  3000               	movlw	0
 11880  13E8  00B6               	movwf	(KE@OmegaRight+2)^(0+256)
 11881  13E9  3000               	movlw	0
 11882  13EA  00B5               	movwf	(KE@OmegaRight+1)^(0+256)
 11883  13EB  3000               	movlw	0
 11884  13EC  00B4               	movwf	KE@OmegaRight^(0+256)
 11885  13ED                     l8675:
 11886                           
 11887                           ;main.c: 152:     OmegaLeft = Velocity_body/32 + Omega_body*(69.5/32);
 11888  13ED  3040               	movlw	64
 11889  13EE  0021               	movlb	1	; select bank1
 11890  13EF  00A3               	movwf	(___flmul@b+3)^(0+128)
 11891  13F0  300B               	movlw	11
 11892  13F1  00A2               	movwf	(___flmul@b+2)^(0+128)
 11893  13F2  3000               	movlw	0
 11894  13F3  00A1               	movwf	(___flmul@b+1)^(0+128)
 11895  13F4  3000               	movlw	0
 11896  13F5  00A0               	movwf	___flmul@b^(0+128)
 11897  13F6  0022               	movlb	2	; select bank2
 11898  13F7  082B               	movf	(KE@Omega_body+3)^(0+256),w
 11899  13F8  0021               	movlb	1	; select bank1
 11900  13F9  00A7               	movwf	(___flmul@a+3)^(0+128)
 11901  13FA  0022               	movlb	2	; select bank2
 11902  13FB  082A               	movf	(KE@Omega_body+2)^(0+256),w
 11903  13FC  0021               	movlb	1	; select bank1
 11904  13FD  00A6               	movwf	(___flmul@a+2)^(0+128)
 11905  13FE  0022               	movlb	2	; select bank2
 11906  13FF  0829               	movf	(KE@Omega_body+1)^(0+256),w
 11907  1400  0021               	movlb	1	; select bank1
 11908  1401  00A5               	movwf	(___flmul@a+1)^(0+128)
 11909  1402  0022               	movlb	2	; select bank2
 11910  1403  0828               	movf	KE@Omega_body^(0+256),w
 11911  1404  0021               	movlb	1	; select bank1
 11912  1405  00A4               	movwf	___flmul@a^(0+128)
 11913  1406  318D  257C  3193   	fcall	___flmul
 11914  1409  0021               	movlb	1	; select bank1
 11915  140A  0823               	movf	(?___flmul+3)^(0+128),w
 11916  140B  00D7               	movwf	(___fladd@b+3)^(0+128)
 11917  140C  0822               	movf	(?___flmul+2)^(0+128),w
 11918  140D  00D6               	movwf	(___fladd@b+2)^(0+128)
 11919  140E  0821               	movf	(?___flmul+1)^(0+128),w
 11920  140F  00D5               	movwf	(___fladd@b+1)^(0+128)
 11921  1410  0820               	movf	?___flmul^(0+128),w
 11922  1411  00D4               	movwf	___fladd@b^(0+128)
 11923  1412  3042               	movlw	66
 11924  1413  00BD               	movwf	(___fldiv@a+3)^(0+128)
 11925  1414  3000               	movlw	0
 11926  1415  00BC               	movwf	(___fldiv@a+2)^(0+128)
 11927  1416  3000               	movlw	0
 11928  1417  00BB               	movwf	(___fldiv@a+1)^(0+128)
 11929  1418  3000               	movlw	0
 11930  1419  00BA               	movwf	___fldiv@a^(0+128)
 11931  141A  0022               	movlb	2	; select bank2
 11932  141B  082F               	movf	(KE@Velocity_body+3)^(0+256),w
 11933  141C  0021               	movlb	1	; select bank1
 11934  141D  00C1               	movwf	(___fldiv@b+3)^(0+128)
 11935  141E  0022               	movlb	2	; select bank2
 11936  141F  082E               	movf	(KE@Velocity_body+2)^(0+256),w
 11937  1420  0021               	movlb	1	; select bank1
 11938  1421  00C0               	movwf	(___fldiv@b+2)^(0+128)
 11939  1422  0022               	movlb	2	; select bank2
 11940  1423  082D               	movf	(KE@Velocity_body+1)^(0+256),w
 11941  1424  0021               	movlb	1	; select bank1
 11942  1425  00BF               	movwf	(___fldiv@b+1)^(0+128)
 11943  1426  0022               	movlb	2	; select bank2
 11944  1427  082C               	movf	KE@Velocity_body^(0+256),w
 11945  1428  0021               	movlb	1	; select bank1
 11946  1429  00BE               	movwf	___fldiv@b^(0+128)
 11947  142A  3190  2074  3193   	fcall	___fldiv
 11948  142D  0021               	movlb	1	; select bank1
 11949  142E  083D               	movf	(?___fldiv+3)^(0+128),w
 11950  142F  00DB               	movwf	(___fladd@a+3)^(0+128)
 11951  1430  083C               	movf	(?___fldiv+2)^(0+128),w
 11952  1431  00DA               	movwf	(___fladd@a+2)^(0+128)
 11953  1432  083B               	movf	(?___fldiv+1)^(0+128),w
 11954  1433  00D9               	movwf	(___fladd@a+1)^(0+128)
 11955  1434  083A               	movf	?___fldiv^(0+128),w
 11956  1435  00D8               	movwf	___fladd@a^(0+128)
 11957  1436  3188  20FF  3193   	fcall	___fladd
 11958  1439  0021               	movlb	1	; select bank1
 11959  143A  0857               	movf	(?___fladd+3)^(0+128),w
 11960  143B  0022               	movlb	2	; select bank2
 11961  143C  00B3               	movwf	(KE@OmegaLeft+3)^(0+256)
 11962  143D  0021               	movlb	1	; select bank1
 11963  143E  0856               	movf	(?___fladd+2)^(0+128),w
 11964  143F  0022               	movlb	2	; select bank2
 11965  1440  00B2               	movwf	(KE@OmegaLeft+2)^(0+256)
 11966  1441  0021               	movlb	1	; select bank1
 11967  1442  0855               	movf	(?___fladd+1)^(0+128),w
 11968  1443  0022               	movlb	2	; select bank2
 11969  1444  00B1               	movwf	(KE@OmegaLeft+1)^(0+256)
 11970  1445  0021               	movlb	1	; select bank1
 11971  1446  0854               	movf	?___fladd^(0+128),w
 11972  1447  0022               	movlb	2	; select bank2
 11973  1448  00B0               	movwf	KE@OmegaLeft^(0+256)
 11974  1449                     l8677:
 11975                           
 11976                           ;main.c: 153:     OmegaRight = Velocity_body/32 - Omega_body*(69.5/32);
 11977  1449  3040               	movlw	64
 11978  144A  0021               	movlb	1	; select bank1
 11979  144B  00A3               	movwf	(___flmul@b+3)^(0+128)
 11980  144C  300B               	movlw	11
 11981  144D  00A2               	movwf	(___flmul@b+2)^(0+128)
 11982  144E  3000               	movlw	0
 11983  144F  00A1               	movwf	(___flmul@b+1)^(0+128)
 11984  1450  3000               	movlw	0
 11985  1451  00A0               	movwf	___flmul@b^(0+128)
 11986  1452  0022               	movlb	2	; select bank2
 11987  1453  082B               	movf	(KE@Omega_body+3)^(0+256),w
 11988  1454  0021               	movlb	1	; select bank1
 11989  1455  00A7               	movwf	(___flmul@a+3)^(0+128)
 11990  1456  0022               	movlb	2	; select bank2
 11991  1457  082A               	movf	(KE@Omega_body+2)^(0+256),w
 11992  1458  0021               	movlb	1	; select bank1
 11993  1459  00A6               	movwf	(___flmul@a+2)^(0+128)
 11994  145A  0022               	movlb	2	; select bank2
 11995  145B  0829               	movf	(KE@Omega_body+1)^(0+256),w
 11996  145C  0021               	movlb	1	; select bank1
 11997  145D  00A5               	movwf	(___flmul@a+1)^(0+128)
 11998  145E  0022               	movlb	2	; select bank2
 11999  145F  0828               	movf	KE@Omega_body^(0+256),w
 12000  1460  0021               	movlb	1	; select bank1
 12001  1461  00A4               	movwf	___flmul@a^(0+128)
 12002  1462  318D  257C  3193   	fcall	___flmul
 12003  1465  0021               	movlb	1	; select bank1
 12004  1466  0823               	movf	(?___flmul+3)^(0+128),w
 12005  1467  0022               	movlb	2	; select bank2
 12006  1468  00A3               	movwf	(___flsub@a+3)^(0+256)
 12007  1469  0021               	movlb	1	; select bank1
 12008  146A  0822               	movf	(?___flmul+2)^(0+128),w
 12009  146B  0022               	movlb	2	; select bank2
 12010  146C  00A2               	movwf	(___flsub@a+2)^(0+256)
 12011  146D  0021               	movlb	1	; select bank1
 12012  146E  0821               	movf	(?___flmul+1)^(0+128),w
 12013  146F  0022               	movlb	2	; select bank2
 12014  1470  00A1               	movwf	(___flsub@a+1)^(0+256)
 12015  1471  0021               	movlb	1	; select bank1
 12016  1472  0820               	movf	?___flmul^(0+128),w
 12017  1473  0022               	movlb	2	; select bank2
 12018  1474  00A0               	movwf	___flsub@a^(0+256)
 12019  1475  3042               	movlw	66
 12020  1476  0021               	movlb	1	; select bank1
 12021  1477  00BD               	movwf	(___fldiv@a+3)^(0+128)
 12022  1478  3000               	movlw	0
 12023  1479  00BC               	movwf	(___fldiv@a+2)^(0+128)
 12024  147A  3000               	movlw	0
 12025  147B  00BB               	movwf	(___fldiv@a+1)^(0+128)
 12026  147C  3000               	movlw	0
 12027  147D  00BA               	movwf	___fldiv@a^(0+128)
 12028  147E  0022               	movlb	2	; select bank2
 12029  147F  082F               	movf	(KE@Velocity_body+3)^(0+256),w
 12030  1480  0021               	movlb	1	; select bank1
 12031  1481  00C1               	movwf	(___fldiv@b+3)^(0+128)
 12032  1482  0022               	movlb	2	; select bank2
 12033  1483  082E               	movf	(KE@Velocity_body+2)^(0+256),w
 12034  1484  0021               	movlb	1	; select bank1
 12035  1485  00C0               	movwf	(___fldiv@b+2)^(0+128)
 12036  1486  0022               	movlb	2	; select bank2
 12037  1487  082D               	movf	(KE@Velocity_body+1)^(0+256),w
 12038  1488  0021               	movlb	1	; select bank1
 12039  1489  00BF               	movwf	(___fldiv@b+1)^(0+128)
 12040  148A  0022               	movlb	2	; select bank2
 12041  148B  082C               	movf	KE@Velocity_body^(0+256),w
 12042  148C  0021               	movlb	1	; select bank1
 12043  148D  00BE               	movwf	___fldiv@b^(0+128)
 12044  148E  3190  2074  3193   	fcall	___fldiv
 12045  1491  0021               	movlb	1	; select bank1
 12046  1492  083D               	movf	(?___fldiv+3)^(0+128),w
 12047  1493  0022               	movlb	2	; select bank2
 12048  1494  00A7               	movwf	(___flsub@b+3)^(0+256)
 12049  1495  0021               	movlb	1	; select bank1
 12050  1496  083C               	movf	(?___fldiv+2)^(0+128),w
 12051  1497  0022               	movlb	2	; select bank2
 12052  1498  00A6               	movwf	(___flsub@b+2)^(0+256)
 12053  1499  0021               	movlb	1	; select bank1
 12054  149A  083B               	movf	(?___fldiv+1)^(0+128),w
 12055  149B  0022               	movlb	2	; select bank2
 12056  149C  00A5               	movwf	(___flsub@b+1)^(0+256)
 12057  149D  0021               	movlb	1	; select bank1
 12058  149E  083A               	movf	?___fldiv^(0+128),w
 12059  149F  0022               	movlb	2	; select bank2
 12060  14A0  00A4               	movwf	___flsub@b^(0+256)
 12061  14A1  3190  203E  3193   	fcall	___flsub
 12062  14A4  0022               	movlb	2	; select bank2
 12063  14A5  0823               	movf	(?___flsub+3)^(0+256),w
 12064  14A6  00B7               	movwf	(KE@OmegaRight+3)^(0+256)
 12065  14A7  0822               	movf	(?___flsub+2)^(0+256),w
 12066  14A8  00B6               	movwf	(KE@OmegaRight+2)^(0+256)
 12067  14A9  0821               	movf	(?___flsub+1)^(0+256),w
 12068  14AA  00B5               	movwf	(KE@OmegaRight+1)^(0+256)
 12069  14AB  0820               	movf	?___flsub^(0+256),w
 12070  14AC  00B4               	movwf	KE@OmegaRight^(0+256)
 12071  14AD                     l8679:
 12072                           
 12073                           ;main.c: 158:     if(OmegaLeft < 0){
 12074  14AD  0833               	movf	(KE@OmegaLeft+3)^(0+256),w
 12075  14AE  0021               	movlb	1	; select bank1
 12076  14AF  00BD               	movwf	(___flge@ff1+3)^(0+128)
 12077  14B0  0022               	movlb	2	; select bank2
 12078  14B1  0832               	movf	(KE@OmegaLeft+2)^(0+256),w
 12079  14B2  0021               	movlb	1	; select bank1
 12080  14B3  00BC               	movwf	(___flge@ff1+2)^(0+128)
 12081  14B4  0022               	movlb	2	; select bank2
 12082  14B5  0831               	movf	(KE@OmegaLeft+1)^(0+256),w
 12083  14B6  0021               	movlb	1	; select bank1
 12084  14B7  00BB               	movwf	(___flge@ff1+1)^(0+128)
 12085  14B8  0022               	movlb	2	; select bank2
 12086  14B9  0830               	movf	KE@OmegaLeft^(0+256),w
 12087  14BA  0021               	movlb	1	; select bank1
 12088  14BB  00BA               	movwf	___flge@ff1^(0+128)
 12089  14BC  3000               	movlw	0
 12090  14BD  00C1               	movwf	(___flge@ff2+3)^(0+128)
 12091  14BE  3000               	movlw	0
 12092  14BF  00C0               	movwf	(___flge@ff2+2)^(0+128)
 12093  14C0  3000               	movlw	0
 12094  14C1  00BF               	movwf	(___flge@ff2+1)^(0+128)
 12095  14C2  3000               	movlw	0
 12096  14C3  00BE               	movwf	___flge@ff2^(0+128)
 12097  14C4  3199  2126  3193   	fcall	___flge
 12098  14C7  1803               	btfsc	3,0
 12099  14C8  2CCA               	goto	u8791
 12100  14C9  2CCB               	goto	u8790
 12101  14CA                     u8791:
 12102  14CA  2CF1               	goto	l1479
 12103  14CB                     u8790:
 12104  14CB                     l8681:
 12105                           
 12106                           ;main.c: 159:         OmegaLeft = -OmegaLeft;
 12107  14CB  0022               	movlb	2	; select bank2
 12108  14CC  0833               	movf	(KE@OmegaLeft+3)^(0+256),w
 12109  14CD  0020               	movlb	0	; select bank0
 12110  14CE  00B1               	movwf	___flneg@f1+3
 12111  14CF  0022               	movlb	2	; select bank2
 12112  14D0  0832               	movf	(KE@OmegaLeft+2)^(0+256),w
 12113  14D1  0020               	movlb	0	; select bank0
 12114  14D2  00B0               	movwf	___flneg@f1+2
 12115  14D3  0022               	movlb	2	; select bank2
 12116  14D4  0831               	movf	(KE@OmegaLeft+1)^(0+256),w
 12117  14D5  0020               	movlb	0	; select bank0
 12118  14D6  00AF               	movwf	___flneg@f1+1
 12119  14D7  0022               	movlb	2	; select bank2
 12120  14D8  0830               	movf	KE@OmegaLeft^(0+256),w
 12121  14D9  0020               	movlb	0	; select bank0
 12122  14DA  00AE               	movwf	___flneg@f1
 12123  14DB  3190  2000  3193   	fcall	___flneg
 12124  14DE  0020               	movlb	0	; select bank0
 12125  14DF  0831               	movf	?___flneg+3,w
 12126  14E0  0022               	movlb	2	; select bank2
 12127  14E1  00B3               	movwf	(KE@OmegaLeft+3)^(0+256)
 12128  14E2  0020               	movlb	0	; select bank0
 12129  14E3  0830               	movf	?___flneg+2,w
 12130  14E4  0022               	movlb	2	; select bank2
 12131  14E5  00B2               	movwf	(KE@OmegaLeft+2)^(0+256)
 12132  14E6  0020               	movlb	0	; select bank0
 12133  14E7  082F               	movf	?___flneg+1,w
 12134  14E8  0022               	movlb	2	; select bank2
 12135  14E9  00B1               	movwf	(KE@OmegaLeft+1)^(0+256)
 12136  14EA  0020               	movlb	0	; select bank0
 12137  14EB  082E               	movf	?___flneg,w
 12138  14EC  0022               	movlb	2	; select bank2
 12139  14ED  00B0               	movwf	KE@OmegaLeft^(0+256)
 12140  14EE                     l8683:
 12141                           
 12142                           ;main.c: 160:         LATFbits.LATF7 = 0;
 12143  14EE  0027               	movlb	7	; select bank7
 12144  14EF  138C               	bcf	12,7	;volatile
 12145                           
 12146                           ;main.c: 161:     }
 12147  14F0  2CF3               	goto	l8685
 12148  14F1                     l1479:	
 12149                           ;main.c: 162:     else LATFbits.LATF7 = 1;
 12150                           
 12151  14F1  0027               	movlb	7	; select bank7
 12152  14F2  178C               	bsf	12,7	;volatile
 12153  14F3                     l8685:
 12154                           
 12155                           ;main.c: 164:     if(OmegaRight < 0){
 12156  14F3  0022               	movlb	2	; select bank2
 12157  14F4  0837               	movf	(KE@OmegaRight+3)^(0+256),w
 12158  14F5  0021               	movlb	1	; select bank1
 12159  14F6  00BD               	movwf	(___flge@ff1+3)^(0+128)
 12160  14F7  0022               	movlb	2	; select bank2
 12161  14F8  0836               	movf	(KE@OmegaRight+2)^(0+256),w
 12162  14F9  0021               	movlb	1	; select bank1
 12163  14FA  00BC               	movwf	(___flge@ff1+2)^(0+128)
 12164  14FB  0022               	movlb	2	; select bank2
 12165  14FC  0835               	movf	(KE@OmegaRight+1)^(0+256),w
 12166  14FD  0021               	movlb	1	; select bank1
 12167  14FE  00BB               	movwf	(___flge@ff1+1)^(0+128)
 12168  14FF  0022               	movlb	2	; select bank2
 12169  1500  0834               	movf	KE@OmegaRight^(0+256),w
 12170  1501  0021               	movlb	1	; select bank1
 12171  1502  00BA               	movwf	___flge@ff1^(0+128)
 12172  1503  3000               	movlw	0
 12173  1504  00C1               	movwf	(___flge@ff2+3)^(0+128)
 12174  1505  3000               	movlw	0
 12175  1506  00C0               	movwf	(___flge@ff2+2)^(0+128)
 12176  1507  3000               	movlw	0
 12177  1508  00BF               	movwf	(___flge@ff2+1)^(0+128)
 12178  1509  3000               	movlw	0
 12179  150A  00BE               	movwf	___flge@ff2^(0+128)
 12180  150B  3199  2126  3193   	fcall	___flge
 12181  150E  1803               	btfsc	3,0
 12182  150F  2D11               	goto	u8801
 12183  1510  2D12               	goto	u8800
 12184  1511                     u8801:
 12185  1511  2D38               	goto	l1481
 12186  1512                     u8800:
 12187  1512                     l8687:
 12188                           
 12189                           ;main.c: 165:         OmegaRight = -OmegaRight;
 12190  1512  0022               	movlb	2	; select bank2
 12191  1513  0837               	movf	(KE@OmegaRight+3)^(0+256),w
 12192  1514  0020               	movlb	0	; select bank0
 12193  1515  00B1               	movwf	___flneg@f1+3
 12194  1516  0022               	movlb	2	; select bank2
 12195  1517  0836               	movf	(KE@OmegaRight+2)^(0+256),w
 12196  1518  0020               	movlb	0	; select bank0
 12197  1519  00B0               	movwf	___flneg@f1+2
 12198  151A  0022               	movlb	2	; select bank2
 12199  151B  0835               	movf	(KE@OmegaRight+1)^(0+256),w
 12200  151C  0020               	movlb	0	; select bank0
 12201  151D  00AF               	movwf	___flneg@f1+1
 12202  151E  0022               	movlb	2	; select bank2
 12203  151F  0834               	movf	KE@OmegaRight^(0+256),w
 12204  1520  0020               	movlb	0	; select bank0
 12205  1521  00AE               	movwf	___flneg@f1
 12206  1522  3190  2000  3193   	fcall	___flneg
 12207  1525  0020               	movlb	0	; select bank0
 12208  1526  0831               	movf	?___flneg+3,w
 12209  1527  0022               	movlb	2	; select bank2
 12210  1528  00B7               	movwf	(KE@OmegaRight+3)^(0+256)
 12211  1529  0020               	movlb	0	; select bank0
 12212  152A  0830               	movf	?___flneg+2,w
 12213  152B  0022               	movlb	2	; select bank2
 12214  152C  00B6               	movwf	(KE@OmegaRight+2)^(0+256)
 12215  152D  0020               	movlb	0	; select bank0
 12216  152E  082F               	movf	?___flneg+1,w
 12217  152F  0022               	movlb	2	; select bank2
 12218  1530  00B5               	movwf	(KE@OmegaRight+1)^(0+256)
 12219  1531  0020               	movlb	0	; select bank0
 12220  1532  082E               	movf	?___flneg,w
 12221  1533  0022               	movlb	2	; select bank2
 12222  1534  00B4               	movwf	KE@OmegaRight^(0+256)
 12223  1535                     l8689:
 12224                           
 12225                           ;main.c: 166:         LATFbits.LATF3 = 1;
 12226  1535  0027               	movlb	7	; select bank7
 12227  1536  158C               	bsf	12,3	;volatile
 12228                           
 12229                           ;main.c: 167:     }
 12230  1537  2D3A               	goto	l8691
 12231  1538                     l1481:	
 12232                           ;main.c: 168:     else LATFbits.LATF3 = 0;
 12233                           
 12234  1538  0027               	movlb	7	; select bank7
 12235  1539  118C               	bcf	12,3	;volatile
 12236  153A                     l8691:
 12237                           
 12238                           ;main.c: 170:     if (OmegaLeft == 0) t_left = 1000;
 12239  153A  0022               	movlb	2	; select bank2
 12240  153B  0833               	movf	(KE@OmegaLeft+3)^(0+256),w
 12241  153C  0021               	movlb	1	; select bank1
 12242  153D  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 12243  153E  0022               	movlb	2	; select bank2
 12244  153F  0832               	movf	(KE@OmegaLeft+2)^(0+256),w
 12245  1540  0021               	movlb	1	; select bank1
 12246  1541  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 12247  1542  0022               	movlb	2	; select bank2
 12248  1543  0831               	movf	(KE@OmegaLeft+1)^(0+256),w
 12249  1544  0021               	movlb	1	; select bank1
 12250  1545  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 12251  1546  0022               	movlb	2	; select bank2
 12252  1547  0830               	movf	KE@OmegaLeft^(0+256),w
 12253  1548  0021               	movlb	1	; select bank1
 12254  1549  00A0               	movwf	___fleq@ff1^(0+128)
 12255  154A  3000               	movlw	0
 12256  154B  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 12257  154C  3000               	movlw	0
 12258  154D  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 12259  154E  3000               	movlw	0
 12260  154F  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 12261  1550  3000               	movlw	0
 12262  1551  00A4               	movwf	___fleq@ff2^(0+128)
 12263  1552  3188  2000  3193   	fcall	___fleq
 12264  1555  1C03               	btfss	3,0
 12265  1556  2D58               	goto	u8811
 12266  1557  2D59               	goto	u8810
 12267  1558                     u8811:
 12268  1558  2D5F               	goto	l8695
 12269  1559                     u8810:
 12270  1559                     l8693:
 12271  1559  30E8               	movlw	232
 12272  155A  0022               	movlb	2	; select bank2
 12273  155B  00E8               	movwf	_t_left^(0+256)
 12274  155C  3003               	movlw	3
 12275  155D  00E9               	movwf	(_t_left^(0+256)+1)
 12276  155E  2D95               	goto	l1484
 12277  155F                     l8695:
 12278  155F  3041               	movlw	65
 12279  1560  0021               	movlb	1	; select bank1
 12280  1561  00C1               	movwf	(___fldiv@b+3)^(0+128)
 12281  1562  30FB               	movlw	251
 12282  1563  00C0               	movwf	(___fldiv@b+2)^(0+128)
 12283  1564  3053               	movlw	83
 12284  1565  00BF               	movwf	(___fldiv@b+1)^(0+128)
 12285  1566  30F8               	movlw	248
 12286  1567  00BE               	movwf	___fldiv@b^(0+128)
 12287  1568  0022               	movlb	2	; select bank2
 12288  1569  0833               	movf	(KE@OmegaLeft+3)^(0+256),w
 12289  156A  0021               	movlb	1	; select bank1
 12290  156B  00BD               	movwf	(___fldiv@a+3)^(0+128)
 12291  156C  0022               	movlb	2	; select bank2
 12292  156D  0832               	movf	(KE@OmegaLeft+2)^(0+256),w
 12293  156E  0021               	movlb	1	; select bank1
 12294  156F  00BC               	movwf	(___fldiv@a+2)^(0+128)
 12295  1570  0022               	movlb	2	; select bank2
 12296  1571  0831               	movf	(KE@OmegaLeft+1)^(0+256),w
 12297  1572  0021               	movlb	1	; select bank1
 12298  1573  00BB               	movwf	(___fldiv@a+1)^(0+128)
 12299  1574  0022               	movlb	2	; select bank2
 12300  1575  0830               	movf	KE@OmegaLeft^(0+256),w
 12301  1576  0021               	movlb	1	; select bank1
 12302  1577  00BA               	movwf	___fldiv@a^(0+128)
 12303  1578  3190  2074  3193   	fcall	___fldiv
 12304  157B  0021               	movlb	1	; select bank1
 12305  157C  083D               	movf	(?___fldiv+3)^(0+128),w
 12306  157D  00EB               	movwf	(___fltol@f1+3)^(0+128)
 12307  157E  083C               	movf	(?___fldiv+2)^(0+128),w
 12308  157F  00EA               	movwf	(___fltol@f1+2)^(0+128)
 12309  1580  083B               	movf	(?___fldiv+1)^(0+128),w
 12310  1581  00E9               	movwf	(___fltol@f1+1)^(0+128)
 12311  1582  083A               	movf	?___fldiv^(0+128),w
 12312  1583  00E8               	movwf	___fltol@f1^(0+128)
 12313  1584  3198  2012  3193   	fcall	___fltol
 12314  1587  0021               	movlb	1	; select bank1
 12315  1588  0869               	movf	(?___fltol+1)^(0+128),w
 12316  1589  00ED               	movwf	(??_KE^(0+128)+1)
 12317  158A  0868               	movf	?___fltol^(0+128),w
 12318  158B  00EC               	movwf	??_KE^(0+128)
 12319  158C  36ED               	lsrf	(??_KE^(0+128)+1),f
 12320  158D  0CEC               	rrf	??_KE^(0+128),f
 12321  158E  086C               	movf	??_KE^(0+128),w
 12322  158F  0022               	movlb	2	; select bank2
 12323  1590  00E8               	movwf	_t_left^(0+256)
 12324  1591  0021               	movlb	1	; select bank1
 12325  1592  086D               	movf	(??_KE+1)^(0+128),w
 12326  1593  0022               	movlb	2	; select bank2
 12327  1594  00E9               	movwf	(_t_left+1)^(0+256)
 12328  1595                     l1484:
 12329                           
 12330                           ;main.c: 172:     if (OmegaRight == 0) t_right = 1000;
 12331  1595  0837               	movf	(KE@OmegaRight+3)^(0+256),w
 12332  1596  0021               	movlb	1	; select bank1
 12333  1597  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 12334  1598  0022               	movlb	2	; select bank2
 12335  1599  0836               	movf	(KE@OmegaRight+2)^(0+256),w
 12336  159A  0021               	movlb	1	; select bank1
 12337  159B  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 12338  159C  0022               	movlb	2	; select bank2
 12339  159D  0835               	movf	(KE@OmegaRight+1)^(0+256),w
 12340  159E  0021               	movlb	1	; select bank1
 12341  159F  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 12342  15A0  0022               	movlb	2	; select bank2
 12343  15A1  0834               	movf	KE@OmegaRight^(0+256),w
 12344  15A2  0021               	movlb	1	; select bank1
 12345  15A3  00A0               	movwf	___fleq@ff1^(0+128)
 12346  15A4  3000               	movlw	0
 12347  15A5  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 12348  15A6  3000               	movlw	0
 12349  15A7  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 12350  15A8  3000               	movlw	0
 12351  15A9  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 12352  15AA  3000               	movlw	0
 12353  15AB  00A4               	movwf	___fleq@ff2^(0+128)
 12354  15AC  3188  2000  3193   	fcall	___fleq
 12355  15AF  1C03               	btfss	3,0
 12356  15B0  2DB2               	goto	u8821
 12357  15B1  2DB3               	goto	u8820
 12358  15B2                     u8821:
 12359  15B2  2DB9               	goto	l8699
 12360  15B3                     u8820:
 12361  15B3                     l8697:
 12362  15B3  30E8               	movlw	232
 12363  15B4  0022               	movlb	2	; select bank2
 12364  15B5  00E6               	movwf	_t_right^(0+256)
 12365  15B6  3003               	movlw	3
 12366  15B7  00E7               	movwf	(_t_right^(0+256)+1)
 12367  15B8  2DEF               	goto	l1487
 12368  15B9                     l8699:
 12369  15B9  3042               	movlw	66
 12370  15BA  0021               	movlb	1	; select bank1
 12371  15BB  00C1               	movwf	(___fldiv@b+3)^(0+128)
 12372  15BC  3005               	movlw	5
 12373  15BD  00C0               	movwf	(___fldiv@b+2)^(0+128)
 12374  15BE  30A9               	movlw	169
 12375  15BF  00BF               	movwf	(___fldiv@b+1)^(0+128)
 12376  15C0  30FC               	movlw	252
 12377  15C1  00BE               	movwf	___fldiv@b^(0+128)
 12378  15C2  0022               	movlb	2	; select bank2
 12379  15C3  0837               	movf	(KE@OmegaRight+3)^(0+256),w
 12380  15C4  0021               	movlb	1	; select bank1
 12381  15C5  00BD               	movwf	(___fldiv@a+3)^(0+128)
 12382  15C6  0022               	movlb	2	; select bank2
 12383  15C7  0836               	movf	(KE@OmegaRight+2)^(0+256),w
 12384  15C8  0021               	movlb	1	; select bank1
 12385  15C9  00BC               	movwf	(___fldiv@a+2)^(0+128)
 12386  15CA  0022               	movlb	2	; select bank2
 12387  15CB  0835               	movf	(KE@OmegaRight+1)^(0+256),w
 12388  15CC  0021               	movlb	1	; select bank1
 12389  15CD  00BB               	movwf	(___fldiv@a+1)^(0+128)
 12390  15CE  0022               	movlb	2	; select bank2
 12391  15CF  0834               	movf	KE@OmegaRight^(0+256),w
 12392  15D0  0021               	movlb	1	; select bank1
 12393  15D1  00BA               	movwf	___fldiv@a^(0+128)
 12394  15D2  3190  2074  3193   	fcall	___fldiv
 12395  15D5  0021               	movlb	1	; select bank1
 12396  15D6  083D               	movf	(?___fldiv+3)^(0+128),w
 12397  15D7  00EB               	movwf	(___fltol@f1+3)^(0+128)
 12398  15D8  083C               	movf	(?___fldiv+2)^(0+128),w
 12399  15D9  00EA               	movwf	(___fltol@f1+2)^(0+128)
 12400  15DA  083B               	movf	(?___fldiv+1)^(0+128),w
 12401  15DB  00E9               	movwf	(___fltol@f1+1)^(0+128)
 12402  15DC  083A               	movf	?___fldiv^(0+128),w
 12403  15DD  00E8               	movwf	___fltol@f1^(0+128)
 12404  15DE  3198  2012  3193   	fcall	___fltol
 12405  15E1  0021               	movlb	1	; select bank1
 12406  15E2  0869               	movf	(?___fltol+1)^(0+128),w
 12407  15E3  00ED               	movwf	(??_KE^(0+128)+1)
 12408  15E4  0868               	movf	?___fltol^(0+128),w
 12409  15E5  00EC               	movwf	??_KE^(0+128)
 12410  15E6  36ED               	lsrf	(??_KE^(0+128)+1),f
 12411  15E7  0CEC               	rrf	??_KE^(0+128),f
 12412  15E8  086C               	movf	??_KE^(0+128),w
 12413  15E9  0022               	movlb	2	; select bank2
 12414  15EA  00E6               	movwf	_t_right^(0+256)
 12415  15EB  0021               	movlb	1	; select bank1
 12416  15EC  086D               	movf	(??_KE+1)^(0+128),w
 12417  15ED  0022               	movlb	2	; select bank2
 12418  15EE  00E7               	movwf	(_t_right+1)^(0+256)
 12419  15EF                     l1487:
 12420  15EF  0008               	return
 12421  15F0                     __end_of_KE:
 12422                           
 12423                           	psect	text38
 12424  1812                     __ptext38:	
 12425 ;; *************** function ___fltol *****************
 12426 ;; Defined at:
 12427 ;;		line 43 in file "D:\MPLAB XC8\pic\sources\c99\common\fltol.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  f1              4   72[BANK1 ] void 
 12430 ;; Auto vars:     Size  Location     Type
 12431 ;;  exp1            1   50[BANK0 ] unsigned char 
 12432 ;;  sign1           1   49[BANK0 ] unsigned char 
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  4   72[BANK1 ] long 
 12435 ;; Registers used:
 12436 ;;		wreg, status,2, status,0
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12442 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Totals:         0       2       4       5       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;Total ram usage:       11 bytes
 12447 ;; Hardware stack levels used: 1
 12448 ;; Hardware stack levels required when called: 5
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_KE
 12453 ;;		_AutoCircleControl
 12454 ;;		_AutoLineControl
 12455 ;;		_TimeLapseHandle
 12456 ;;		_TimeLapseControl
 12457 ;; This function uses a non-reentrant model
 12458 ;;
 12459                           
 12460                           
 12461                           ;psect for function ___fltol
 12462  1812                     ___fltol:
 12463  1812                     l8351:	
 12464                           ;incstack = 0
 12465                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12466                           
 12467  1812  1003               	clrc
 12468  1813  0021               	movlb	1	; select bank1
 12469  1814  0D6A               	rlf	(___fltol@f1+2)^(0+128),w
 12470  1815  0D6B               	rlf	(___fltol@f1+3)^(0+128),w
 12471  1816  0022               	movlb	2	; select bank2
 12472  1817  00A0               	movwf	??___fltol^(0+256)
 12473  1818  0820               	movf	??___fltol^(0+256),w
 12474  1819  0020               	movlb	0	; select bank0
 12475  181A  00D2               	movwf	___fltol@exp1
 12476  181B  0852               	movf	___fltol@exp1,w
 12477  181C  1D03               	btfss	3,2
 12478  181D  281F               	goto	u8141
 12479  181E  2820               	goto	u8140
 12480  181F                     u8141:
 12481  181F  282A               	goto	l8357
 12482  1820                     u8140:
 12483  1820                     l8353:
 12484  1820  3000               	movlw	0
 12485  1821  0021               	movlb	1	; select bank1
 12486  1822  00EB               	movwf	(?___fltol+3)^(0+128)
 12487  1823  3000               	movlw	0
 12488  1824  00EA               	movwf	(?___fltol+2)^(0+128)
 12489  1825  3000               	movlw	0
 12490  1826  00E9               	movwf	(?___fltol+1)^(0+128)
 12491  1827  3000               	movlw	0
 12492  1828  00E8               	movwf	?___fltol^(0+128)
 12493  1829  289A               	goto	l2039
 12494  182A                     l8357:
 12495  182A  0021               	movlb	1	; select bank1
 12496  182B  0868               	movf	___fltol@f1^(0+128),w
 12497  182C  0022               	movlb	2	; select bank2
 12498  182D  00A0               	movwf	??___fltol^(0+256)
 12499  182E  0021               	movlb	1	; select bank1
 12500  182F  0869               	movf	(___fltol@f1+1)^(0+128),w
 12501  1830  0022               	movlb	2	; select bank2
 12502  1831  00A1               	movwf	(??___fltol^(0+256)+1)
 12503  1832  0021               	movlb	1	; select bank1
 12504  1833  086A               	movf	(___fltol@f1+2)^(0+128),w
 12505  1834  0022               	movlb	2	; select bank2
 12506  1835  00A2               	movwf	(??___fltol^(0+256)+2)
 12507  1836  0021               	movlb	1	; select bank1
 12508  1837  086B               	movf	(___fltol@f1+3)^(0+128),w
 12509  1838  0022               	movlb	2	; select bank2
 12510  1839  00A3               	movwf	(??___fltol^(0+256)+3)
 12511  183A  301F               	movlw	31
 12512  183B                     u8155:
 12513  183B  36A3               	lsrf	(??___fltol^(0+256)+3),f
 12514  183C  0CA2               	rrf	(??___fltol^(0+256)+2),f
 12515  183D  0CA1               	rrf	(??___fltol^(0+256)+1),f
 12516  183E  0CA0               	rrf	??___fltol^(0+256),f
 12517  183F                     u8150:
 12518  183F  0B89               	decfsz	9,f
 12519  1840  283B               	goto	u8155
 12520  1841  0820               	movf	??___fltol^(0+256),w
 12521  1842  00A4               	movwf	(??___fltol+4)^(0+256)
 12522  1843  0824               	movf	(??___fltol+4)^(0+256),w
 12523  1844  0020               	movlb	0	; select bank0
 12524  1845  00D1               	movwf	___fltol@sign1
 12525  1846                     l8359:
 12526  1846  0021               	movlb	1	; select bank1
 12527  1847  17EA               	bsf	(___fltol@f1^(0+128)+2),7
 12528  1848                     l8361:
 12529  1848  30FF               	movlw	255
 12530  1849  05E8               	andwf	___fltol@f1^(0+128),f
 12531  184A  30FF               	movlw	255
 12532  184B  05E9               	andwf	(___fltol@f1+1)^(0+128),f
 12533  184C  30FF               	movlw	255
 12534  184D  05EA               	andwf	(___fltol@f1+2)^(0+128),f
 12535  184E  3000               	movlw	0
 12536  184F  05EB               	andwf	(___fltol@f1+3)^(0+128),f
 12537  1850                     l8363:
 12538  1850  3096               	movlw	150
 12539  1851  0020               	movlb	0	; select bank0
 12540  1852  02D2               	subwf	___fltol@exp1,f
 12541  1853                     l8365:
 12542  1853  1FD2               	btfss	___fltol@exp1,7
 12543  1854  2856               	goto	u8161
 12544  1855  2857               	goto	u8160
 12545  1856                     u8161:
 12546  1856  2872               	goto	l8375
 12547  1857                     u8160:
 12548  1857                     l8367:
 12549  1857  0852               	movf	___fltol@exp1,w
 12550  1858  3A80               	xorlw	128
 12551  1859  3E97               	addlw	151
 12552  185A  1803               	skipnc
 12553  185B  285D               	goto	u8171
 12554  185C  285E               	goto	u8170
 12555  185D                     u8171:
 12556  185D  285F               	goto	l8373
 12557  185E                     u8170:
 12558  185E  2820               	goto	l8353
 12559  185F                     l8373:
 12560  185F  3001               	movlw	1
 12561  1860                     u8185:
 12562  1860  0021               	movlb	1	; select bank1
 12563  1861  36EB               	lsrf	(___fltol@f1+3)^(0+128),f
 12564  1862  0CEA               	rrf	(___fltol@f1+2)^(0+128),f
 12565  1863  0CE9               	rrf	(___fltol@f1+1)^(0+128),f
 12566  1864  0CE8               	rrf	___fltol@f1^(0+128),f
 12567  1865  0B89               	decfsz	9,f
 12568  1866  2860               	goto	u8185
 12569  1867  3001               	movlw	1
 12570  1868  0022               	movlb	2	; select bank2
 12571  1869  00A0               	movwf	??___fltol^(0+256)
 12572  186A  0820               	movf	??___fltol^(0+256),w
 12573  186B  0020               	movlb	0	; select bank0
 12574  186C  07D2               	addwf	___fltol@exp1,f
 12575  186D  1D03               	btfss	3,2
 12576  186E  2870               	goto	u8191
 12577  186F  2871               	goto	u8190
 12578  1870                     u8191:
 12579  1870  285F               	goto	l8373
 12580  1871                     u8190:
 12581  1871  2889               	goto	l8383
 12582  1872                     l8375:
 12583  1872  3020               	movlw	32
 12584  1873  0252               	subwf	___fltol@exp1,w
 12585  1874  1C03               	skipc
 12586  1875  2877               	goto	u8201
 12587  1876  2878               	goto	u8200
 12588  1877                     u8201:
 12589  1877  2884               	goto	l2046
 12590  1878                     u8200:
 12591  1878  2820               	goto	l8353
 12592  1879                     l8381:
 12593  1879  3001               	movlw	1
 12594  187A                     u8215:
 12595  187A  0021               	movlb	1	; select bank1
 12596  187B  35E8               	lslf	___fltol@f1^(0+128),f
 12597  187C  0DE9               	rlf	(___fltol@f1+1)^(0+128),f
 12598  187D  0DEA               	rlf	(___fltol@f1+2)^(0+128),f
 12599  187E  0DEB               	rlf	(___fltol@f1+3)^(0+128),f
 12600  187F  0B89               	decfsz	9,f
 12601  1880  287A               	goto	u8215
 12602  1881  3001               	movlw	1
 12603  1882  0020               	movlb	0	; select bank0
 12604  1883  02D2               	subwf	___fltol@exp1,f
 12605  1884                     l2046:
 12606  1884  0852               	movf	___fltol@exp1,w
 12607  1885  1D03               	btfss	3,2
 12608  1886  2888               	goto	u8221
 12609  1887  2889               	goto	u8220
 12610  1888                     u8221:
 12611  1888  2879               	goto	l8381
 12612  1889                     u8220:
 12613  1889                     l8383:
 12614  1889  0851               	movf	___fltol@sign1,w
 12615  188A  1903               	btfsc	3,2
 12616  188B  288D               	goto	u8231
 12617  188C  288E               	goto	u8230
 12618  188D                     u8231:
 12619  188D  289A               	goto	l2049
 12620  188E                     u8230:
 12621  188E                     l8385:
 12622  188E  0021               	movlb	1	; select bank1
 12623  188F  09E8               	comf	___fltol@f1^(0+128),f
 12624  1890  09E9               	comf	(___fltol@f1+1)^(0+128),f
 12625  1891  09EA               	comf	(___fltol@f1+2)^(0+128),f
 12626  1892  09EB               	comf	(___fltol@f1+3)^(0+128),f
 12627  1893  0AE8               	incf	___fltol@f1^(0+128),f
 12628  1894  1903               	skipnz
 12629  1895  0AE9               	incf	(___fltol@f1+1)^(0+128),f
 12630  1896  1903               	skipnz
 12631  1897  0AEA               	incf	(___fltol@f1+2)^(0+128),f
 12632  1898  1903               	skipnz
 12633  1899  0AEB               	incf	(___fltol@f1+3)^(0+128),f
 12634  189A                     l2049:
 12635  189A                     l2039:
 12636  189A  0008               	return
 12637  189B                     __end_of___fltol:
 12638                           
 12639                           	psect	text39
 12640  103E                     __ptext39:	
 12641 ;; *************** function ___flsub *****************
 12642 ;; Defined at:
 12643 ;;		line 242 in file "D:\MPLAB XC8\pic\sources\c99\common\sprcadd.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  a               4    0[BANK2 ] long 
 12646 ;;  b               4    4[BANK2 ] long 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;		None
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  4    0[BANK2 ] long 
 12651 ;; Registers used:
 12652 ;;		wreg, status,2, status,0, pclath, cstack
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12658 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;Total ram usage:        8 bytes
 12663 ;; Hardware stack levels used: 1
 12664 ;; Hardware stack levels required when called: 6
 12665 ;; This function calls:
 12666 ;;		___fladd
 12667 ;; This function is called by:
 12668 ;;		_KE
 12669 ;;		_ramp_step_function
 12670 ;;		_PID
 12671 ;; This function uses a non-reentrant model
 12672 ;;
 12673                           
 12674                           
 12675                           ;psect for function ___flsub
 12676  103E                     ___flsub:
 12677  103E                     l8387:	
 12678                           ;incstack = 0
 12679                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12680                           
 12681  103E  3080               	movlw	128
 12682  103F  0022               	movlb	2	; select bank2
 12683  1040  06A3               	xorwf	(___flsub@a+3)^(0+256),f
 12684  1041                     l8389:
 12685  1041  0827               	movf	(___flsub@b+3)^(0+256),w
 12686  1042  0021               	movlb	1	; select bank1
 12687  1043  00D7               	movwf	(___fladd@b+3)^(0+128)
 12688  1044  0022               	movlb	2	; select bank2
 12689  1045  0826               	movf	(___flsub@b+2)^(0+256),w
 12690  1046  0021               	movlb	1	; select bank1
 12691  1047  00D6               	movwf	(___fladd@b+2)^(0+128)
 12692  1048  0022               	movlb	2	; select bank2
 12693  1049  0825               	movf	(___flsub@b+1)^(0+256),w
 12694  104A  0021               	movlb	1	; select bank1
 12695  104B  00D5               	movwf	(___fladd@b+1)^(0+128)
 12696  104C  0022               	movlb	2	; select bank2
 12697  104D  0824               	movf	___flsub@b^(0+256),w
 12698  104E  0021               	movlb	1	; select bank1
 12699  104F  00D4               	movwf	___fladd@b^(0+128)
 12700  1050  0022               	movlb	2	; select bank2
 12701  1051  0823               	movf	(___flsub@a+3)^(0+256),w
 12702  1052  0021               	movlb	1	; select bank1
 12703  1053  00DB               	movwf	(___fladd@a+3)^(0+128)
 12704  1054  0022               	movlb	2	; select bank2
 12705  1055  0822               	movf	(___flsub@a+2)^(0+256),w
 12706  1056  0021               	movlb	1	; select bank1
 12707  1057  00DA               	movwf	(___fladd@a+2)^(0+128)
 12708  1058  0022               	movlb	2	; select bank2
 12709  1059  0821               	movf	(___flsub@a+1)^(0+256),w
 12710  105A  0021               	movlb	1	; select bank1
 12711  105B  00D9               	movwf	(___fladd@a+1)^(0+128)
 12712  105C  0022               	movlb	2	; select bank2
 12713  105D  0820               	movf	___flsub@a^(0+256),w
 12714  105E  0021               	movlb	1	; select bank1
 12715  105F  00D8               	movwf	___fladd@a^(0+128)
 12716  1060  3188  20FF  3190   	fcall	___fladd
 12717  1063  0021               	movlb	1	; select bank1
 12718  1064  0857               	movf	(?___fladd+3)^(0+128),w
 12719  1065  0022               	movlb	2	; select bank2
 12720  1066  00A3               	movwf	(?___flsub+3)^(0+256)
 12721  1067  0021               	movlb	1	; select bank1
 12722  1068  0856               	movf	(?___fladd+2)^(0+128),w
 12723  1069  0022               	movlb	2	; select bank2
 12724  106A  00A2               	movwf	(?___flsub+2)^(0+256)
 12725  106B  0021               	movlb	1	; select bank1
 12726  106C  0855               	movf	(?___fladd+1)^(0+128),w
 12727  106D  0022               	movlb	2	; select bank2
 12728  106E  00A1               	movwf	(?___flsub+1)^(0+256)
 12729  106F  0021               	movlb	1	; select bank1
 12730  1070  0854               	movf	?___fladd^(0+128),w
 12731  1071  0022               	movlb	2	; select bank2
 12732  1072  00A0               	movwf	?___flsub^(0+256)
 12733  1073                     l2192:
 12734  1073  0008               	return
 12735  1074                     __end_of___flsub:
 12736                           
 12737                           	psect	text40
 12738  08FF                     __ptext40:	
 12739 ;; *************** function ___fladd *****************
 12740 ;; Defined at:
 12741 ;;		line 10 in file "D:\MPLAB XC8\pic\sources\c99\common\sprcadd.c"
 12742 ;; Parameters:    Size  Location     Type
 12743 ;;  b               4   52[BANK1 ] long 
 12744 ;;  a               4   56[BANK1 ] long 
 12745 ;; Auto vars:     Size  Location     Type
 12746 ;;  grs             1   71[BANK1 ] unsigned char 
 12747 ;;  bexp            1   70[BANK1 ] unsigned char 
 12748 ;;  aexp            1   69[BANK1 ] unsigned char 
 12749 ;;  signs           1   68[BANK1 ] unsigned char 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  4   52[BANK1 ] unsigned char 
 12752 ;; Registers used:
 12753 ;;		wreg, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12759 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12760 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 12761 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12762 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;Total ram usage:       20 bytes
 12764 ;; Hardware stack levels used: 1
 12765 ;; Hardware stack levels required when called: 5
 12766 ;; This function calls:
 12767 ;;		Nothing
 12768 ;; This function is called by:
 12769 ;;		_KE
 12770 ;;		_ramp_step_function
 12771 ;;		_AutoLineControl
 12772 ;;		___flsub
 12773 ;;		_distance_sensor_bottom
 12774 ;;		_distance_sensor_top
 12775 ;;		_PID
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           
 12780                           ;psect for function ___fladd
 12781  08FF                     ___fladd:
 12782  08FF                     l8103:	
 12783                           ;incstack = 0
 12784                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 12785                           
 12786  08FF  0021               	movlb	1	; select bank1
 12787  0900  0857               	movf	(___fladd@b^(0+128)+3),w
 12788  0901  3980               	andlw	128
 12789  0902  00DC               	movwf	??___fladd^(0+128)
 12790  0903  085C               	movf	??___fladd^(0+128),w
 12791  0904  00E4               	movwf	___fladd@signs^(0+128)
 12792  0905                     l8105:
 12793  0905  3557               	lslf	(___fladd@b^(0+128)+3),w
 12794  0906  00DC               	movwf	??___fladd^(0+128)
 12795  0907  085C               	movf	??___fladd^(0+128),w
 12796  0908  00E6               	movwf	___fladd@bexp^(0+128)
 12797  0909                     l8107:
 12798  0909  1FD6               	btfss	(___fladd@b^(0+128)+2),7
 12799  090A  290C               	goto	u7591
 12800  090B  290D               	goto	u7590
 12801  090C                     u7591:
 12802  090C  290E               	goto	l8111
 12803  090D                     u7590:
 12804  090D                     l8109:
 12805  090D  1466               	bsf	___fladd@bexp^(0+128),0
 12806  090E                     l8111:
 12807  090E  0866               	movf	___fladd@bexp^(0+128),w
 12808  090F  1903               	btfsc	3,2
 12809  0910  2912               	goto	u7601
 12810  0911  2913               	goto	u7600
 12811  0912                     u7601:
 12812  0912  2923               	goto	l8121
 12813  0913                     u7600:
 12814  0913                     l8113:
 12815  0913  0A66               	incf	___fladd@bexp^(0+128),w
 12816  0914  1D03               	btfss	3,2
 12817  0915  2917               	goto	u7611
 12818  0916  2918               	goto	u7610
 12819  0917                     u7611:
 12820  0917  2920               	goto	l8117
 12821  0918                     u7610:
 12822  0918                     l8115:
 12823  0918  3000               	movlw	0
 12824  0919  00D7               	movwf	(___fladd@b+3)^(0+128)
 12825  091A  3000               	movlw	0
 12826  091B  00D6               	movwf	(___fladd@b+2)^(0+128)
 12827  091C  3000               	movlw	0
 12828  091D  00D5               	movwf	(___fladd@b+1)^(0+128)
 12829  091E  3000               	movlw	0
 12830  091F  00D4               	movwf	___fladd@b^(0+128)
 12831  0920                     l8117:
 12832  0920  17D6               	bsf	(___fladd@b^(0+128)+2),7
 12833  0921                     l8119:
 12834  0921  01D7               	clrf	(___fladd@b^(0+128)+3)
 12835  0922  292B               	goto	l8123
 12836  0923                     l8121:
 12837  0923  3000               	movlw	0
 12838  0924  00D7               	movwf	(___fladd@b+3)^(0+128)
 12839  0925  3000               	movlw	0
 12840  0926  00D6               	movwf	(___fladd@b+2)^(0+128)
 12841  0927  3000               	movlw	0
 12842  0928  00D5               	movwf	(___fladd@b+1)^(0+128)
 12843  0929  3000               	movlw	0
 12844  092A  00D4               	movwf	___fladd@b^(0+128)
 12845  092B                     l8123:
 12846  092B  085B               	movf	(___fladd@a^(0+128)+3),w
 12847  092C  3980               	andlw	128
 12848  092D  00DC               	movwf	??___fladd^(0+128)
 12849  092E  085C               	movf	??___fladd^(0+128),w
 12850  092F  00E5               	movwf	___fladd@aexp^(0+128)
 12851  0930                     l8125:
 12852  0930  0865               	movf	___fladd@aexp^(0+128),w
 12853  0931  0664               	xorwf	___fladd@signs^(0+128),w
 12854  0932  1903               	skipnz
 12855  0933  2935               	goto	u7621
 12856  0934  2936               	goto	u7620
 12857  0935                     u7621:
 12858  0935  2937               	goto	l8129
 12859  0936                     u7620:
 12860  0936                     l8127:
 12861  0936  1764               	bsf	___fladd@signs^(0+128),6
 12862  0937                     l8129:
 12863  0937  355B               	lslf	(___fladd@a^(0+128)+3),w
 12864  0938  00DC               	movwf	??___fladd^(0+128)
 12865  0939  085C               	movf	??___fladd^(0+128),w
 12866  093A  00E5               	movwf	___fladd@aexp^(0+128)
 12867  093B                     l8131:
 12868  093B  1FDA               	btfss	(___fladd@a^(0+128)+2),7
 12869  093C  293E               	goto	u7631
 12870  093D  293F               	goto	u7630
 12871  093E                     u7631:
 12872  093E  2940               	goto	l8135
 12873  093F                     u7630:
 12874  093F                     l8133:
 12875  093F  1465               	bsf	___fladd@aexp^(0+128),0
 12876  0940                     l8135:
 12877  0940  0865               	movf	___fladd@aexp^(0+128),w
 12878  0941  1903               	btfsc	3,2
 12879  0942  2944               	goto	u7641
 12880  0943  2945               	goto	u7640
 12881  0944                     u7641:
 12882  0944  2955               	goto	l8145
 12883  0945                     u7640:
 12884  0945                     l8137:
 12885  0945  0A65               	incf	___fladd@aexp^(0+128),w
 12886  0946  1D03               	btfss	3,2
 12887  0947  2949               	goto	u7651
 12888  0948  294A               	goto	u7650
 12889  0949                     u7651:
 12890  0949  2952               	goto	l8141
 12891  094A                     u7650:
 12892  094A                     l8139:
 12893  094A  3000               	movlw	0
 12894  094B  00DB               	movwf	(___fladd@a+3)^(0+128)
 12895  094C  3000               	movlw	0
 12896  094D  00DA               	movwf	(___fladd@a+2)^(0+128)
 12897  094E  3000               	movlw	0
 12898  094F  00D9               	movwf	(___fladd@a+1)^(0+128)
 12899  0950  3000               	movlw	0
 12900  0951  00D8               	movwf	___fladd@a^(0+128)
 12901  0952                     l8141:
 12902  0952  17DA               	bsf	(___fladd@a^(0+128)+2),7
 12903  0953                     l8143:
 12904  0953  01DB               	clrf	(___fladd@a^(0+128)+3)
 12905  0954  295D               	goto	l2146
 12906  0955                     l8145:
 12907  0955  3000               	movlw	0
 12908  0956  00DB               	movwf	(___fladd@a+3)^(0+128)
 12909  0957  3000               	movlw	0
 12910  0958  00DA               	movwf	(___fladd@a+2)^(0+128)
 12911  0959  3000               	movlw	0
 12912  095A  00D9               	movwf	(___fladd@a+1)^(0+128)
 12913  095B  3000               	movlw	0
 12914  095C  00D8               	movwf	___fladd@a^(0+128)
 12915  095D                     l2146:
 12916  095D  0866               	movf	___fladd@bexp^(0+128),w
 12917  095E  0265               	subwf	___fladd@aexp^(0+128),w
 12918  095F  1803               	skipnc
 12919  0960  2962               	goto	u7661
 12920  0961  2963               	goto	u7660
 12921  0962                     u7661:
 12922  0962  29A7               	goto	l8181
 12923  0963                     u7660:
 12924  0963                     l8147:
 12925  0963  1F64               	btfss	___fladd@signs^(0+128),6
 12926  0964  2966               	goto	u7671
 12927  0965  2967               	goto	u7670
 12928  0966                     u7671:
 12929  0966  296B               	goto	l8151
 12930  0967                     u7670:
 12931  0967                     l8149:
 12932  0967  3080               	movlw	128
 12933  0968  00DC               	movwf	??___fladd^(0+128)
 12934  0969  085C               	movf	??___fladd^(0+128),w
 12935  096A  06E4               	xorwf	___fladd@signs^(0+128),f
 12936  096B                     l8151:
 12937  096B  0866               	movf	___fladd@bexp^(0+128),w
 12938  096C  00DC               	movwf	??___fladd^(0+128)
 12939  096D  085C               	movf	??___fladd^(0+128),w
 12940  096E  00E7               	movwf	___fladd@grs^(0+128)
 12941  096F                     l8153:
 12942  096F  0865               	movf	___fladd@aexp^(0+128),w
 12943  0970  00DC               	movwf	??___fladd^(0+128)
 12944  0971  085C               	movf	??___fladd^(0+128),w
 12945  0972  00E6               	movwf	___fladd@bexp^(0+128)
 12946  0973                     l8155:
 12947  0973  0867               	movf	___fladd@grs^(0+128),w
 12948  0974  00DC               	movwf	??___fladd^(0+128)
 12949  0975  085C               	movf	??___fladd^(0+128),w
 12950  0976  00E5               	movwf	___fladd@aexp^(0+128)
 12951  0977                     l8157:
 12952  0977  0854               	movf	___fladd@b^(0+128),w
 12953  0978  00DC               	movwf	??___fladd^(0+128)
 12954  0979  085C               	movf	??___fladd^(0+128),w
 12955  097A  00E7               	movwf	___fladd@grs^(0+128)
 12956  097B                     l8159:
 12957  097B  0858               	movf	___fladd@a^(0+128),w
 12958  097C  00DC               	movwf	??___fladd^(0+128)
 12959  097D  085C               	movf	??___fladd^(0+128),w
 12960  097E  00D4               	movwf	___fladd@b^(0+128)
 12961  097F                     l8161:
 12962  097F  0867               	movf	___fladd@grs^(0+128),w
 12963  0980  00DC               	movwf	??___fladd^(0+128)
 12964  0981  085C               	movf	??___fladd^(0+128),w
 12965  0982  00D8               	movwf	___fladd@a^(0+128)
 12966  0983                     l8163:
 12967  0983  0855               	movf	(___fladd@b^(0+128)+1),w
 12968  0984  00DC               	movwf	??___fladd^(0+128)
 12969  0985  085C               	movf	??___fladd^(0+128),w
 12970  0986  00E7               	movwf	___fladd@grs^(0+128)
 12971  0987                     l8165:
 12972  0987  0859               	movf	(___fladd@a^(0+128)+1),w
 12973  0988  00DC               	movwf	??___fladd^(0+128)
 12974  0989  085C               	movf	??___fladd^(0+128),w
 12975  098A  00D5               	movwf	(___fladd@b^(0+128)+1)
 12976  098B                     l8167:
 12977  098B  0867               	movf	___fladd@grs^(0+128),w
 12978  098C  00DC               	movwf	??___fladd^(0+128)
 12979  098D  085C               	movf	??___fladd^(0+128),w
 12980  098E  00D9               	movwf	(___fladd@a^(0+128)+1)
 12981  098F                     l8169:
 12982  098F  0856               	movf	(___fladd@b^(0+128)+2),w
 12983  0990  00DC               	movwf	??___fladd^(0+128)
 12984  0991  085C               	movf	??___fladd^(0+128),w
 12985  0992  00E7               	movwf	___fladd@grs^(0+128)
 12986  0993                     l8171:
 12987  0993  085A               	movf	(___fladd@a^(0+128)+2),w
 12988  0994  00DC               	movwf	??___fladd^(0+128)
 12989  0995  085C               	movf	??___fladd^(0+128),w
 12990  0996  00D6               	movwf	(___fladd@b^(0+128)+2)
 12991  0997                     l8173:
 12992  0997  0867               	movf	___fladd@grs^(0+128),w
 12993  0998  00DC               	movwf	??___fladd^(0+128)
 12994  0999  085C               	movf	??___fladd^(0+128),w
 12995  099A  00DA               	movwf	(___fladd@a^(0+128)+2)
 12996  099B                     l8175:
 12997  099B  0857               	movf	(___fladd@b^(0+128)+3),w
 12998  099C  00DC               	movwf	??___fladd^(0+128)
 12999  099D  085C               	movf	??___fladd^(0+128),w
 13000  099E  00E7               	movwf	___fladd@grs^(0+128)
 13001  099F                     l8177:
 13002  099F  085B               	movf	(___fladd@a^(0+128)+3),w
 13003  09A0  00DC               	movwf	??___fladd^(0+128)
 13004  09A1  085C               	movf	??___fladd^(0+128),w
 13005  09A2  00D7               	movwf	(___fladd@b^(0+128)+3)
 13006  09A3                     l8179:
 13007  09A3  0867               	movf	___fladd@grs^(0+128),w
 13008  09A4  00DC               	movwf	??___fladd^(0+128)
 13009  09A5  085C               	movf	??___fladd^(0+128),w
 13010  09A6  00DB               	movwf	(___fladd@a^(0+128)+3)
 13011  09A7                     l8181:
 13012  09A7  01E7               	clrf	___fladd@grs^(0+128)
 13013  09A8                     l8183:
 13014  09A8  0865               	movf	___fladd@aexp^(0+128),w
 13015  09A9  00DC               	movwf	??___fladd^(0+128)
 13016  09AA  01DD               	clrf	(??___fladd^(0+128)+1)
 13017  09AB  085D               	movf	(??___fladd+1)^(0+128),w
 13018  09AC  00DF               	movwf	((??___fladd+2)^(0+128)+1)
 13019  09AD  0866               	movf	___fladd@bexp^(0+128),w
 13020  09AE  025C               	subwf	??___fladd^(0+128),w
 13021  09AF  00DE               	movwf	(??___fladd+2)^(0+128)
 13022  09B0  1C03               	skipc
 13023  09B1  03DF               	decf	((??___fladd+2)^(0+128)+1),f
 13024  09B2  085F               	movf	(??___fladd+3)^(0+128),w
 13025  09B3  3A80               	xorlw	128
 13026  09B4  00E0               	movwf	(??___fladd+4)^(0+128)
 13027  09B5  3080               	movlw	128
 13028  09B6  0260               	subwf	(??___fladd+4)^(0+128),w
 13029  09B7  1D03               	skipz
 13030  09B8  29BB               	goto	u7685
 13031  09B9  301A               	movlw	26
 13032  09BA  025E               	subwf	(??___fladd+2)^(0+128),w
 13033  09BB                     u7685:
 13034  09BB  1C03               	skipc
 13035  09BC  29BE               	goto	u7681
 13036  09BD  29BF               	goto	u7680
 13037  09BE                     u7681:
 13038  09BE  29F7               	goto	l8199
 13039  09BF                     u7680:
 13040  09BF                     l8185:
 13041  09BF  0021               	movlb	1	; select bank1
 13042  09C0  0857               	movf	(___fladd@b+3)^(0+128),w
 13043  09C1  0456               	iorwf	(___fladd@b+2)^(0+128),w
 13044  09C2  0455               	iorwf	(___fladd@b+1)^(0+128),w
 13045  09C3  0454               	iorwf	___fladd@b^(0+128),w
 13046  09C4  1D03               	skipz
 13047  09C5  29C7               	goto	u7691
 13048  09C6  29C9               	goto	u7690
 13049  09C7                     u7691:
 13050  09C7  3001               	movlw	1
 13051  09C8  29CA               	goto	u7700
 13052  09C9                     u7690:
 13053  09C9  3000               	movlw	0
 13054  09CA                     u7700:
 13055  09CA  00DC               	movwf	??___fladd^(0+128)
 13056  09CB  085C               	movf	??___fladd^(0+128),w
 13057  09CC  00E7               	movwf	___fladd@grs^(0+128)
 13058  09CD  3000               	movlw	0
 13059  09CE  00D7               	movwf	(___fladd@b+3)^(0+128)
 13060  09CF  3000               	movlw	0
 13061  09D0  00D6               	movwf	(___fladd@b+2)^(0+128)
 13062  09D1  3000               	movlw	0
 13063  09D2  00D5               	movwf	(___fladd@b+1)^(0+128)
 13064  09D3  3000               	movlw	0
 13065  09D4  00D4               	movwf	___fladd@b^(0+128)
 13066  09D5  0865               	movf	___fladd@aexp^(0+128),w
 13067  09D6  00DC               	movwf	??___fladd^(0+128)
 13068  09D7  085C               	movf	??___fladd^(0+128),w
 13069  09D8  00E6               	movwf	___fladd@bexp^(0+128)
 13070  09D9  29FE               	goto	l2150
 13071  09DA                     l2152:
 13072  09DA  1C67               	btfss	___fladd@grs^(0+128),0
 13073  09DB  29DD               	goto	u7711
 13074  09DC  29DE               	goto	u7710
 13075  09DD                     u7711:
 13076  09DD  29E4               	goto	l8189
 13077  09DE                     u7710:
 13078  09DE                     l8187:
 13079  09DE  3667               	lsrf	___fladd@grs^(0+128),w
 13080  09DF  3801               	iorlw	1
 13081  09E0  00DC               	movwf	??___fladd^(0+128)
 13082  09E1  085C               	movf	??___fladd^(0+128),w
 13083  09E2  00E7               	movwf	___fladd@grs^(0+128)
 13084  09E3  29E6               	goto	l8191
 13085  09E4                     l8189:
 13086  09E4  1003               	clrc
 13087  09E5  0CE7               	rrf	___fladd@grs^(0+128),f
 13088  09E6                     l8191:
 13089  09E6  1C54               	btfss	___fladd@b^(0+128),0
 13090  09E7  29E9               	goto	u7721
 13091  09E8  29EA               	goto	u7720
 13092  09E9                     u7721:
 13093  09E9  29EB               	goto	l8195
 13094  09EA                     u7720:
 13095  09EA                     l8193:
 13096  09EA  17E7               	bsf	___fladd@grs^(0+128),7
 13097  09EB                     l8195:
 13098  09EB  3001               	movlw	1
 13099  09EC  00DC               	movwf	??___fladd^(0+128)
 13100  09ED                     u7735:
 13101  09ED  37D7               	asrf	(___fladd@b+3)^(0+128),f
 13102  09EE  0CD6               	rrf	(___fladd@b+2)^(0+128),f
 13103  09EF  0CD5               	rrf	(___fladd@b+1)^(0+128),f
 13104  09F0  0CD4               	rrf	___fladd@b^(0+128),f
 13105  09F1  0BDC               	decfsz	(??___fladd^(0+128))& (0+127),f
 13106  09F2  29ED               	goto	u7735
 13107  09F3                     l8197:
 13108  09F3  3001               	movlw	1
 13109  09F4  00DC               	movwf	??___fladd^(0+128)
 13110  09F5  085C               	movf	??___fladd^(0+128),w
 13111  09F6  07E6               	addwf	___fladd@bexp^(0+128),f
 13112  09F7                     l8199:
 13113  09F7  0021               	movlb	1	; select bank1
 13114  09F8  0865               	movf	___fladd@aexp^(0+128),w
 13115  09F9  0266               	subwf	___fladd@bexp^(0+128),w
 13116  09FA  1C03               	skipc
 13117  09FB  29FD               	goto	u7741
 13118  09FC  29FE               	goto	u7740
 13119  09FD                     u7741:
 13120  09FD  29DA               	goto	l2152
 13121  09FE                     u7740:
 13122  09FE                     l2150:
 13123  09FE  1B64               	btfsc	___fladd@signs^(0+128),6
 13124  09FF  2A01               	goto	u7751
 13125  0A00  2A02               	goto	u7750
 13126  0A01                     u7751:
 13127  0A01  2A3A               	goto	l8225
 13128  0A02                     u7750:
 13129  0A02                     l8201:
 13130  0A02  0866               	movf	___fladd@bexp^(0+128),w
 13131  0A03  1D03               	btfss	3,2
 13132  0A04  2A06               	goto	u7761
 13133  0A05  2A07               	goto	u7760
 13134  0A06                     u7761:
 13135  0A06  2A10               	goto	l8207
 13136  0A07                     u7760:
 13137  0A07                     l8203:
 13138  0A07  3000               	movlw	0
 13139  0A08  00D7               	movwf	(?___fladd+3)^(0+128)
 13140  0A09  3000               	movlw	0
 13141  0A0A  00D6               	movwf	(?___fladd+2)^(0+128)
 13142  0A0B  3000               	movlw	0
 13143  0A0C  00D5               	movwf	(?___fladd+1)^(0+128)
 13144  0A0D  3000               	movlw	0
 13145  0A0E  00D4               	movwf	?___fladd^(0+128)
 13146  0A0F  2B36               	goto	l2159
 13147  0A10                     l8207:
 13148  0A10  0858               	movf	___fladd@a^(0+128),w
 13149  0A11  07D4               	addwf	___fladd@b^(0+128),f
 13150  0A12  0859               	movf	(___fladd@a+1)^(0+128),w
 13151  0A13  3DD5               	addwfc	(___fladd@b+1)^(0+128),f
 13152  0A14  085A               	movf	(___fladd@a+2)^(0+128),w
 13153  0A15  3DD6               	addwfc	(___fladd@b+2)^(0+128),f
 13154  0A16  085B               	movf	(___fladd@a+3)^(0+128),w
 13155  0A17  3DD7               	addwfc	(___fladd@b+3)^(0+128),f
 13156  0A18                     l8209:
 13157  0A18  1C57               	btfss	(___fladd@b+3)^(0+128),0
 13158  0A19  2A1B               	goto	u7771
 13159  0A1A  2A1C               	goto	u7770
 13160  0A1B                     u7771:
 13161  0A1B  2AC6               	goto	l8259
 13162  0A1C                     u7770:
 13163  0A1C                     l8211:
 13164  0A1C  1C67               	btfss	___fladd@grs^(0+128),0
 13165  0A1D  2A1F               	goto	u7781
 13166  0A1E  2A20               	goto	u7780
 13167  0A1F                     u7781:
 13168  0A1F  2A26               	goto	l8215
 13169  0A20                     u7780:
 13170  0A20                     l8213:
 13171  0A20  3667               	lsrf	___fladd@grs^(0+128),w
 13172  0A21  3801               	iorlw	1
 13173  0A22  00DC               	movwf	??___fladd^(0+128)
 13174  0A23  085C               	movf	??___fladd^(0+128),w
 13175  0A24  00E7               	movwf	___fladd@grs^(0+128)
 13176  0A25  2A28               	goto	l8217
 13177  0A26                     l8215:
 13178  0A26  1003               	clrc
 13179  0A27  0CE7               	rrf	___fladd@grs^(0+128),f
 13180  0A28                     l8217:
 13181  0A28  1C54               	btfss	___fladd@b^(0+128),0
 13182  0A29  2A2B               	goto	u7791
 13183  0A2A  2A2C               	goto	u7790
 13184  0A2B                     u7791:
 13185  0A2B  2A2D               	goto	l8221
 13186  0A2C                     u7790:
 13187  0A2C                     l8219:
 13188  0A2C  17E7               	bsf	___fladd@grs^(0+128),7
 13189  0A2D                     l8221:
 13190  0A2D  3001               	movlw	1
 13191  0A2E  00DC               	movwf	??___fladd^(0+128)
 13192  0A2F                     u7805:
 13193  0A2F  37D7               	asrf	(___fladd@b+3)^(0+128),f
 13194  0A30  0CD6               	rrf	(___fladd@b+2)^(0+128),f
 13195  0A31  0CD5               	rrf	(___fladd@b+1)^(0+128),f
 13196  0A32  0CD4               	rrf	___fladd@b^(0+128),f
 13197  0A33  0BDC               	decfsz	(??___fladd^(0+128))& (0+127),f
 13198  0A34  2A2F               	goto	u7805
 13199  0A35                     l8223:
 13200  0A35  3001               	movlw	1
 13201  0A36  00DC               	movwf	??___fladd^(0+128)
 13202  0A37  085C               	movf	??___fladd^(0+128),w
 13203  0A38  07E6               	addwf	___fladd@bexp^(0+128),f
 13204  0A39  2AC6               	goto	l8259
 13205  0A3A                     l8225:
 13206  0A3A  0857               	movf	(___fladd@b+3)^(0+128),w
 13207  0A3B  3A80               	xorlw	128
 13208  0A3C  00DC               	movwf	??___fladd^(0+128)
 13209  0A3D  085B               	movf	(___fladd@a+3)^(0+128),w
 13210  0A3E  3A80               	xorlw	128
 13211  0A3F  025C               	subwf	??___fladd^(0+128),w
 13212  0A40  1D03               	skipz
 13213  0A41  2A4C               	goto	u7813
 13214  0A42  085A               	movf	(___fladd@a+2)^(0+128),w
 13215  0A43  0256               	subwf	(___fladd@b+2)^(0+128),w
 13216  0A44  1D03               	skipz
 13217  0A45  2A4C               	goto	u7813
 13218  0A46  0859               	movf	(___fladd@a+1)^(0+128),w
 13219  0A47  0255               	subwf	(___fladd@b+1)^(0+128),w
 13220  0A48  1D03               	skipz
 13221  0A49  2A4C               	goto	u7813
 13222  0A4A  0858               	movf	___fladd@a^(0+128),w
 13223  0A4B  0254               	subwf	___fladd@b^(0+128),w
 13224  0A4C                     u7813:
 13225  0A4C  1803               	skipnc
 13226  0A4D  2A4F               	goto	u7811
 13227  0A4E  2A50               	goto	u7810
 13228  0A4F                     u7811:
 13229  0A4F  2A88               	goto	l8235
 13230  0A50                     u7810:
 13231  0A50                     l8227:
 13232  0A50  30FF               	movlw	255
 13233  0A51  00DC               	movwf	??___fladd^(0+128)
 13234  0A52  30FF               	movlw	255
 13235  0A53  00DD               	movwf	(??___fladd^(0+128)+1)
 13236  0A54  30FF               	movlw	255
 13237  0A55  00DE               	movwf	(??___fladd^(0+128)+2)
 13238  0A56  30FF               	movlw	255
 13239  0A57  00DF               	movwf	(??___fladd^(0+128)+3)
 13240  0A58  0854               	movf	___fladd@b^(0+128),w
 13241  0A59  0258               	subwf	___fladd@a^(0+128),w
 13242  0A5A  00E0               	movwf	(??___fladd+4)^(0+128)
 13243  0A5B  0855               	movf	(___fladd@b+1)^(0+128),w
 13244  0A5C  3B59               	subwfb	(___fladd@a+1)^(0+128),w
 13245  0A5D  00E1               	movwf	((??___fladd+4)^(0+128)+1)
 13246  0A5E  0856               	movf	(___fladd@b+2)^(0+128),w
 13247  0A5F  3B5A               	subwfb	(___fladd@a+2)^(0+128),w
 13248  0A60  00E2               	movwf	((??___fladd+4)^(0+128)+2)
 13249  0A61  0857               	movf	(___fladd@b+3)^(0+128),w
 13250  0A62  3B5B               	subwfb	(___fladd@a+3)^(0+128),w
 13251  0A63  00E3               	movwf	((??___fladd+4)^(0+128)+3)
 13252  0A64  0860               	movf	(??___fladd+4)^(0+128),w
 13253  0A65  07DC               	addwf	??___fladd^(0+128),f
 13254  0A66  0861               	movf	(??___fladd+5)^(0+128),w
 13255  0A67  3DDD               	addwfc	(??___fladd^(0+128)+1),f
 13256  0A68  0862               	movf	(??___fladd+6)^(0+128),w
 13257  0A69  3DDE               	addwfc	(??___fladd^(0+128)+2),f
 13258  0A6A  0863               	movf	(??___fladd+7)^(0+128),w
 13259  0A6B  3DDF               	addwfc	(??___fladd^(0+128)+3),f
 13260  0A6C  085F               	movf	(??___fladd+3)^(0+128),w
 13261  0A6D  00D7               	movwf	(___fladd@b+3)^(0+128)
 13262  0A6E  085E               	movf	(??___fladd+2)^(0+128),w
 13263  0A6F  00D6               	movwf	(___fladd@b+2)^(0+128)
 13264  0A70  085D               	movf	(??___fladd+1)^(0+128),w
 13265  0A71  00D5               	movwf	(___fladd@b+1)^(0+128)
 13266  0A72  085C               	movf	??___fladd^(0+128),w
 13267  0A73  00D4               	movwf	___fladd@b^(0+128)
 13268  0A74                     l8229:
 13269  0A74  3080               	movlw	128
 13270  0A75  00DC               	movwf	??___fladd^(0+128)
 13271  0A76  085C               	movf	??___fladd^(0+128),w
 13272  0A77  06E4               	xorwf	___fladd@signs^(0+128),f
 13273  0A78  09E7               	comf	___fladd@grs^(0+128),f
 13274  0A79  0AE7               	incf	___fladd@grs^(0+128),f
 13275  0A7A                     l8231:
 13276  0A7A  0867               	movf	___fladd@grs^(0+128),w
 13277  0A7B  1D03               	btfss	3,2
 13278  0A7C  2A7E               	goto	u7821
 13279  0A7D  2A7F               	goto	u7820
 13280  0A7E                     u7821:
 13281  0A7E  2A90               	goto	l2167
 13282  0A7F                     u7820:
 13283  0A7F                     l8233:
 13284  0A7F  3001               	movlw	1
 13285  0A80  07D4               	addwf	___fladd@b^(0+128),f
 13286  0A81  3000               	movlw	0
 13287  0A82  3DD5               	addwfc	(___fladd@b+1)^(0+128),f
 13288  0A83  3000               	movlw	0
 13289  0A84  3DD6               	addwfc	(___fladd@b+2)^(0+128),f
 13290  0A85  3000               	movlw	0
 13291  0A86  3DD7               	addwfc	(___fladd@b+3)^(0+128),f
 13292  0A87  2A90               	goto	l2167
 13293  0A88                     l8235:
 13294  0A88  0858               	movf	___fladd@a^(0+128),w
 13295  0A89  02D4               	subwf	___fladd@b^(0+128),f
 13296  0A8A  0859               	movf	(___fladd@a+1)^(0+128),w
 13297  0A8B  3BD5               	subwfb	(___fladd@b+1)^(0+128),f
 13298  0A8C  085A               	movf	(___fladd@a+2)^(0+128),w
 13299  0A8D  3BD6               	subwfb	(___fladd@b+2)^(0+128),f
 13300  0A8E  085B               	movf	(___fladd@a+3)^(0+128),w
 13301  0A8F  3BD7               	subwfb	(___fladd@b+3)^(0+128),f
 13302  0A90                     l2167:
 13303  0A90  0857               	movf	(___fladd@b+3)^(0+128),w
 13304  0A91  0456               	iorwf	(___fladd@b+2)^(0+128),w
 13305  0A92  0455               	iorwf	(___fladd@b+1)^(0+128),w
 13306  0A93  0454               	iorwf	___fladd@b^(0+128),w
 13307  0A94  1D03               	skipz
 13308  0A95  2A97               	goto	u7831
 13309  0A96  2A98               	goto	u7830
 13310  0A97                     u7831:
 13311  0A97  2AC2               	goto	l8257
 13312  0A98                     u7830:
 13313  0A98                     l8237:
 13314  0A98  0867               	movf	___fladd@grs^(0+128),w
 13315  0A99  1D03               	btfss	3,2
 13316  0A9A  2A9C               	goto	u7841
 13317  0A9B  2A9D               	goto	u7840
 13318  0A9C                     u7841:
 13319  0A9C  2AC2               	goto	l8257
 13320  0A9D                     u7840:
 13321  0A9D                     l8239:
 13322  0A9D  3000               	movlw	0
 13323  0A9E  00D7               	movwf	(?___fladd+3)^(0+128)
 13324  0A9F  3000               	movlw	0
 13325  0AA0  00D6               	movwf	(?___fladd+2)^(0+128)
 13326  0AA1  3000               	movlw	0
 13327  0AA2  00D5               	movwf	(?___fladd+1)^(0+128)
 13328  0AA3  3000               	movlw	0
 13329  0AA4  00D4               	movwf	?___fladd^(0+128)
 13330  0AA5  2B36               	goto	l2159
 13331  0AA6                     l8243:
 13332  0AA6  3001               	movlw	1
 13333  0AA7                     u7855:
 13334  0AA7  35D4               	lslf	___fladd@b^(0+128),f
 13335  0AA8  0DD5               	rlf	(___fladd@b+1)^(0+128),f
 13336  0AA9  0DD6               	rlf	(___fladd@b+2)^(0+128),f
 13337  0AAA  0DD7               	rlf	(___fladd@b+3)^(0+128),f
 13338  0AAB  0B89               	decfsz	9,f
 13339  0AAC  2AA7               	goto	u7855
 13340  0AAD                     l8245:
 13341  0AAD  1FE7               	btfss	___fladd@grs^(0+128),7
 13342  0AAE  2AB0               	goto	u7861
 13343  0AAF  2AB1               	goto	u7860
 13344  0AB0                     u7861:
 13345  0AB0  2AB2               	goto	l2171
 13346  0AB1                     u7860:
 13347  0AB1                     l8247:
 13348  0AB1  1454               	bsf	___fladd@b^(0+128),0
 13349  0AB2                     l2171:
 13350  0AB2  1C67               	btfss	___fladd@grs^(0+128),0
 13351  0AB3  2AB5               	goto	u7871
 13352  0AB4  2AB6               	goto	u7870
 13353  0AB5                     u7871:
 13354  0AB5  2AB9               	goto	l8251
 13355  0AB6                     u7870:
 13356  0AB6                     l8249:
 13357  0AB6  1403               	setc
 13358  0AB7  0DE7               	rlf	___fladd@grs^(0+128),f
 13359  0AB8  2ABB               	goto	l8253
 13360  0AB9                     l8251:
 13361  0AB9  1003               	clrc
 13362  0ABA  0DE7               	rlf	___fladd@grs^(0+128),f
 13363  0ABB                     l8253:
 13364  0ABB  0866               	movf	___fladd@bexp^(0+128),w
 13365  0ABC  1903               	btfsc	3,2
 13366  0ABD  2ABF               	goto	u7881
 13367  0ABE  2AC0               	goto	u7880
 13368  0ABF                     u7881:
 13369  0ABF  2AC2               	goto	l8257
 13370  0AC0                     u7880:
 13371  0AC0                     l8255:
 13372  0AC0  3001               	movlw	1
 13373  0AC1  02E6               	subwf	___fladd@bexp^(0+128),f
 13374  0AC2                     l8257:
 13375  0AC2  1FD6               	btfss	(___fladd@b+2)^(0+128),7
 13376  0AC3  2AC5               	goto	u7891
 13377  0AC4  2AC6               	goto	u7890
 13378  0AC5                     u7891:
 13379  0AC5  2AA6               	goto	l8243
 13380  0AC6                     u7890:
 13381  0AC6                     l8259:
 13382  0AC6  01E5               	clrf	___fladd@aexp^(0+128)
 13383  0AC7                     l8261:
 13384  0AC7  1FE7               	btfss	___fladd@grs^(0+128),7
 13385  0AC8  2ACA               	goto	u7901
 13386  0AC9  2ACB               	goto	u7900
 13387  0ACA                     u7901:
 13388  0ACA  2AD9               	goto	l8269
 13389  0ACB                     u7900:
 13390  0ACB                     l8263:
 13391  0ACB  0867               	movf	___fladd@grs^(0+128),w
 13392  0ACC  397F               	andlw	127
 13393  0ACD  1903               	btfsc	3,2
 13394  0ACE  2AD0               	goto	u7911
 13395  0ACF  2AD1               	goto	u7910
 13396  0AD0                     u7911:
 13397  0AD0  2AD4               	goto	l2177
 13398  0AD1                     u7910:
 13399  0AD1                     l8265:
 13400  0AD1  01E5               	clrf	___fladd@aexp^(0+128)
 13401  0AD2  0AE5               	incf	___fladd@aexp^(0+128),f
 13402  0AD3  2AD9               	goto	l8269
 13403  0AD4                     l2177:
 13404  0AD4  1C54               	btfss	___fladd@b^(0+128),0
 13405  0AD5  2AD7               	goto	u7921
 13406  0AD6  2AD8               	goto	u7920
 13407  0AD7                     u7921:
 13408  0AD7  2AD9               	goto	l8269
 13409  0AD8                     u7920:
 13410  0AD8  2AD1               	goto	l8265
 13411  0AD9                     l8269:
 13412  0AD9  0865               	movf	___fladd@aexp^(0+128),w
 13413  0ADA  1903               	btfsc	3,2
 13414  0ADB  2ADD               	goto	u7931
 13415  0ADC  2ADE               	goto	u7930
 13416  0ADD                     u7931:
 13417  0ADD  2B0B               	goto	l2180
 13418  0ADE                     u7930:
 13419  0ADE                     l8271:
 13420  0ADE  3001               	movlw	1
 13421  0ADF  07D4               	addwf	___fladd@b^(0+128),f
 13422  0AE0  3000               	movlw	0
 13423  0AE1  3DD5               	addwfc	(___fladd@b+1)^(0+128),f
 13424  0AE2  3000               	movlw	0
 13425  0AE3  3DD6               	addwfc	(___fladd@b+2)^(0+128),f
 13426  0AE4  3000               	movlw	0
 13427  0AE5  3DD7               	addwfc	(___fladd@b+3)^(0+128),f
 13428  0AE6                     l8273:
 13429  0AE6  1C57               	btfss	(___fladd@b+3)^(0+128),0
 13430  0AE7  2AE9               	goto	u7941
 13431  0AE8  2AEA               	goto	u7940
 13432  0AE9                     u7941:
 13433  0AE9  2B0B               	goto	l2180
 13434  0AEA                     u7940:
 13435  0AEA                     l8275:
 13436  0AEA  0854               	movf	___fladd@b^(0+128),w
 13437  0AEB  00DC               	movwf	??___fladd^(0+128)
 13438  0AEC  0855               	movf	(___fladd@b+1)^(0+128),w
 13439  0AED  00DD               	movwf	(??___fladd^(0+128)+1)
 13440  0AEE  0856               	movf	(___fladd@b+2)^(0+128),w
 13441  0AEF  00DE               	movwf	(??___fladd^(0+128)+2)
 13442  0AF0  0857               	movf	(___fladd@b+3)^(0+128),w
 13443  0AF1  00DF               	movwf	(??___fladd^(0+128)+3)
 13444  0AF2  3001               	movlw	1
 13445  0AF3  00E0               	movwf	(??___fladd+4)^(0+128)
 13446  0AF4                     u7955:
 13447  0AF4  37DF               	asrf	(??___fladd^(0+128)+3),f
 13448  0AF5  0CDE               	rrf	(??___fladd^(0+128)+2),f
 13449  0AF6  0CDD               	rrf	(??___fladd^(0+128)+1),f
 13450  0AF7  0CDC               	rrf	??___fladd^(0+128),f
 13451  0AF8                     u7950:
 13452  0AF8  0BE0               	decfsz	(??___fladd+4)^(0+128),f
 13453  0AF9  2AF4               	goto	u7955
 13454  0AFA  085F               	movf	(??___fladd+3)^(0+128),w
 13455  0AFB  00D7               	movwf	(___fladd@b+3)^(0+128)
 13456  0AFC  085E               	movf	(??___fladd+2)^(0+128),w
 13457  0AFD  00D6               	movwf	(___fladd@b+2)^(0+128)
 13458  0AFE  085D               	movf	(??___fladd+1)^(0+128),w
 13459  0AFF  00D5               	movwf	(___fladd@b+1)^(0+128)
 13460  0B00  085C               	movf	??___fladd^(0+128),w
 13461  0B01  00D4               	movwf	___fladd@b^(0+128)
 13462  0B02  0A66               	incf	___fladd@bexp^(0+128),w
 13463  0B03  1903               	btfsc	3,2
 13464  0B04  2B06               	goto	u7961
 13465  0B05  2B07               	goto	u7960
 13466  0B06                     u7961:
 13467  0B06  2B0B               	goto	l2180
 13468  0B07                     u7960:
 13469  0B07                     l8277:
 13470  0B07  3001               	movlw	1
 13471  0B08  00DC               	movwf	??___fladd^(0+128)
 13472  0B09  085C               	movf	??___fladd^(0+128),w
 13473  0B0A  07E6               	addwf	___fladd@bexp^(0+128),f
 13474  0B0B                     l2180:
 13475  0B0B  0A66               	incf	___fladd@bexp^(0+128),w
 13476  0B0C  1903               	btfsc	3,2
 13477  0B0D  2B0F               	goto	u7971
 13478  0B0E  2B10               	goto	u7970
 13479  0B0F                     u7971:
 13480  0B0F  2B15               	goto	l8281
 13481  0B10                     u7970:
 13482  0B10                     l8279:
 13483  0B10  0866               	movf	___fladd@bexp^(0+128),w
 13484  0B11  1D03               	btfss	3,2
 13485  0B12  2B14               	goto	u7981
 13486  0B13  2B15               	goto	u7980
 13487  0B14                     u7981:
 13488  0B14  2B23               	goto	l8287
 13489  0B15                     u7980:
 13490  0B15                     l8281:
 13491  0B15  3000               	movlw	0
 13492  0B16  00D7               	movwf	(___fladd@b+3)^(0+128)
 13493  0B17  3000               	movlw	0
 13494  0B18  00D6               	movwf	(___fladd@b+2)^(0+128)
 13495  0B19  3000               	movlw	0
 13496  0B1A  00D5               	movwf	(___fladd@b+1)^(0+128)
 13497  0B1B  3000               	movlw	0
 13498  0B1C  00D4               	movwf	___fladd@b^(0+128)
 13499  0B1D                     l8283:
 13500  0B1D  0866               	movf	___fladd@bexp^(0+128),w
 13501  0B1E  1D03               	btfss	3,2
 13502  0B1F  2B21               	goto	u7991
 13503  0B20  2B22               	goto	u7990
 13504  0B21                     u7991:
 13505  0B21  2B23               	goto	l8287
 13506  0B22                     u7990:
 13507  0B22                     l8285:
 13508  0B22  01E4               	clrf	___fladd@signs^(0+128)
 13509  0B23                     l8287:
 13510  0B23  1C66               	btfss	___fladd@bexp^(0+128),0
 13511  0B24  2B26               	goto	u8001
 13512  0B25  2B27               	goto	u8000
 13513  0B26                     u8001:
 13514  0B26  2B29               	goto	l8291
 13515  0B27                     u8000:
 13516  0B27                     l8289:
 13517  0B27  17D6               	bsf	(___fladd@b^(0+128)+2),7
 13518  0B28  2B2D               	goto	l2188
 13519  0B29                     l8291:
 13520  0B29  307F               	movlw	127
 13521  0B2A  00DC               	movwf	??___fladd^(0+128)
 13522  0B2B  085C               	movf	??___fladd^(0+128),w
 13523  0B2C  05D6               	andwf	(___fladd@b^(0+128)+2),f
 13524  0B2D                     l2188:
 13525  0B2D  3666               	lsrf	___fladd@bexp^(0+128),w
 13526  0B2E  00DC               	movwf	??___fladd^(0+128)
 13527  0B2F  085C               	movf	??___fladd^(0+128),w
 13528  0B30  00D7               	movwf	(___fladd@b^(0+128)+3)
 13529  0B31                     l8293:
 13530  0B31  1FE4               	btfss	___fladd@signs^(0+128),7
 13531  0B32  2B34               	goto	u8011
 13532  0B33  2B35               	goto	u8010
 13533  0B34                     u8011:
 13534  0B34  2B36               	goto	l2189
 13535  0B35                     u8010:
 13536  0B35                     l8295:
 13537  0B35  17D7               	bsf	(___fladd@b^(0+128)+3),7
 13538  0B36                     l2189:
 13539  0B36                     l2159:
 13540  0B36  0008               	return
 13541  0B37                     __end_of___fladd:
 13542                           
 13543                           	psect	text41
 13544  1000                     __ptext41:	
 13545 ;; *************** function ___flneg *****************
 13546 ;; Defined at:
 13547 ;;		line 15 in file "D:\MPLAB XC8\pic\sources\c99\common\flneg.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;  f1              4   14[BANK0 ] unsigned char 
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;		None
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  4   14[BANK0 ] unsigned char 
 13554 ;; Registers used:
 13555 ;;		wreg
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13564 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13565 ;;Total ram usage:        4 bytes
 13566 ;; Hardware stack levels used: 1
 13567 ;; Hardware stack levels required when called: 5
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_KE
 13572 ;;		_ManualControl
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576                           
 13577                           ;psect for function ___flneg
 13578  1000                     ___flneg:
 13579  1000                     l8343:	
 13580                           ;incstack = 0
 13581                           ; Regs used in ___flneg: [wreg]
 13582                           
 13583  1000  0020               	movlb	0	; select bank0
 13584  1001  0831               	movf	___flneg@f1+3,w
 13585  1002  0430               	iorwf	___flneg@f1+2,w
 13586  1003  042F               	iorwf	___flneg@f1+1,w
 13587  1004  042E               	iorwf	___flneg@f1,w
 13588  1005  1903               	skipnz
 13589  1006  2808               	goto	u8131
 13590  1007  2809               	goto	u8130
 13591  1008                     u8131:
 13592  1008  280B               	goto	l8347
 13593  1009                     u8130:
 13594  1009                     l8345:
 13595  1009  3080               	movlw	128
 13596  100A  06B1               	xorwf	___flneg@f1+3,f
 13597  100B                     l8347:
 13598  100B                     l2035:
 13599  100B  0008               	return
 13600  100C                     __end_of___flneg:
 13601                           
 13602                           	psect	text42
 13603  0D7C                     __ptext42:	
 13604 ;; *************** function ___flmul *****************
 13605 ;; Defined at:
 13606 ;;		line 8 in file "D:\MPLAB XC8\pic\sources\c99\common\sprcmul.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;  b               4    0[BANK1 ] unsigned char 
 13609 ;;  a               4    4[BANK1 ] unsigned char 
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;  prod            4   20[BANK1 ] struct .
 13612 ;;  grs             4   15[BANK1 ] unsigned long 
 13613 ;;  temp            2   24[BANK1 ] struct .
 13614 ;;  bexp            1   19[BANK1 ] unsigned char 
 13615 ;;  aexp            1   14[BANK1 ] unsigned char 
 13616 ;;  sign            1   13[BANK1 ] unsigned char 
 13617 ;; Return value:  Size  Location     Type
 13618 ;;                  4    0[BANK1 ] unsigned char 
 13619 ;; Registers used:
 13620 ;;		wreg, status,2, status,0, pclath, cstack
 13621 ;; Tracked objects:
 13622 ;;		On entry : 0/0
 13623 ;;		On exit  : 0/0
 13624 ;;		Unchanged: 0/0
 13625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13626 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;Total ram usage:       26 bytes
 13631 ;; Hardware stack levels used: 1
 13632 ;; Hardware stack levels required when called: 6
 13633 ;; This function calls:
 13634 ;;		__Umul8_16
 13635 ;; This function is called by:
 13636 ;;		_KE
 13637 ;;		_ramp_step_function
 13638 ;;		_AutoCircleControl
 13639 ;;		_AutoLineControl
 13640 ;;		_TimeLapseHandle
 13641 ;;		_distance_sensor_bottom
 13642 ;;		_distance_sensor_top
 13643 ;;		_PID
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           
 13648                           ;psect for function ___flmul
 13649  0D7C                     ___flmul:
 13650  0D7C                     l8533:	
 13651                           ;incstack = 0
 13652                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13653                           
 13654  0D7C  0021               	movlb	1	; select bank1
 13655  0D7D  0823               	movf	(___flmul@b^(0+128)+3),w
 13656  0D7E  3980               	andlw	128
 13657  0D7F  00A8               	movwf	??___flmul^(0+128)
 13658  0D80  0828               	movf	??___flmul^(0+128),w
 13659  0D81  00AD               	movwf	___flmul@sign^(0+128)
 13660  0D82                     l8535:
 13661  0D82  3523               	lslf	(___flmul@b^(0+128)+3),w
 13662  0D83  00A8               	movwf	??___flmul^(0+128)
 13663  0D84  0828               	movf	??___flmul^(0+128),w
 13664  0D85  00B3               	movwf	___flmul@bexp^(0+128)
 13665  0D86                     l8537:
 13666  0D86  1FA2               	btfss	(___flmul@b^(0+128)+2),7
 13667  0D87  2D89               	goto	u8531
 13668  0D88  2D8A               	goto	u8530
 13669  0D89                     u8531:
 13670  0D89  2D8B               	goto	l8541
 13671  0D8A                     u8530:
 13672  0D8A                     l8539:
 13673  0D8A  1433               	bsf	___flmul@bexp^(0+128),0
 13674  0D8B                     l8541:
 13675  0D8B  0833               	movf	___flmul@bexp^(0+128),w
 13676  0D8C  1903               	btfsc	3,2
 13677  0D8D  2D8F               	goto	u8541
 13678  0D8E  2D90               	goto	u8540
 13679  0D8F                     u8541:
 13680  0D8F  2D9F               	goto	l8549
 13681  0D90                     u8540:
 13682  0D90                     l8543:
 13683  0D90  0A33               	incf	___flmul@bexp^(0+128),w
 13684  0D91  1D03               	btfss	3,2
 13685  0D92  2D94               	goto	u8551
 13686  0D93  2D95               	goto	u8550
 13687  0D94                     u8551:
 13688  0D94  2D9D               	goto	l8547
 13689  0D95                     u8550:
 13690  0D95                     l8545:
 13691  0D95  3000               	movlw	0
 13692  0D96  00A3               	movwf	(___flmul@b+3)^(0+128)
 13693  0D97  3000               	movlw	0
 13694  0D98  00A2               	movwf	(___flmul@b+2)^(0+128)
 13695  0D99  3000               	movlw	0
 13696  0D9A  00A1               	movwf	(___flmul@b+1)^(0+128)
 13697  0D9B  3000               	movlw	0
 13698  0D9C  00A0               	movwf	___flmul@b^(0+128)
 13699  0D9D                     l8547:
 13700  0D9D  17A2               	bsf	(___flmul@b^(0+128)+2),7
 13701  0D9E  2DA7               	goto	l8551
 13702  0D9F                     l8549:
 13703  0D9F  3000               	movlw	0
 13704  0DA0  00A3               	movwf	(___flmul@b+3)^(0+128)
 13705  0DA1  3000               	movlw	0
 13706  0DA2  00A2               	movwf	(___flmul@b+2)^(0+128)
 13707  0DA3  3000               	movlw	0
 13708  0DA4  00A1               	movwf	(___flmul@b+1)^(0+128)
 13709  0DA5  3000               	movlw	0
 13710  0DA6  00A0               	movwf	___flmul@b^(0+128)
 13711  0DA7                     l8551:
 13712  0DA7  0827               	movf	(___flmul@a^(0+128)+3),w
 13713  0DA8  3980               	andlw	128
 13714  0DA9  00A8               	movwf	??___flmul^(0+128)
 13715  0DAA  0828               	movf	??___flmul^(0+128),w
 13716  0DAB  06AD               	xorwf	___flmul@sign^(0+128),f
 13717  0DAC                     l8553:
 13718  0DAC  3527               	lslf	(___flmul@a^(0+128)+3),w
 13719  0DAD  00A8               	movwf	??___flmul^(0+128)
 13720  0DAE  0828               	movf	??___flmul^(0+128),w
 13721  0DAF  00AE               	movwf	___flmul@aexp^(0+128)
 13722  0DB0                     l8555:
 13723  0DB0  1FA6               	btfss	(___flmul@a^(0+128)+2),7
 13724  0DB1  2DB3               	goto	u8561
 13725  0DB2  2DB4               	goto	u8560
 13726  0DB3                     u8561:
 13727  0DB3  2DB5               	goto	l8559
 13728  0DB4                     u8560:
 13729  0DB4                     l8557:
 13730  0DB4  142E               	bsf	___flmul@aexp^(0+128),0
 13731  0DB5                     l8559:
 13732  0DB5  082E               	movf	___flmul@aexp^(0+128),w
 13733  0DB6  1903               	btfsc	3,2
 13734  0DB7  2DB9               	goto	u8571
 13735  0DB8  2DBA               	goto	u8570
 13736  0DB9                     u8571:
 13737  0DB9  2DC9               	goto	l8567
 13738  0DBA                     u8570:
 13739  0DBA                     l8561:
 13740  0DBA  0A2E               	incf	___flmul@aexp^(0+128),w
 13741  0DBB  1D03               	btfss	3,2
 13742  0DBC  2DBE               	goto	u8581
 13743  0DBD  2DBF               	goto	u8580
 13744  0DBE                     u8581:
 13745  0DBE  2DC7               	goto	l8565
 13746  0DBF                     u8580:
 13747  0DBF                     l8563:
 13748  0DBF  3000               	movlw	0
 13749  0DC0  00A7               	movwf	(___flmul@a+3)^(0+128)
 13750  0DC1  3000               	movlw	0
 13751  0DC2  00A6               	movwf	(___flmul@a+2)^(0+128)
 13752  0DC3  3000               	movlw	0
 13753  0DC4  00A5               	movwf	(___flmul@a+1)^(0+128)
 13754  0DC5  3000               	movlw	0
 13755  0DC6  00A4               	movwf	___flmul@a^(0+128)
 13756  0DC7                     l8565:
 13757  0DC7  17A6               	bsf	(___flmul@a^(0+128)+2),7
 13758  0DC8  2DD1               	goto	l8569
 13759  0DC9                     l8567:
 13760  0DC9  3000               	movlw	0
 13761  0DCA  00A7               	movwf	(___flmul@a+3)^(0+128)
 13762  0DCB  3000               	movlw	0
 13763  0DCC  00A6               	movwf	(___flmul@a+2)^(0+128)
 13764  0DCD  3000               	movlw	0
 13765  0DCE  00A5               	movwf	(___flmul@a+1)^(0+128)
 13766  0DCF  3000               	movlw	0
 13767  0DD0  00A4               	movwf	___flmul@a^(0+128)
 13768  0DD1                     l8569:
 13769  0DD1  082E               	movf	___flmul@aexp^(0+128),w
 13770  0DD2  1903               	btfsc	3,2
 13771  0DD3  2DD5               	goto	u8591
 13772  0DD4  2DD6               	goto	u8590
 13773  0DD5                     u8591:
 13774  0DD5  2DDB               	goto	l8573
 13775  0DD6                     u8590:
 13776  0DD6                     l8571:
 13777  0DD6  0833               	movf	___flmul@bexp^(0+128),w
 13778  0DD7  1D03               	btfss	3,2
 13779  0DD8  2DDA               	goto	u8601
 13780  0DD9  2DDB               	goto	u8600
 13781  0DDA                     u8601:
 13782  0DDA  2DE4               	goto	l8577
 13783  0DDB                     u8600:
 13784  0DDB                     l8573:
 13785  0DDB  3000               	movlw	0
 13786  0DDC  00A3               	movwf	(?___flmul+3)^(0+128)
 13787  0DDD  3000               	movlw	0
 13788  0DDE  00A2               	movwf	(?___flmul+2)^(0+128)
 13789  0DDF  3000               	movlw	0
 13790  0DE0  00A1               	movwf	(?___flmul+1)^(0+128)
 13791  0DE1  3000               	movlw	0
 13792  0DE2  00A0               	movwf	?___flmul^(0+128)
 13793  0DE3  2FFF               	goto	l2242
 13794  0DE4                     l8577:
 13795  0DE4  0820               	movf	___flmul@b^(0+128),w
 13796  0DE5  00A8               	movwf	??___flmul^(0+128)
 13797  0DE6  0828               	movf	??___flmul^(0+128),w
 13798  0DE7  0020               	movlb	0	; select bank0
 13799  0DE8  00AE               	movwf	__Umul8_16@multiplicand
 13800  0DE9  0021               	movlb	1	; select bank1
 13801  0DEA  0826               	movf	(___flmul@a^(0+128)+2),w
 13802  0DEB  31A7  2738  318D   	fcall	__Umul8_16
 13803  0DEE  0020               	movlb	0	; select bank0
 13804  0DEF  082F               	movf	?__Umul8_16+1,w
 13805  0DF0  0021               	movlb	1	; select bank1
 13806  0DF1  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13807  0DF2  0020               	movlb	0	; select bank0
 13808  0DF3  082E               	movf	?__Umul8_16,w
 13809  0DF4  0021               	movlb	1	; select bank1
 13810  0DF5  00B8               	movwf	___flmul@temp^(0+128)
 13811  0DF6                     l8579:
 13812  0DF6  0838               	movf	___flmul@temp^(0+128),w
 13813  0DF7  00A8               	movwf	??___flmul^(0+128)
 13814  0DF8  01A9               	clrf	(??___flmul^(0+128)+1)
 13815  0DF9  01AA               	clrf	(??___flmul^(0+128)+2)
 13816  0DFA  01AB               	clrf	(??___flmul^(0+128)+3)
 13817  0DFB  082B               	movf	(??___flmul+3)^(0+128),w
 13818  0DFC  00B2               	movwf	(___flmul@grs+3)^(0+128)
 13819  0DFD  082A               	movf	(??___flmul+2)^(0+128),w
 13820  0DFE  00B1               	movwf	(___flmul@grs+2)^(0+128)
 13821  0DFF  0829               	movf	(??___flmul+1)^(0+128),w
 13822  0E00  00B0               	movwf	(___flmul@grs+1)^(0+128)
 13823  0E01  0828               	movf	??___flmul^(0+128),w
 13824  0E02  00AF               	movwf	___flmul@grs^(0+128)
 13825  0E03                     l8581:
 13826  0E03  0839               	movf	(___flmul@temp^(0+128)+1),w
 13827  0E04  00A8               	movwf	??___flmul^(0+128)
 13828  0E05  01A9               	clrf	(??___flmul^(0+128)+1)
 13829  0E06  01AA               	clrf	(??___flmul^(0+128)+2)
 13830  0E07  01AB               	clrf	(??___flmul^(0+128)+3)
 13831  0E08  082B               	movf	(??___flmul+3)^(0+128),w
 13832  0E09  00B7               	movwf	(___flmul@prod+3)^(0+128)
 13833  0E0A  082A               	movf	(??___flmul+2)^(0+128),w
 13834  0E0B  00B6               	movwf	(___flmul@prod+2)^(0+128)
 13835  0E0C  0829               	movf	(??___flmul+1)^(0+128),w
 13836  0E0D  00B5               	movwf	(___flmul@prod+1)^(0+128)
 13837  0E0E  0828               	movf	??___flmul^(0+128),w
 13838  0E0F  00B4               	movwf	___flmul@prod^(0+128)
 13839  0E10  0821               	movf	(___flmul@b^(0+128)+1),w
 13840  0E11  00A8               	movwf	??___flmul^(0+128)
 13841  0E12  0828               	movf	??___flmul^(0+128),w
 13842  0E13  0020               	movlb	0	; select bank0
 13843  0E14  00AE               	movwf	__Umul8_16@multiplicand
 13844  0E15  0021               	movlb	1	; select bank1
 13845  0E16  0825               	movf	(___flmul@a^(0+128)+1),w
 13846  0E17  31A7  2738  318D   	fcall	__Umul8_16
 13847  0E1A  0020               	movlb	0	; select bank0
 13848  0E1B  082F               	movf	?__Umul8_16+1,w
 13849  0E1C  0021               	movlb	1	; select bank1
 13850  0E1D  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13851  0E1E  0020               	movlb	0	; select bank0
 13852  0E1F  082E               	movf	?__Umul8_16,w
 13853  0E20  0021               	movlb	1	; select bank1
 13854  0E21  00B8               	movwf	___flmul@temp^(0+128)
 13855  0E22                     l8583:
 13856  0E22  0838               	movf	___flmul@temp^(0+128),w
 13857  0E23  00A8               	movwf	??___flmul^(0+128)
 13858  0E24  01A9               	clrf	(??___flmul^(0+128)+1)
 13859  0E25  01AA               	clrf	(??___flmul^(0+128)+2)
 13860  0E26  01AB               	clrf	(??___flmul^(0+128)+3)
 13861  0E27  0828               	movf	??___flmul^(0+128),w
 13862  0E28  07AF               	addwf	___flmul@grs^(0+128),f
 13863  0E29  0829               	movf	(??___flmul+1)^(0+128),w
 13864  0E2A  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13865  0E2B  082A               	movf	(??___flmul+2)^(0+128),w
 13866  0E2C  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13867  0E2D  082B               	movf	(??___flmul+3)^(0+128),w
 13868  0E2E  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13869  0E2F                     l8585:
 13870  0E2F  0839               	movf	(___flmul@temp^(0+128)+1),w
 13871  0E30  00A8               	movwf	??___flmul^(0+128)
 13872  0E31  01A9               	clrf	(??___flmul^(0+128)+1)
 13873  0E32  01AA               	clrf	(??___flmul^(0+128)+2)
 13874  0E33  01AB               	clrf	(??___flmul^(0+128)+3)
 13875  0E34  0828               	movf	??___flmul^(0+128),w
 13876  0E35  07B4               	addwf	___flmul@prod^(0+128),f
 13877  0E36  0829               	movf	(??___flmul+1)^(0+128),w
 13878  0E37  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13879  0E38  082A               	movf	(??___flmul+2)^(0+128),w
 13880  0E39  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13881  0E3A  082B               	movf	(??___flmul+3)^(0+128),w
 13882  0E3B  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13883  0E3C  0822               	movf	(___flmul@b^(0+128)+2),w
 13884  0E3D  00A8               	movwf	??___flmul^(0+128)
 13885  0E3E  0828               	movf	??___flmul^(0+128),w
 13886  0E3F  0020               	movlb	0	; select bank0
 13887  0E40  00AE               	movwf	__Umul8_16@multiplicand
 13888  0E41  0021               	movlb	1	; select bank1
 13889  0E42  0824               	movf	___flmul@a^(0+128),w
 13890  0E43  31A7  2738  318D   	fcall	__Umul8_16
 13891  0E46  0020               	movlb	0	; select bank0
 13892  0E47  082F               	movf	?__Umul8_16+1,w
 13893  0E48  0021               	movlb	1	; select bank1
 13894  0E49  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13895  0E4A  0020               	movlb	0	; select bank0
 13896  0E4B  082E               	movf	?__Umul8_16,w
 13897  0E4C  0021               	movlb	1	; select bank1
 13898  0E4D  00B8               	movwf	___flmul@temp^(0+128)
 13899  0E4E                     l8587:
 13900  0E4E  0838               	movf	___flmul@temp^(0+128),w
 13901  0E4F  00A8               	movwf	??___flmul^(0+128)
 13902  0E50  01A9               	clrf	(??___flmul^(0+128)+1)
 13903  0E51  01AA               	clrf	(??___flmul^(0+128)+2)
 13904  0E52  01AB               	clrf	(??___flmul^(0+128)+3)
 13905  0E53  0828               	movf	??___flmul^(0+128),w
 13906  0E54  07AF               	addwf	___flmul@grs^(0+128),f
 13907  0E55  0829               	movf	(??___flmul+1)^(0+128),w
 13908  0E56  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13909  0E57  082A               	movf	(??___flmul+2)^(0+128),w
 13910  0E58  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13911  0E59  082B               	movf	(??___flmul+3)^(0+128),w
 13912  0E5A  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13913  0E5B                     l8589:
 13914  0E5B  0839               	movf	(___flmul@temp^(0+128)+1),w
 13915  0E5C  00A8               	movwf	??___flmul^(0+128)
 13916  0E5D  01A9               	clrf	(??___flmul^(0+128)+1)
 13917  0E5E  01AA               	clrf	(??___flmul^(0+128)+2)
 13918  0E5F  01AB               	clrf	(??___flmul^(0+128)+3)
 13919  0E60  0828               	movf	??___flmul^(0+128),w
 13920  0E61  07B4               	addwf	___flmul@prod^(0+128),f
 13921  0E62  0829               	movf	(??___flmul+1)^(0+128),w
 13922  0E63  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 13923  0E64  082A               	movf	(??___flmul+2)^(0+128),w
 13924  0E65  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 13925  0E66  082B               	movf	(??___flmul+3)^(0+128),w
 13926  0E67  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 13927  0E68                     l8591:
 13928  0E68  3008               	movlw	8
 13929  0E69                     u8615:
 13930  0E69  35AF               	lslf	___flmul@grs^(0+128),f
 13931  0E6A  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 13932  0E6B  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 13933  0E6C  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 13934  0E6D  0B89               	decfsz	9,f
 13935  0E6E  2E69               	goto	u8615
 13936  0E6F                     l8593:
 13937  0E6F  0821               	movf	(___flmul@b^(0+128)+1),w
 13938  0E70  00A8               	movwf	??___flmul^(0+128)
 13939  0E71  0828               	movf	??___flmul^(0+128),w
 13940  0E72  0020               	movlb	0	; select bank0
 13941  0E73  00AE               	movwf	__Umul8_16@multiplicand
 13942  0E74  0021               	movlb	1	; select bank1
 13943  0E75  0824               	movf	___flmul@a^(0+128),w
 13944  0E76  31A7  2738  318D   	fcall	__Umul8_16
 13945  0E79  0020               	movlb	0	; select bank0
 13946  0E7A  082F               	movf	?__Umul8_16+1,w
 13947  0E7B  0021               	movlb	1	; select bank1
 13948  0E7C  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13949  0E7D  0020               	movlb	0	; select bank0
 13950  0E7E  082E               	movf	?__Umul8_16,w
 13951  0E7F  0021               	movlb	1	; select bank1
 13952  0E80  00B8               	movwf	___flmul@temp^(0+128)
 13953  0E81                     l8595:
 13954  0E81  0838               	movf	___flmul@temp^(0+128),w
 13955  0E82  07AF               	addwf	___flmul@grs^(0+128),f
 13956  0E83  0839               	movf	(___flmul@temp+1)^(0+128),w
 13957  0E84  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13958  0E85  3000               	movlw	0
 13959  0E86  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13960  0E87  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13961  0E88                     l8597:
 13962  0E88  0820               	movf	___flmul@b^(0+128),w
 13963  0E89  00A8               	movwf	??___flmul^(0+128)
 13964  0E8A  0828               	movf	??___flmul^(0+128),w
 13965  0E8B  0020               	movlb	0	; select bank0
 13966  0E8C  00AE               	movwf	__Umul8_16@multiplicand
 13967  0E8D  0021               	movlb	1	; select bank1
 13968  0E8E  0825               	movf	(___flmul@a^(0+128)+1),w
 13969  0E8F  31A7  2738  318D   	fcall	__Umul8_16
 13970  0E92  0020               	movlb	0	; select bank0
 13971  0E93  082F               	movf	?__Umul8_16+1,w
 13972  0E94  0021               	movlb	1	; select bank1
 13973  0E95  00B9               	movwf	(___flmul@temp+1)^(0+128)
 13974  0E96  0020               	movlb	0	; select bank0
 13975  0E97  082E               	movf	?__Umul8_16,w
 13976  0E98  0021               	movlb	1	; select bank1
 13977  0E99  00B8               	movwf	___flmul@temp^(0+128)
 13978  0E9A                     l8599:
 13979  0E9A  0838               	movf	___flmul@temp^(0+128),w
 13980  0E9B  07AF               	addwf	___flmul@grs^(0+128),f
 13981  0E9C  0839               	movf	(___flmul@temp+1)^(0+128),w
 13982  0E9D  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 13983  0E9E  3000               	movlw	0
 13984  0E9F  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 13985  0EA0  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 13986  0EA1                     l8601:
 13987  0EA1  3008               	movlw	8
 13988  0EA2                     u8625:
 13989  0EA2  35AF               	lslf	___flmul@grs^(0+128),f
 13990  0EA3  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 13991  0EA4  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 13992  0EA5  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 13993  0EA6  0B89               	decfsz	9,f
 13994  0EA7  2EA2               	goto	u8625
 13995  0EA8  0820               	movf	___flmul@b^(0+128),w
 13996  0EA9  00A8               	movwf	??___flmul^(0+128)
 13997  0EAA  0828               	movf	??___flmul^(0+128),w
 13998  0EAB  0020               	movlb	0	; select bank0
 13999  0EAC  00AE               	movwf	__Umul8_16@multiplicand
 14000  0EAD  0021               	movlb	1	; select bank1
 14001  0EAE  0824               	movf	___flmul@a^(0+128),w
 14002  0EAF  31A7  2738  318D   	fcall	__Umul8_16
 14003  0EB2  0020               	movlb	0	; select bank0
 14004  0EB3  082F               	movf	?__Umul8_16+1,w
 14005  0EB4  0021               	movlb	1	; select bank1
 14006  0EB5  00B9               	movwf	(___flmul@temp+1)^(0+128)
 14007  0EB6  0020               	movlb	0	; select bank0
 14008  0EB7  082E               	movf	?__Umul8_16,w
 14009  0EB8  0021               	movlb	1	; select bank1
 14010  0EB9  00B8               	movwf	___flmul@temp^(0+128)
 14011  0EBA                     l8603:
 14012  0EBA  0838               	movf	___flmul@temp^(0+128),w
 14013  0EBB  07AF               	addwf	___flmul@grs^(0+128),f
 14014  0EBC  0839               	movf	(___flmul@temp+1)^(0+128),w
 14015  0EBD  3DB0               	addwfc	(___flmul@grs+1)^(0+128),f
 14016  0EBE  3000               	movlw	0
 14017  0EBF  3DB1               	addwfc	(___flmul@grs+2)^(0+128),f
 14018  0EC0  3DB2               	addwfc	(___flmul@grs+3)^(0+128),f
 14019  0EC1                     l8605:
 14020  0EC1  0821               	movf	(___flmul@b^(0+128)+1),w
 14021  0EC2  00A8               	movwf	??___flmul^(0+128)
 14022  0EC3  0828               	movf	??___flmul^(0+128),w
 14023  0EC4  0020               	movlb	0	; select bank0
 14024  0EC5  00AE               	movwf	__Umul8_16@multiplicand
 14025  0EC6  0021               	movlb	1	; select bank1
 14026  0EC7  0826               	movf	(___flmul@a^(0+128)+2),w
 14027  0EC8  31A7  2738  318D   	fcall	__Umul8_16
 14028  0ECB  0020               	movlb	0	; select bank0
 14029  0ECC  082F               	movf	?__Umul8_16+1,w
 14030  0ECD  0021               	movlb	1	; select bank1
 14031  0ECE  00B9               	movwf	(___flmul@temp+1)^(0+128)
 14032  0ECF  0020               	movlb	0	; select bank0
 14033  0ED0  082E               	movf	?__Umul8_16,w
 14034  0ED1  0021               	movlb	1	; select bank1
 14035  0ED2  00B8               	movwf	___flmul@temp^(0+128)
 14036  0ED3  0838               	movf	___flmul@temp^(0+128),w
 14037  0ED4  07B4               	addwf	___flmul@prod^(0+128),f
 14038  0ED5  0839               	movf	(___flmul@temp+1)^(0+128),w
 14039  0ED6  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 14040  0ED7  3000               	movlw	0
 14041  0ED8  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 14042  0ED9  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 14043  0EDA                     l8607:
 14044  0EDA  0822               	movf	(___flmul@b^(0+128)+2),w
 14045  0EDB  00A8               	movwf	??___flmul^(0+128)
 14046  0EDC  0828               	movf	??___flmul^(0+128),w
 14047  0EDD  0020               	movlb	0	; select bank0
 14048  0EDE  00AE               	movwf	__Umul8_16@multiplicand
 14049  0EDF  0021               	movlb	1	; select bank1
 14050  0EE0  0825               	movf	(___flmul@a^(0+128)+1),w
 14051  0EE1  31A7  2738  318D   	fcall	__Umul8_16
 14052  0EE4  0020               	movlb	0	; select bank0
 14053  0EE5  082F               	movf	?__Umul8_16+1,w
 14054  0EE6  0021               	movlb	1	; select bank1
 14055  0EE7  00B9               	movwf	(___flmul@temp+1)^(0+128)
 14056  0EE8  0020               	movlb	0	; select bank0
 14057  0EE9  082E               	movf	?__Umul8_16,w
 14058  0EEA  0021               	movlb	1	; select bank1
 14059  0EEB  00B8               	movwf	___flmul@temp^(0+128)
 14060  0EEC                     l8609:
 14061  0EEC  0838               	movf	___flmul@temp^(0+128),w
 14062  0EED  07B4               	addwf	___flmul@prod^(0+128),f
 14063  0EEE  0839               	movf	(___flmul@temp+1)^(0+128),w
 14064  0EEF  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 14065  0EF0  3000               	movlw	0
 14066  0EF1  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 14067  0EF2  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 14068  0EF3  0822               	movf	(___flmul@b^(0+128)+2),w
 14069  0EF4  00A8               	movwf	??___flmul^(0+128)
 14070  0EF5  0828               	movf	??___flmul^(0+128),w
 14071  0EF6  0020               	movlb	0	; select bank0
 14072  0EF7  00AE               	movwf	__Umul8_16@multiplicand
 14073  0EF8  0021               	movlb	1	; select bank1
 14074  0EF9  0826               	movf	(___flmul@a^(0+128)+2),w
 14075  0EFA  31A7  2738  318D   	fcall	__Umul8_16
 14076  0EFD  0020               	movlb	0	; select bank0
 14077  0EFE  082F               	movf	?__Umul8_16+1,w
 14078  0EFF  0021               	movlb	1	; select bank1
 14079  0F00  00B9               	movwf	(___flmul@temp+1)^(0+128)
 14080  0F01  0020               	movlb	0	; select bank0
 14081  0F02  082E               	movf	?__Umul8_16,w
 14082  0F03  0021               	movlb	1	; select bank1
 14083  0F04  00B8               	movwf	___flmul@temp^(0+128)
 14084  0F05                     l8611:
 14085  0F05  0838               	movf	___flmul@temp^(0+128),w
 14086  0F06  00A8               	movwf	??___flmul^(0+128)
 14087  0F07  0839               	movf	(___flmul@temp+1)^(0+128),w
 14088  0F08  00A9               	movwf	(??___flmul^(0+128)+1)
 14089  0F09  01AA               	clrf	(??___flmul^(0+128)+2)
 14090  0F0A  01AB               	clrf	(??___flmul^(0+128)+3)
 14091  0F0B  3008               	movlw	8
 14092  0F0C                     u8635:
 14093  0F0C  35A8               	lslf	??___flmul^(0+128),f
 14094  0F0D  0DA9               	rlf	(??___flmul^(0+128)+1),f
 14095  0F0E  0DAA               	rlf	(??___flmul^(0+128)+2),f
 14096  0F0F  0DAB               	rlf	(??___flmul^(0+128)+3),f
 14097  0F10                     u8630:
 14098  0F10  0B89               	decfsz	9,f
 14099  0F11  2F0C               	goto	u8635
 14100  0F12  0828               	movf	??___flmul^(0+128),w
 14101  0F13  07B4               	addwf	___flmul@prod^(0+128),f
 14102  0F14  0829               	movf	(??___flmul+1)^(0+128),w
 14103  0F15  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 14104  0F16  082A               	movf	(??___flmul+2)^(0+128),w
 14105  0F17  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 14106  0F18  082B               	movf	(??___flmul+3)^(0+128),w
 14107  0F19  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 14108  0F1A                     l8613:
 14109  0F1A  082F               	movf	___flmul@grs^(0+128),w
 14110  0F1B  00A8               	movwf	??___flmul^(0+128)
 14111  0F1C  0830               	movf	(___flmul@grs+1)^(0+128),w
 14112  0F1D  00A9               	movwf	(??___flmul^(0+128)+1)
 14113  0F1E  0831               	movf	(___flmul@grs+2)^(0+128),w
 14114  0F1F  00AA               	movwf	(??___flmul^(0+128)+2)
 14115  0F20  0832               	movf	(___flmul@grs+3)^(0+128),w
 14116  0F21  00AB               	movwf	(??___flmul^(0+128)+3)
 14117  0F22  3018               	movlw	24
 14118  0F23                     u8645:
 14119  0F23  36AB               	lsrf	(??___flmul^(0+128)+3),f
 14120  0F24  0CAA               	rrf	(??___flmul^(0+128)+2),f
 14121  0F25  0CA9               	rrf	(??___flmul^(0+128)+1),f
 14122  0F26  0CA8               	rrf	??___flmul^(0+128),f
 14123  0F27                     u8640:
 14124  0F27  0B89               	decfsz	9,f
 14125  0F28  2F23               	goto	u8645
 14126  0F29  0828               	movf	??___flmul^(0+128),w
 14127  0F2A  07B4               	addwf	___flmul@prod^(0+128),f
 14128  0F2B  0829               	movf	(??___flmul+1)^(0+128),w
 14129  0F2C  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 14130  0F2D  082A               	movf	(??___flmul+2)^(0+128),w
 14131  0F2E  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 14132  0F2F  082B               	movf	(??___flmul+3)^(0+128),w
 14133  0F30  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 14134  0F31                     l8615:
 14135  0F31  3008               	movlw	8
 14136  0F32                     u8655:
 14137  0F32  35AF               	lslf	___flmul@grs^(0+128),f
 14138  0F33  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 14139  0F34  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 14140  0F35  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 14141  0F36  0B89               	decfsz	9,f
 14142  0F37  2F32               	goto	u8655
 14143  0F38                     l8617:
 14144  0F38  0833               	movf	___flmul@bexp^(0+128),w
 14145  0F39  072E               	addwf	___flmul@aexp^(0+128),w
 14146  0F3A  00A8               	movwf	??___flmul^(0+128)
 14147  0F3B  01A9               	clrf	(??___flmul^(0+128)+1)
 14148  0F3C  0DA9               	rlf	(??___flmul+1)^(0+128),f
 14149  0F3D  0828               	movf	??___flmul^(0+128),w
 14150  0F3E  3E82               	addlw	130
 14151  0F3F  00B8               	movwf	___flmul@temp^(0+128)
 14152  0F40  30FF               	movlw	255
 14153  0F41  3D29               	addwfc	(??___flmul+1)^(0+128),w
 14154  0F42  00B9               	movwf	(___flmul@temp+1)^(0+128)
 14155  0F43  2F5B               	goto	l8629
 14156  0F44                     l8619:
 14157  0F44  3001               	movlw	1
 14158  0F45                     u8665:
 14159  0F45  35B4               	lslf	___flmul@prod^(0+128),f
 14160  0F46  0DB5               	rlf	(___flmul@prod+1)^(0+128),f
 14161  0F47  0DB6               	rlf	(___flmul@prod+2)^(0+128),f
 14162  0F48  0DB7               	rlf	(___flmul@prod+3)^(0+128),f
 14163  0F49  0B89               	decfsz	9,f
 14164  0F4A  2F45               	goto	u8665
 14165  0F4B                     l8621:
 14166  0F4B  1FB2               	btfss	(___flmul@grs+3)^(0+128),7
 14167  0F4C  2F4E               	goto	u8671
 14168  0F4D  2F4F               	goto	u8670
 14169  0F4E                     u8671:
 14170  0F4E  2F50               	goto	l8625
 14171  0F4F                     u8670:
 14172  0F4F                     l8623:
 14173  0F4F  1434               	bsf	___flmul@prod^(0+128),0
 14174  0F50                     l8625:
 14175  0F50  3001               	movlw	1
 14176  0F51                     u8685:
 14177  0F51  35AF               	lslf	___flmul@grs^(0+128),f
 14178  0F52  0DB0               	rlf	(___flmul@grs+1)^(0+128),f
 14179  0F53  0DB1               	rlf	(___flmul@grs+2)^(0+128),f
 14180  0F54  0DB2               	rlf	(___flmul@grs+3)^(0+128),f
 14181  0F55  0B89               	decfsz	9,f
 14182  0F56  2F51               	goto	u8685
 14183  0F57                     l8627:
 14184  0F57  30FF               	movlw	255
 14185  0F58  07B8               	addwf	___flmul@temp^(0+128),f
 14186  0F59  30FF               	movlw	255
 14187  0F5A  3DB9               	addwfc	(___flmul@temp+1)^(0+128),f
 14188  0F5B                     l8629:
 14189  0F5B  1FB6               	btfss	(___flmul@prod+2)^(0+128),7
 14190  0F5C  2F5E               	goto	u8691
 14191  0F5D  2F5F               	goto	u8690
 14192  0F5E                     u8691:
 14193  0F5E  2F44               	goto	l8619
 14194  0F5F                     u8690:
 14195  0F5F                     l8631:
 14196  0F5F  01AE               	clrf	___flmul@aexp^(0+128)
 14197  0F60                     l8633:
 14198  0F60  1FB2               	btfss	(___flmul@grs+3)^(0+128),7
 14199  0F61  2F63               	goto	u8701
 14200  0F62  2F64               	goto	u8700
 14201  0F63                     u8701:
 14202  0F63  2F80               	goto	l8641
 14203  0F64                     u8700:
 14204  0F64                     l8635:
 14205  0F64  30FF               	movlw	255
 14206  0F65  052F               	andwf	___flmul@grs^(0+128),w
 14207  0F66  00A8               	movwf	??___flmul^(0+128)
 14208  0F67  30FF               	movlw	255
 14209  0F68  0530               	andwf	(___flmul@grs+1)^(0+128),w
 14210  0F69  00A9               	movwf	(??___flmul^(0+128)+1)
 14211  0F6A  30FF               	movlw	255
 14212  0F6B  0531               	andwf	(___flmul@grs+2)^(0+128),w
 14213  0F6C  00AA               	movwf	(??___flmul^(0+128)+2)
 14214  0F6D  307F               	movlw	127
 14215  0F6E  0532               	andwf	(___flmul@grs+3)^(0+128),w
 14216  0F6F  00AB               	movwf	(??___flmul^(0+128)+3)
 14217  0F70  082B               	movf	(??___flmul+3)^(0+128),w
 14218  0F71  042A               	iorwf	(??___flmul+2)^(0+128),w
 14219  0F72  0429               	iorwf	(??___flmul+1)^(0+128),w
 14220  0F73  0428               	iorwf	??___flmul^(0+128),w
 14221  0F74  1903               	skipnz
 14222  0F75  2F77               	goto	u8711
 14223  0F76  2F78               	goto	u8710
 14224  0F77                     u8711:
 14225  0F77  2F7B               	goto	l2248
 14226  0F78                     u8710:
 14227  0F78                     l8637:
 14228  0F78  01AE               	clrf	___flmul@aexp^(0+128)
 14229  0F79  0AAE               	incf	___flmul@aexp^(0+128),f
 14230  0F7A  2F80               	goto	l8641
 14231  0F7B                     l2248:
 14232  0F7B  1C34               	btfss	___flmul@prod^(0+128),0
 14233  0F7C  2F7E               	goto	u8721
 14234  0F7D  2F7F               	goto	u8720
 14235  0F7E                     u8721:
 14236  0F7E  2F80               	goto	l8641
 14237  0F7F                     u8720:
 14238  0F7F  2F78               	goto	l8637
 14239  0F80                     l8641:
 14240  0F80  082E               	movf	___flmul@aexp^(0+128),w
 14241  0F81  1903               	btfsc	3,2
 14242  0F82  2F84               	goto	u8731
 14243  0F83  2F85               	goto	u8730
 14244  0F84                     u8731:
 14245  0F84  2FAD               	goto	l8651
 14246  0F85                     u8730:
 14247  0F85                     l8643:
 14248  0F85  3001               	movlw	1
 14249  0F86  07B4               	addwf	___flmul@prod^(0+128),f
 14250  0F87  3000               	movlw	0
 14251  0F88  3DB5               	addwfc	(___flmul@prod+1)^(0+128),f
 14252  0F89  3000               	movlw	0
 14253  0F8A  3DB6               	addwfc	(___flmul@prod+2)^(0+128),f
 14254  0F8B  3000               	movlw	0
 14255  0F8C  3DB7               	addwfc	(___flmul@prod+3)^(0+128),f
 14256  0F8D                     l8645:
 14257  0F8D  1C37               	btfss	(___flmul@prod+3)^(0+128),0
 14258  0F8E  2F90               	goto	u8741
 14259  0F8F  2F91               	goto	u8740
 14260  0F90                     u8741:
 14261  0F90  2FAD               	goto	l8651
 14262  0F91                     u8740:
 14263  0F91                     l8647:
 14264  0F91  0834               	movf	___flmul@prod^(0+128),w
 14265  0F92  00A8               	movwf	??___flmul^(0+128)
 14266  0F93  0835               	movf	(___flmul@prod+1)^(0+128),w
 14267  0F94  00A9               	movwf	(??___flmul^(0+128)+1)
 14268  0F95  0836               	movf	(___flmul@prod+2)^(0+128),w
 14269  0F96  00AA               	movwf	(??___flmul^(0+128)+2)
 14270  0F97  0837               	movf	(___flmul@prod+3)^(0+128),w
 14271  0F98  00AB               	movwf	(??___flmul^(0+128)+3)
 14272  0F99  3001               	movlw	1
 14273  0F9A  00AC               	movwf	(??___flmul+4)^(0+128)
 14274  0F9B                     u8755:
 14275  0F9B  37AB               	asrf	(??___flmul^(0+128)+3),f
 14276  0F9C  0CAA               	rrf	(??___flmul^(0+128)+2),f
 14277  0F9D  0CA9               	rrf	(??___flmul^(0+128)+1),f
 14278  0F9E  0CA8               	rrf	??___flmul^(0+128),f
 14279  0F9F                     u8750:
 14280  0F9F  0BAC               	decfsz	(??___flmul+4)^(0+128),f
 14281  0FA0  2F9B               	goto	u8755
 14282  0FA1  082B               	movf	(??___flmul+3)^(0+128),w
 14283  0FA2  00B7               	movwf	(___flmul@prod+3)^(0+128)
 14284  0FA3  082A               	movf	(??___flmul+2)^(0+128),w
 14285  0FA4  00B6               	movwf	(___flmul@prod+2)^(0+128)
 14286  0FA5  0829               	movf	(??___flmul+1)^(0+128),w
 14287  0FA6  00B5               	movwf	(___flmul@prod+1)^(0+128)
 14288  0FA7  0828               	movf	??___flmul^(0+128),w
 14289  0FA8  00B4               	movwf	___flmul@prod^(0+128)
 14290  0FA9                     l8649:
 14291  0FA9  3001               	movlw	1
 14292  0FAA  07B8               	addwf	___flmul@temp^(0+128),f
 14293  0FAB  3000               	movlw	0
 14294  0FAC  3DB9               	addwfc	(___flmul@temp+1)^(0+128),f
 14295  0FAD                     l8651:
 14296  0FAD  0839               	movf	(___flmul@temp+1)^(0+128),w
 14297  0FAE  3A80               	xorlw	128
 14298  0FAF  00A8               	movwf	??___flmul^(0+128)
 14299  0FB0  3080               	movlw	128
 14300  0FB1  0228               	subwf	??___flmul^(0+128),w
 14301  0FB2  1D03               	skipz
 14302  0FB3  2FB6               	goto	u8765
 14303  0FB4  30FF               	movlw	255
 14304  0FB5  0238               	subwf	___flmul@temp^(0+128),w
 14305  0FB6                     u8765:
 14306  0FB6  1C03               	skipc
 14307  0FB7  2FB9               	goto	u8761
 14308  0FB8  2FBA               	goto	u8760
 14309  0FB9                     u8761:
 14310  0FB9  2FC4               	goto	l8655
 14311  0FBA                     u8760:
 14312  0FBA                     l8653:
 14313  0FBA  307F               	movlw	127
 14314  0FBB  0021               	movlb	1	; select bank1
 14315  0FBC  00B7               	movwf	(___flmul@prod+3)^(0+128)
 14316  0FBD  3080               	movlw	128
 14317  0FBE  00B6               	movwf	(___flmul@prod+2)^(0+128)
 14318  0FBF  3000               	movlw	0
 14319  0FC0  00B5               	movwf	(___flmul@prod+1)^(0+128)
 14320  0FC1  3000               	movlw	0
 14321  0FC2  00B4               	movwf	___flmul@prod^(0+128)
 14322  0FC3  2FF3               	goto	l2254
 14323  0FC4                     l8655:
 14324  0FC4  0021               	movlb	1	; select bank1
 14325  0FC5  0839               	movf	(___flmul@temp+1)^(0+128),w
 14326  0FC6  3A80               	xorlw	128
 14327  0FC7  00A8               	movwf	??___flmul^(0+128)
 14328  0FC8  3080               	movlw	128
 14329  0FC9  0228               	subwf	??___flmul^(0+128),w
 14330  0FCA  1D03               	skipz
 14331  0FCB  2FCE               	goto	u8775
 14332  0FCC  3001               	movlw	1
 14333  0FCD  0238               	subwf	___flmul@temp^(0+128),w
 14334  0FCE                     u8775:
 14335  0FCE  1803               	skipnc
 14336  0FCF  2FD1               	goto	u8771
 14337  0FD0  2FD2               	goto	u8770
 14338  0FD1                     u8771:
 14339  0FD1  2FDD               	goto	l8661
 14340  0FD2                     u8770:
 14341  0FD2                     l8657:
 14342  0FD2  3000               	movlw	0
 14343  0FD3  0021               	movlb	1	; select bank1
 14344  0FD4  00B7               	movwf	(___flmul@prod+3)^(0+128)
 14345  0FD5  3000               	movlw	0
 14346  0FD6  00B6               	movwf	(___flmul@prod+2)^(0+128)
 14347  0FD7  3000               	movlw	0
 14348  0FD8  00B5               	movwf	(___flmul@prod+1)^(0+128)
 14349  0FD9  3000               	movlw	0
 14350  0FDA  00B4               	movwf	___flmul@prod^(0+128)
 14351  0FDB                     l8659:
 14352  0FDB  01AD               	clrf	___flmul@sign^(0+128)
 14353  0FDC  2FF3               	goto	l2254
 14354  0FDD                     l8661:
 14355  0FDD  0021               	movlb	1	; select bank1
 14356  0FDE  0838               	movf	___flmul@temp^(0+128),w
 14357  0FDF  00A8               	movwf	??___flmul^(0+128)
 14358  0FE0  0828               	movf	??___flmul^(0+128),w
 14359  0FE1  00B3               	movwf	___flmul@bexp^(0+128)
 14360  0FE2  30FF               	movlw	255
 14361  0FE3  05B4               	andwf	___flmul@prod^(0+128),f
 14362  0FE4  30FF               	movlw	255
 14363  0FE5  05B5               	andwf	(___flmul@prod+1)^(0+128),f
 14364  0FE6  307F               	movlw	127
 14365  0FE7  05B6               	andwf	(___flmul@prod+2)^(0+128),f
 14366  0FE8  3000               	movlw	0
 14367  0FE9  05B7               	andwf	(___flmul@prod+3)^(0+128),f
 14368  0FEA                     l8663:
 14369  0FEA  1C33               	btfss	___flmul@bexp^(0+128),0
 14370  0FEB  2FED               	goto	u8781
 14371  0FEC  2FEE               	goto	u8780
 14372  0FED                     u8781:
 14373  0FED  2FEF               	goto	l8667
 14374  0FEE                     u8780:
 14375  0FEE                     l8665:
 14376  0FEE  17B6               	bsf	(___flmul@prod^(0+128)+2),7
 14377  0FEF                     l8667:
 14378  0FEF  3633               	lsrf	___flmul@bexp^(0+128),w
 14379  0FF0  00A8               	movwf	??___flmul^(0+128)
 14380  0FF1  0828               	movf	??___flmul^(0+128),w
 14381  0FF2  00B7               	movwf	(___flmul@prod^(0+128)+3)
 14382  0FF3                     l2254:
 14383  0FF3  082D               	movf	___flmul@sign^(0+128),w
 14384  0FF4  00A8               	movwf	??___flmul^(0+128)
 14385  0FF5  0828               	movf	??___flmul^(0+128),w
 14386  0FF6  04B7               	iorwf	(___flmul@prod^(0+128)+3),f
 14387  0FF7                     l8669:
 14388  0FF7  0837               	movf	(___flmul@prod+3)^(0+128),w
 14389  0FF8  00A3               	movwf	(?___flmul+3)^(0+128)
 14390  0FF9  0836               	movf	(___flmul@prod+2)^(0+128),w
 14391  0FFA  00A2               	movwf	(?___flmul+2)^(0+128)
 14392  0FFB  0835               	movf	(___flmul@prod+1)^(0+128),w
 14393  0FFC  00A1               	movwf	(?___flmul+1)^(0+128)
 14394  0FFD  0834               	movf	___flmul@prod^(0+128),w
 14395  0FFE  00A0               	movwf	?___flmul^(0+128)
 14396  0FFF                     l2242:
 14397  0FFF  0008               	return
 14398  1000                     __end_of___flmul:
 14399                           
 14400                           	psect	text43
 14401  2738                     __ptext43:	
 14402 ;; *************** function __Umul8_16 *****************
 14403 ;; Defined at:
 14404 ;;		line 4 in file "D:\MPLAB XC8\pic\sources\c99\common\Umul8_16.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;  multiplier      1    wreg     unsigned char 
 14407 ;;  multiplicand    1   14[BANK0 ] unsigned char 
 14408 ;; Auto vars:     Size  Location     Type
 14409 ;;  multiplier      1   22[BANK0 ] unsigned char 
 14410 ;;  word_mpld       2   20[BANK0 ] unsigned int 
 14411 ;;  product         2   18[BANK0 ] unsigned int 
 14412 ;; Return value:  Size  Location     Type
 14413 ;;                  2   14[BANK0 ] unsigned int 
 14414 ;; Registers used:
 14415 ;;		wreg, status,2, status,0
 14416 ;; Tracked objects:
 14417 ;;		On entry : 0/0
 14418 ;;		On exit  : 0/0
 14419 ;;		Unchanged: 0/0
 14420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14421 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14422 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14423 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14424 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14425 ;;Total ram usage:        9 bytes
 14426 ;; Hardware stack levels used: 1
 14427 ;; Hardware stack levels required when called: 5
 14428 ;; This function calls:
 14429 ;;		Nothing
 14430 ;; This function is called by:
 14431 ;;		___flmul
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           
 14436                           ;psect for function __Umul8_16
 14437  2738                     __Umul8_16:
 14438                           
 14439                           ;incstack = 0
 14440                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14441                           ;__Umul8_16@multiplier stored from wreg
 14442  2738  0020               	movlb	0	; select bank0
 14443  2739  00B6               	movwf	__Umul8_16@multiplier
 14444  273A                     l8297:
 14445  273A  01B2               	clrf	__Umul8_16@product
 14446  273B  01B3               	clrf	__Umul8_16@product+1
 14447  273C                     l8299:
 14448  273C  082E               	movf	__Umul8_16@multiplicand,w
 14449  273D  00B0               	movwf	??__Umul8_16
 14450  273E  01B1               	clrf	??__Umul8_16+1
 14451  273F  0830               	movf	??__Umul8_16,w
 14452  2740  00B4               	movwf	__Umul8_16@word_mpld
 14453  2741  0831               	movf	??__Umul8_16+1,w
 14454  2742  00B5               	movwf	__Umul8_16@word_mpld+1
 14455  2743                     l8301:
 14456  2743  1C36               	btfss	__Umul8_16@multiplier,0
 14457  2744  2F46               	goto	u8021
 14458  2745  2F47               	goto	u8020
 14459  2746                     u8021:
 14460  2746  2F4B               	goto	l2261
 14461  2747                     u8020:
 14462  2747                     l8303:
 14463  2747  0834               	movf	__Umul8_16@word_mpld,w
 14464  2748  07B2               	addwf	__Umul8_16@product,f
 14465  2749  0835               	movf	__Umul8_16@word_mpld+1,w
 14466  274A  3DB3               	addwfc	__Umul8_16@product+1,f
 14467  274B                     l2261:
 14468  274B  3001               	movlw	1
 14469  274C                     u8035:
 14470  274C  35B4               	lslf	__Umul8_16@word_mpld,f
 14471  274D  0DB5               	rlf	__Umul8_16@word_mpld+1,f
 14472  274E  0B89               	decfsz	9,f
 14473  274F  2F4C               	goto	u8035
 14474  2750  1003               	clrc
 14475  2751  0CB6               	rrf	__Umul8_16@multiplier,f
 14476  2752                     l8305:
 14477  2752  0836               	movf	__Umul8_16@multiplier,w
 14478  2753  1D03               	btfss	3,2
 14479  2754  2F56               	goto	u8041
 14480  2755  2F57               	goto	u8040
 14481  2756                     u8041:
 14482  2756  2F43               	goto	l8301
 14483  2757                     u8040:
 14484  2757                     l8307:
 14485  2757  0833               	movf	__Umul8_16@product+1,w
 14486  2758  00AF               	movwf	?__Umul8_16+1
 14487  2759  0832               	movf	__Umul8_16@product,w
 14488  275A  00AE               	movwf	?__Umul8_16
 14489  275B                     l2263:
 14490  275B  0008               	return
 14491  275C                     __end_of__Umul8_16:
 14492                           
 14493                           	psect	text44
 14494  1926                     __ptext44:	
 14495 ;; *************** function ___flge *****************
 14496 ;; Defined at:
 14497 ;;		line 4 in file "D:\MPLAB XC8\pic\sources\c99\common\flge.c"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;  ff1             4   26[BANK1 ] unsigned int 
 14500 ;;  ff2             4   30[BANK1 ] unsigned int 
 14501 ;; Auto vars:     Size  Location     Type
 14502 ;;		None
 14503 ;; Return value:  Size  Location     Type
 14504 ;;		None               void
 14505 ;; Registers used:
 14506 ;;		wreg, status,2, status,0
 14507 ;; Tracked objects:
 14508 ;;		On entry : 0/0
 14509 ;;		On exit  : 0/0
 14510 ;;		Unchanged: 0/0
 14511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14512 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;Total ram usage:       12 bytes
 14517 ;; Hardware stack levels used: 1
 14518 ;; Hardware stack levels required when called: 5
 14519 ;; This function calls:
 14520 ;;		Nothing
 14521 ;; This function is called by:
 14522 ;;		_KE
 14523 ;;		_ramp_step_function
 14524 ;;		_ManualControl
 14525 ;;		_PID
 14526 ;; This function uses a non-reentrant model
 14527 ;;
 14528                           
 14529                           
 14530                           ;psect for function ___flge
 14531  1926                     ___flge:
 14532  1926                     l8323:	
 14533                           ;incstack = 0
 14534                           ; Regs used in ___flge: [wreg+status,2+status,0]
 14535                           
 14536  1926  3000               	movlw	0
 14537  1927  0021               	movlb	1	; select bank1
 14538  1928  053A               	andwf	___flge@ff1^(0+128),w
 14539  1929  00C2               	movwf	??___flge^(0+128)
 14540  192A  3000               	movlw	0
 14541  192B  053B               	andwf	(___flge@ff1+1)^(0+128),w
 14542  192C  00C3               	movwf	(??___flge^(0+128)+1)
 14543  192D  3080               	movlw	128
 14544  192E  053C               	andwf	(___flge@ff1+2)^(0+128),w
 14545  192F  00C4               	movwf	(??___flge^(0+128)+2)
 14546  1930  307F               	movlw	127
 14547  1931  053D               	andwf	(___flge@ff1+3)^(0+128),w
 14548  1932  00C5               	movwf	(??___flge^(0+128)+3)
 14549  1933  0845               	movf	(??___flge+3)^(0+128),w
 14550  1934  0444               	iorwf	(??___flge+2)^(0+128),w
 14551  1935  0443               	iorwf	(??___flge+1)^(0+128),w
 14552  1936  0442               	iorwf	??___flge^(0+128),w
 14553  1937  1D03               	skipz
 14554  1938  293A               	goto	u8081
 14555  1939  293B               	goto	u8080
 14556  193A                     u8081:
 14557  193A  2943               	goto	l2023
 14558  193B                     u8080:
 14559  193B                     l8325:
 14560  193B  3000               	movlw	0
 14561  193C  00BD               	movwf	(___flge@ff1+3)^(0+128)
 14562  193D  3000               	movlw	0
 14563  193E  00BC               	movwf	(___flge@ff1+2)^(0+128)
 14564  193F  3000               	movlw	0
 14565  1940  00BB               	movwf	(___flge@ff1+1)^(0+128)
 14566  1941  3000               	movlw	0
 14567  1942  00BA               	movwf	___flge@ff1^(0+128)
 14568  1943                     l2023:
 14569  1943  3000               	movlw	0
 14570  1944  053E               	andwf	___flge@ff2^(0+128),w
 14571  1945  00C2               	movwf	??___flge^(0+128)
 14572  1946  3000               	movlw	0
 14573  1947  053F               	andwf	(___flge@ff2+1)^(0+128),w
 14574  1948  00C3               	movwf	(??___flge^(0+128)+1)
 14575  1949  3080               	movlw	128
 14576  194A  0540               	andwf	(___flge@ff2+2)^(0+128),w
 14577  194B  00C4               	movwf	(??___flge^(0+128)+2)
 14578  194C  307F               	movlw	127
 14579  194D  0541               	andwf	(___flge@ff2+3)^(0+128),w
 14580  194E  00C5               	movwf	(??___flge^(0+128)+3)
 14581  194F  0845               	movf	(??___flge+3)^(0+128),w
 14582  1950  0444               	iorwf	(??___flge+2)^(0+128),w
 14583  1951  0443               	iorwf	(??___flge+1)^(0+128),w
 14584  1952  0442               	iorwf	??___flge^(0+128),w
 14585  1953  1D03               	skipz
 14586  1954  2956               	goto	u8091
 14587  1955  2957               	goto	u8090
 14588  1956                     u8091:
 14589  1956  295F               	goto	l8329
 14590  1957                     u8090:
 14591  1957                     l8327:
 14592  1957  3000               	movlw	0
 14593  1958  00C1               	movwf	(___flge@ff2+3)^(0+128)
 14594  1959  3000               	movlw	0
 14595  195A  00C0               	movwf	(___flge@ff2+2)^(0+128)
 14596  195B  3000               	movlw	0
 14597  195C  00BF               	movwf	(___flge@ff2+1)^(0+128)
 14598  195D  3000               	movlw	0
 14599  195E  00BE               	movwf	___flge@ff2^(0+128)
 14600  195F                     l8329:
 14601  195F  1FBD               	btfss	(___flge@ff1+3)^(0+128),7
 14602  1960  2962               	goto	u8101
 14603  1961  2963               	goto	u8100
 14604  1962                     u8101:
 14605  1962  297B               	goto	l8333
 14606  1963                     u8100:
 14607  1963                     l8331:
 14608  1963  3000               	movlw	0
 14609  1964  00C2               	movwf	??___flge^(0+128)
 14610  1965  3000               	movlw	0
 14611  1966  00C3               	movwf	(??___flge^(0+128)+1)
 14612  1967  3000               	movlw	0
 14613  1968  00C4               	movwf	(??___flge^(0+128)+2)
 14614  1969  3080               	movlw	128
 14615  196A  00C5               	movwf	(??___flge^(0+128)+3)
 14616  196B  083A               	movf	___flge@ff1^(0+128),w
 14617  196C  02C2               	subwf	??___flge^(0+128),f
 14618  196D  083B               	movf	(___flge@ff1+1)^(0+128),w
 14619  196E  3BC3               	subwfb	(??___flge^(0+128)+1),f
 14620  196F  083C               	movf	(___flge@ff1+2)^(0+128),w
 14621  1970  3BC4               	subwfb	(??___flge^(0+128)+2),f
 14622  1971  083D               	movf	(___flge@ff1+3)^(0+128),w
 14623  1972  3BC5               	subwfb	(??___flge^(0+128)+3),f
 14624  1973  0845               	movf	(??___flge+3)^(0+128),w
 14625  1974  00BD               	movwf	(___flge@ff1+3)^(0+128)
 14626  1975  0844               	movf	(??___flge+2)^(0+128),w
 14627  1976  00BC               	movwf	(___flge@ff1+2)^(0+128)
 14628  1977  0843               	movf	(??___flge+1)^(0+128),w
 14629  1978  00BB               	movwf	(___flge@ff1+1)^(0+128)
 14630  1979  0842               	movf	??___flge^(0+128),w
 14631  197A  00BA               	movwf	___flge@ff1^(0+128)
 14632  197B                     l8333:
 14633  197B  1FC1               	btfss	(___flge@ff2+3)^(0+128),7
 14634  197C  297E               	goto	u8111
 14635  197D  297F               	goto	u8110
 14636  197E                     u8111:
 14637  197E  2997               	goto	l2026
 14638  197F                     u8110:
 14639  197F                     l8335:
 14640  197F  3000               	movlw	0
 14641  1980  00C2               	movwf	??___flge^(0+128)
 14642  1981  3000               	movlw	0
 14643  1982  00C3               	movwf	(??___flge^(0+128)+1)
 14644  1983  3000               	movlw	0
 14645  1984  00C4               	movwf	(??___flge^(0+128)+2)
 14646  1985  3080               	movlw	128
 14647  1986  00C5               	movwf	(??___flge^(0+128)+3)
 14648  1987  083E               	movf	___flge@ff2^(0+128),w
 14649  1988  02C2               	subwf	??___flge^(0+128),f
 14650  1989  083F               	movf	(___flge@ff2+1)^(0+128),w
 14651  198A  3BC3               	subwfb	(??___flge^(0+128)+1),f
 14652  198B  0840               	movf	(___flge@ff2+2)^(0+128),w
 14653  198C  3BC4               	subwfb	(??___flge^(0+128)+2),f
 14654  198D  0841               	movf	(___flge@ff2+3)^(0+128),w
 14655  198E  3BC5               	subwfb	(??___flge^(0+128)+3),f
 14656  198F  0845               	movf	(??___flge+3)^(0+128),w
 14657  1990  00C1               	movwf	(___flge@ff2+3)^(0+128)
 14658  1991  0844               	movf	(??___flge+2)^(0+128),w
 14659  1992  00C0               	movwf	(___flge@ff2+2)^(0+128)
 14660  1993  0843               	movf	(??___flge+1)^(0+128),w
 14661  1994  00BF               	movwf	(___flge@ff2+1)^(0+128)
 14662  1995  0842               	movf	??___flge^(0+128),w
 14663  1996  00BE               	movwf	___flge@ff2^(0+128)
 14664  1997                     l2026:
 14665  1997  3080               	movlw	128
 14666  1998  06BD               	xorwf	(___flge@ff1+3)^(0+128),f
 14667  1999  3080               	movlw	128
 14668  199A  06C1               	xorwf	(___flge@ff2+3)^(0+128),f
 14669  199B  0841               	movf	(___flge@ff2+3)^(0+128),w
 14670  199C  023D               	subwf	(___flge@ff1+3)^(0+128),w
 14671  199D  1D03               	skipz
 14672  199E  29A9               	goto	u8125
 14673  199F  0840               	movf	(___flge@ff2+2)^(0+128),w
 14674  19A0  023C               	subwf	(___flge@ff1+2)^(0+128),w
 14675  19A1  1D03               	skipz
 14676  19A2  29A9               	goto	u8125
 14677  19A3  083F               	movf	(___flge@ff2+1)^(0+128),w
 14678  19A4  023B               	subwf	(___flge@ff1+1)^(0+128),w
 14679  19A5  1D03               	skipz
 14680  19A6  29A9               	goto	u8125
 14681  19A7  083E               	movf	___flge@ff2^(0+128),w
 14682  19A8  023A               	subwf	___flge@ff1^(0+128),w
 14683  19A9                     u8125:
 14684  19A9  1803               	skipnc
 14685  19AA  29AC               	goto	u8121
 14686  19AB  29AD               	goto	u8120
 14687  19AC                     u8121:
 14688  19AC  29AF               	goto	l8339
 14689  19AD                     u8120:
 14690  19AD                     l8337:
 14691  19AD  1003               	clrc
 14692  19AE  29B0               	goto	l2031
 14693  19AF                     l8339:
 14694  19AF  1403               	setc
 14695  19B0                     l2031:
 14696  19B0  0008               	return
 14697  19B1                     __end_of___flge:
 14698                           
 14699                           	psect	text45
 14700  0800                     __ptext45:	
 14701 ;; *************** function ___fleq *****************
 14702 ;; Defined at:
 14703 ;;		line 4 in file "D:\MPLAB XC8\pic\sources\c99\common\fleq.c"
 14704 ;; Parameters:    Size  Location     Type
 14705 ;;  ff1             4    0[BANK1 ] unsigned int 
 14706 ;;  ff2             4    4[BANK1 ] unsigned int 
 14707 ;; Auto vars:     Size  Location     Type
 14708 ;;		None
 14709 ;; Return value:  Size  Location     Type
 14710 ;;		None               void
 14711 ;; Registers used:
 14712 ;;		wreg, status,2, status,0
 14713 ;; Tracked objects:
 14714 ;;		On entry : 0/0
 14715 ;;		On exit  : 0/0
 14716 ;;		Unchanged: 0/0
 14717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14718 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14720 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14721 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 14722 ;;Total ram usage:       12 bytes
 14723 ;; Hardware stack levels used: 1
 14724 ;; Hardware stack levels required when called: 5
 14725 ;; This function calls:
 14726 ;;		Nothing
 14727 ;; This function is called by:
 14728 ;;		_KE
 14729 ;;		_ramp_step_function
 14730 ;;		_ManualControl
 14731 ;;		_AutoCircleControl
 14732 ;;		_AutoLineControl
 14733 ;;		_TimeLapseControl
 14734 ;; This function uses a non-reentrant model
 14735 ;;
 14736                           
 14737                           
 14738                           ;psect for function ___fleq
 14739  0800                     ___fleq:
 14740  0800                     l8311:	
 14741                           ;incstack = 0
 14742                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 14743                           
 14744  0800  3000               	movlw	0
 14745  0801  0021               	movlb	1	; select bank1
 14746  0802  0520               	andwf	___fleq@ff1^(0+128),w
 14747  0803  00A8               	movwf	??___fleq^(0+128)
 14748  0804  3000               	movlw	0
 14749  0805  0521               	andwf	(___fleq@ff1+1)^(0+128),w
 14750  0806  00A9               	movwf	(??___fleq^(0+128)+1)
 14751  0807  3080               	movlw	128
 14752  0808  0522               	andwf	(___fleq@ff1+2)^(0+128),w
 14753  0809  00AA               	movwf	(??___fleq^(0+128)+2)
 14754  080A  307F               	movlw	127
 14755  080B  0523               	andwf	(___fleq@ff1+3)^(0+128),w
 14756  080C  00AB               	movwf	(??___fleq^(0+128)+3)
 14757  080D  082B               	movf	(??___fleq+3)^(0+128),w
 14758  080E  042A               	iorwf	(??___fleq+2)^(0+128),w
 14759  080F  0429               	iorwf	(??___fleq+1)^(0+128),w
 14760  0810  0428               	iorwf	??___fleq^(0+128),w
 14761  0811  1D03               	skipz
 14762  0812  2814               	goto	u8051
 14763  0813  2815               	goto	u8050
 14764  0814                     u8051:
 14765  0814  281D               	goto	l2014
 14766  0815                     u8050:
 14767  0815                     l8313:
 14768  0815  3000               	movlw	0
 14769  0816  00A3               	movwf	(___fleq@ff1+3)^(0+128)
 14770  0817  3000               	movlw	0
 14771  0818  00A2               	movwf	(___fleq@ff1+2)^(0+128)
 14772  0819  3000               	movlw	0
 14773  081A  00A1               	movwf	(___fleq@ff1+1)^(0+128)
 14774  081B  3000               	movlw	0
 14775  081C  00A0               	movwf	___fleq@ff1^(0+128)
 14776  081D                     l2014:
 14777  081D  3000               	movlw	0
 14778  081E  0524               	andwf	___fleq@ff2^(0+128),w
 14779  081F  00A8               	movwf	??___fleq^(0+128)
 14780  0820  3000               	movlw	0
 14781  0821  0525               	andwf	(___fleq@ff2+1)^(0+128),w
 14782  0822  00A9               	movwf	(??___fleq^(0+128)+1)
 14783  0823  3080               	movlw	128
 14784  0824  0526               	andwf	(___fleq@ff2+2)^(0+128),w
 14785  0825  00AA               	movwf	(??___fleq^(0+128)+2)
 14786  0826  307F               	movlw	127
 14787  0827  0527               	andwf	(___fleq@ff2+3)^(0+128),w
 14788  0828  00AB               	movwf	(??___fleq^(0+128)+3)
 14789  0829  082B               	movf	(??___fleq+3)^(0+128),w
 14790  082A  042A               	iorwf	(??___fleq+2)^(0+128),w
 14791  082B  0429               	iorwf	(??___fleq+1)^(0+128),w
 14792  082C  0428               	iorwf	??___fleq^(0+128),w
 14793  082D  1D03               	skipz
 14794  082E  2830               	goto	u8061
 14795  082F  2831               	goto	u8060
 14796  0830                     u8061:
 14797  0830  2839               	goto	l2015
 14798  0831                     u8060:
 14799  0831                     l8315:
 14800  0831  3000               	movlw	0
 14801  0832  00A7               	movwf	(___fleq@ff2+3)^(0+128)
 14802  0833  3000               	movlw	0
 14803  0834  00A6               	movwf	(___fleq@ff2+2)^(0+128)
 14804  0835  3000               	movlw	0
 14805  0836  00A5               	movwf	(___fleq@ff2+1)^(0+128)
 14806  0837  3000               	movlw	0
 14807  0838  00A4               	movwf	___fleq@ff2^(0+128)
 14808  0839                     l2015:
 14809  0839  0827               	movf	(___fleq@ff2+3)^(0+128),w
 14810  083A  0623               	xorwf	(___fleq@ff1+3)^(0+128),w
 14811  083B  1D03               	skipz
 14812  083C  2847               	goto	u8075
 14813  083D  0826               	movf	(___fleq@ff2+2)^(0+128),w
 14814  083E  0622               	xorwf	(___fleq@ff1+2)^(0+128),w
 14815  083F  1D03               	skipz
 14816  0840  2847               	goto	u8075
 14817  0841  0825               	movf	(___fleq@ff2+1)^(0+128),w
 14818  0842  0621               	xorwf	(___fleq@ff1+1)^(0+128),w
 14819  0843  1D03               	skipz
 14820  0844  2847               	goto	u8075
 14821  0845  0824               	movf	___fleq@ff2^(0+128),w
 14822  0846  0620               	xorwf	___fleq@ff1^(0+128),w
 14823  0847                     u8075:
 14824  0847  1903               	skipnz
 14825  0848  284A               	goto	u8071
 14826  0849  284B               	goto	u8070
 14827  084A                     u8071:
 14828  084A  284D               	goto	l8319
 14829  084B                     u8070:
 14830  084B                     l8317:
 14831  084B  1003               	clrc
 14832  084C  284E               	goto	l2020
 14833  084D                     l8319:
 14834  084D  1403               	setc
 14835  084E                     l2020:
 14836  084E  0008               	return
 14837  084F                     __end_of___fleq:
 14838                           
 14839                           	psect	text46
 14840  1074                     __ptext46:	
 14841 ;; *************** function ___fldiv *****************
 14842 ;; Defined at:
 14843 ;;		line 8 in file "D:\MPLAB XC8\pic\sources\c99\common\sprcdiv.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;  a               4   26[BANK1 ] unsigned int 
 14846 ;;  b               4   30[BANK1 ] unsigned int 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  grs             4   46[BANK1 ] unsigned long 
 14849 ;;  rem             4   39[BANK1 ] unsigned long 
 14850 ;;  new_exp         2   44[BANK1 ] int 
 14851 ;;  aexp            1   51[BANK1 ] unsigned char 
 14852 ;;  bexp            1   50[BANK1 ] unsigned char 
 14853 ;;  sign            1   43[BANK1 ] unsigned char 
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  4   26[BANK1 ] unsigned char 
 14856 ;; Registers used:
 14857 ;;		wreg, status,2, status,0
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14863 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 14864 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 14865 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 14866 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
 14867 ;;Total ram usage:       26 bytes
 14868 ;; Hardware stack levels used: 1
 14869 ;; Hardware stack levels required when called: 5
 14870 ;; This function calls:
 14871 ;;		Nothing
 14872 ;; This function is called by:
 14873 ;;		_KE
 14874 ;;		_ramp_step_function
 14875 ;;		_AutoCircleControl
 14876 ;;		_AutoLineControl
 14877 ;;		_TimeLapseHandle
 14878 ;;		_distance_sensor_bottom
 14879 ;;		_distance_sensor_top
 14880 ;; This function uses a non-reentrant model
 14881 ;;
 14882                           
 14883                           
 14884                           ;psect for function ___fldiv
 14885  1074                     ___fldiv:
 14886  1074                     l8393:	
 14887                           ;incstack = 0
 14888                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 14889                           
 14890  1074  0021               	movlb	1	; select bank1
 14891  1075  0841               	movf	(___fldiv@b^(0+128)+3),w
 14892  1076  3980               	andlw	128
 14893  1077  00C2               	movwf	??___fldiv^(0+128)
 14894  1078  0842               	movf	??___fldiv^(0+128),w
 14895  1079  00CB               	movwf	___fldiv@sign^(0+128)
 14896  107A                     l8395:
 14897  107A  3541               	lslf	(___fldiv@b^(0+128)+3),w
 14898  107B  00C2               	movwf	??___fldiv^(0+128)
 14899  107C  0842               	movf	??___fldiv^(0+128),w
 14900  107D  00D2               	movwf	___fldiv@bexp^(0+128)
 14901  107E                     l8397:
 14902  107E  1FC0               	btfss	(___fldiv@b^(0+128)+2),7
 14903  107F  2881               	goto	u8241
 14904  1080  2882               	goto	u8240
 14905  1081                     u8241:
 14906  1081  2883               	goto	l8401
 14907  1082                     u8240:
 14908  1082                     l8399:
 14909  1082  1452               	bsf	___fldiv@bexp^(0+128),0
 14910  1083                     l8401:
 14911  1083  0852               	movf	___fldiv@bexp^(0+128),w
 14912  1084  1903               	btfsc	3,2
 14913  1085  2887               	goto	u8251
 14914  1086  2888               	goto	u8250
 14915  1087                     u8251:
 14916  1087  2898               	goto	l8411
 14917  1088                     u8250:
 14918  1088                     l8403:
 14919  1088  0A52               	incf	___fldiv@bexp^(0+128),w
 14920  1089  1D03               	btfss	3,2
 14921  108A  288C               	goto	u8261
 14922  108B  288D               	goto	u8260
 14923  108C                     u8261:
 14924  108C  2895               	goto	l8407
 14925  108D                     u8260:
 14926  108D                     l8405:
 14927  108D  3000               	movlw	0
 14928  108E  00C1               	movwf	(___fldiv@b+3)^(0+128)
 14929  108F  3000               	movlw	0
 14930  1090  00C0               	movwf	(___fldiv@b+2)^(0+128)
 14931  1091  3000               	movlw	0
 14932  1092  00BF               	movwf	(___fldiv@b+1)^(0+128)
 14933  1093  3000               	movlw	0
 14934  1094  00BE               	movwf	___fldiv@b^(0+128)
 14935  1095                     l8407:
 14936  1095  17C0               	bsf	(___fldiv@b^(0+128)+2),7
 14937  1096                     l8409:
 14938  1096  01C1               	clrf	(___fldiv@b^(0+128)+3)
 14939  1097  28A0               	goto	l8413
 14940  1098                     l8411:
 14941  1098  3000               	movlw	0
 14942  1099  00C1               	movwf	(___fldiv@b+3)^(0+128)
 14943  109A  3000               	movlw	0
 14944  109B  00C0               	movwf	(___fldiv@b+2)^(0+128)
 14945  109C  3000               	movlw	0
 14946  109D  00BF               	movwf	(___fldiv@b+1)^(0+128)
 14947  109E  3000               	movlw	0
 14948  109F  00BE               	movwf	___fldiv@b^(0+128)
 14949  10A0                     l8413:
 14950  10A0  083D               	movf	(___fldiv@a^(0+128)+3),w
 14951  10A1  3980               	andlw	128
 14952  10A2  00C2               	movwf	??___fldiv^(0+128)
 14953  10A3  0842               	movf	??___fldiv^(0+128),w
 14954  10A4  06CB               	xorwf	___fldiv@sign^(0+128),f
 14955  10A5                     l8415:
 14956  10A5  353D               	lslf	(___fldiv@a^(0+128)+3),w
 14957  10A6  00C2               	movwf	??___fldiv^(0+128)
 14958  10A7  0842               	movf	??___fldiv^(0+128),w
 14959  10A8  00D3               	movwf	___fldiv@aexp^(0+128)
 14960  10A9                     l8417:
 14961  10A9  1FBC               	btfss	(___fldiv@a^(0+128)+2),7
 14962  10AA  28AC               	goto	u8271
 14963  10AB  28AD               	goto	u8270
 14964  10AC                     u8271:
 14965  10AC  28AE               	goto	l8421
 14966  10AD                     u8270:
 14967  10AD                     l8419:
 14968  10AD  1453               	bsf	___fldiv@aexp^(0+128),0
 14969  10AE                     l8421:
 14970  10AE  0853               	movf	___fldiv@aexp^(0+128),w
 14971  10AF  1903               	btfsc	3,2
 14972  10B0  28B2               	goto	u8281
 14973  10B1  28B3               	goto	u8280
 14974  10B2                     u8281:
 14975  10B2  28C3               	goto	l8431
 14976  10B3                     u8280:
 14977  10B3                     l8423:
 14978  10B3  0A53               	incf	___fldiv@aexp^(0+128),w
 14979  10B4  1D03               	btfss	3,2
 14980  10B5  28B7               	goto	u8291
 14981  10B6  28B8               	goto	u8290
 14982  10B7                     u8291:
 14983  10B7  28C0               	goto	l8427
 14984  10B8                     u8290:
 14985  10B8                     l8425:
 14986  10B8  3000               	movlw	0
 14987  10B9  00BD               	movwf	(___fldiv@a+3)^(0+128)
 14988  10BA  3000               	movlw	0
 14989  10BB  00BC               	movwf	(___fldiv@a+2)^(0+128)
 14990  10BC  3000               	movlw	0
 14991  10BD  00BB               	movwf	(___fldiv@a+1)^(0+128)
 14992  10BE  3000               	movlw	0
 14993  10BF  00BA               	movwf	___fldiv@a^(0+128)
 14994  10C0                     l8427:
 14995  10C0  17BC               	bsf	(___fldiv@a^(0+128)+2),7
 14996  10C1                     l8429:
 14997  10C1  01BD               	clrf	(___fldiv@a^(0+128)+3)
 14998  10C2  28CB               	goto	l2202
 14999  10C3                     l8431:
 15000  10C3  3000               	movlw	0
 15001  10C4  00BD               	movwf	(___fldiv@a+3)^(0+128)
 15002  10C5  3000               	movlw	0
 15003  10C6  00BC               	movwf	(___fldiv@a+2)^(0+128)
 15004  10C7  3000               	movlw	0
 15005  10C8  00BB               	movwf	(___fldiv@a+1)^(0+128)
 15006  10C9  3000               	movlw	0
 15007  10CA  00BA               	movwf	___fldiv@a^(0+128)
 15008  10CB                     l2202:
 15009  10CB  083D               	movf	(___fldiv@a+3)^(0+128),w
 15010  10CC  043C               	iorwf	(___fldiv@a+2)^(0+128),w
 15011  10CD  043B               	iorwf	(___fldiv@a+1)^(0+128),w
 15012  10CE  043A               	iorwf	___fldiv@a^(0+128),w
 15013  10CF  1D03               	skipz
 15014  10D0  28D2               	goto	u8301
 15015  10D1  28D3               	goto	u8300
 15016  10D2                     u8301:
 15017  10D2  28EC               	goto	l8441
 15018  10D3                     u8300:
 15019  10D3                     l8433:
 15020  10D3  3000               	movlw	0
 15021  10D4  00C1               	movwf	(___fldiv@b+3)^(0+128)
 15022  10D5  3000               	movlw	0
 15023  10D6  00C0               	movwf	(___fldiv@b+2)^(0+128)
 15024  10D7  3000               	movlw	0
 15025  10D8  00BF               	movwf	(___fldiv@b+1)^(0+128)
 15026  10D9  3000               	movlw	0
 15027  10DA  00BE               	movwf	___fldiv@b^(0+128)
 15028  10DB  3080               	movlw	128
 15029  10DC  04C0               	iorwf	(___fldiv@b^(0+128)+2),f
 15030  10DD  307F               	movlw	127
 15031  10DE  04C1               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 15032  10DF                     l8435:
 15033  10DF  084B               	movf	___fldiv@sign^(0+128),w
 15034  10E0  00C2               	movwf	??___fldiv^(0+128)
 15035  10E1  0842               	movf	??___fldiv^(0+128),w
 15036  10E2  04C1               	iorwf	(___fldiv@b^(0+128)+3),f
 15037  10E3                     l8437:
 15038  10E3  0841               	movf	(___fldiv@b+3)^(0+128),w
 15039  10E4  00BD               	movwf	(?___fldiv+3)^(0+128)
 15040  10E5  0840               	movf	(___fldiv@b+2)^(0+128),w
 15041  10E6  00BC               	movwf	(?___fldiv+2)^(0+128)
 15042  10E7  083F               	movf	(___fldiv@b+1)^(0+128),w
 15043  10E8  00BB               	movwf	(?___fldiv+1)^(0+128)
 15044  10E9  083E               	movf	___fldiv@b^(0+128),w
 15045  10EA  00BA               	movwf	?___fldiv^(0+128)
 15046  10EB  2A27               	goto	l2204
 15047  10EC                     l8441:
 15048  10EC  0852               	movf	___fldiv@bexp^(0+128),w
 15049  10ED  1D03               	btfss	3,2
 15050  10EE  28F0               	goto	u8311
 15051  10EF  28F1               	goto	u8310
 15052  10F0                     u8311:
 15053  10F0  28FA               	goto	l8447
 15054  10F1                     u8310:
 15055  10F1                     l8443:
 15056  10F1  3000               	movlw	0
 15057  10F2  00BD               	movwf	(?___fldiv+3)^(0+128)
 15058  10F3  3000               	movlw	0
 15059  10F4  00BC               	movwf	(?___fldiv+2)^(0+128)
 15060  10F5  3000               	movlw	0
 15061  10F6  00BB               	movwf	(?___fldiv+1)^(0+128)
 15062  10F7  3000               	movlw	0
 15063  10F8  00BA               	movwf	?___fldiv^(0+128)
 15064  10F9  2A27               	goto	l2204
 15065  10FA                     l8447:
 15066  10FA  0852               	movf	___fldiv@bexp^(0+128),w
 15067  10FB  00C2               	movwf	??___fldiv^(0+128)
 15068  10FC  01C3               	clrf	(??___fldiv^(0+128)+1)
 15069  10FD  0843               	movf	(??___fldiv+1)^(0+128),w
 15070  10FE  00C5               	movwf	((??___fldiv+2)^(0+128)+1)
 15071  10FF  0853               	movf	___fldiv@aexp^(0+128),w
 15072  1100  0242               	subwf	??___fldiv^(0+128),w
 15073  1101  00C4               	movwf	(??___fldiv+2)^(0+128)
 15074  1102  1C03               	skipc
 15075  1103  03C5               	decf	((??___fldiv+2)^(0+128)+1),f
 15076  1104  0844               	movf	(??___fldiv+2)^(0+128),w
 15077  1105  3E7F               	addlw	127
 15078  1106  00CC               	movwf	___fldiv@new_exp^(0+128)
 15079  1107  3000               	movlw	0
 15080  1108  3D45               	addwfc	(??___fldiv+3)^(0+128),w
 15081  1109  00CD               	movwf	(___fldiv@new_exp+1)^(0+128)
 15082  110A                     l8449:
 15083  110A  0841               	movf	(___fldiv@b+3)^(0+128),w
 15084  110B  00CA               	movwf	(___fldiv@rem+3)^(0+128)
 15085  110C  0840               	movf	(___fldiv@b+2)^(0+128),w
 15086  110D  00C9               	movwf	(___fldiv@rem+2)^(0+128)
 15087  110E  083F               	movf	(___fldiv@b+1)^(0+128),w
 15088  110F  00C8               	movwf	(___fldiv@rem+1)^(0+128)
 15089  1110  083E               	movf	___fldiv@b^(0+128),w
 15090  1111  00C7               	movwf	___fldiv@rem^(0+128)
 15091  1112                     l8451:
 15092  1112  3000               	movlw	0
 15093  1113  00C1               	movwf	(___fldiv@b+3)^(0+128)
 15094  1114  3000               	movlw	0
 15095  1115  00C0               	movwf	(___fldiv@b+2)^(0+128)
 15096  1116  3000               	movlw	0
 15097  1117  00BF               	movwf	(___fldiv@b+1)^(0+128)
 15098  1118  3000               	movlw	0
 15099  1119  00BE               	movwf	___fldiv@b^(0+128)
 15100  111A                     l8453:
 15101  111A  3000               	movlw	0
 15102  111B  00D1               	movwf	(___fldiv@grs+3)^(0+128)
 15103  111C  3000               	movlw	0
 15104  111D  00D0               	movwf	(___fldiv@grs+2)^(0+128)
 15105  111E  3000               	movlw	0
 15106  111F  00CF               	movwf	(___fldiv@grs+1)^(0+128)
 15107  1120  3000               	movlw	0
 15108  1121  00CE               	movwf	___fldiv@grs^(0+128)
 15109  1122                     l8455:
 15110  1122  01D3               	clrf	___fldiv@aexp^(0+128)
 15111  1123  2962               	goto	l8475
 15112  1124                     l8457:
 15113  1124  0853               	movf	___fldiv@aexp^(0+128),w
 15114  1125  1903               	btfsc	3,2
 15115  1126  2928               	goto	u8321
 15116  1127  2929               	goto	u8320
 15117  1128                     u8321:
 15118  1128  2943               	goto	l8467
 15119  1129                     u8320:
 15120  1129                     l8459:
 15121  1129  3001               	movlw	1
 15122  112A                     u8335:
 15123  112A  35C7               	lslf	___fldiv@rem^(0+128),f
 15124  112B  0DC8               	rlf	(___fldiv@rem+1)^(0+128),f
 15125  112C  0DC9               	rlf	(___fldiv@rem+2)^(0+128),f
 15126  112D  0DCA               	rlf	(___fldiv@rem+3)^(0+128),f
 15127  112E  0B89               	decfsz	9,f
 15128  112F  292A               	goto	u8335
 15129  1130  3001               	movlw	1
 15130  1131                     u8345:
 15131  1131  35BE               	lslf	___fldiv@b^(0+128),f
 15132  1132  0DBF               	rlf	(___fldiv@b+1)^(0+128),f
 15133  1133  0DC0               	rlf	(___fldiv@b+2)^(0+128),f
 15134  1134  0DC1               	rlf	(___fldiv@b+3)^(0+128),f
 15135  1135  0B89               	decfsz	9,f
 15136  1136  2931               	goto	u8345
 15137  1137                     l8461:
 15138  1137  1FD1               	btfss	(___fldiv@grs+3)^(0+128),7
 15139  1138  293A               	goto	u8351
 15140  1139  293B               	goto	u8350
 15141  113A                     u8351:
 15142  113A  293C               	goto	l8465
 15143  113B                     u8350:
 15144  113B                     l8463:
 15145  113B  143E               	bsf	___fldiv@b^(0+128),0
 15146  113C                     l8465:
 15147  113C  3001               	movlw	1
 15148  113D                     u8365:
 15149  113D  35CE               	lslf	___fldiv@grs^(0+128),f
 15150  113E  0DCF               	rlf	(___fldiv@grs+1)^(0+128),f
 15151  113F  0DD0               	rlf	(___fldiv@grs+2)^(0+128),f
 15152  1140  0DD1               	rlf	(___fldiv@grs+3)^(0+128),f
 15153  1141  0B89               	decfsz	9,f
 15154  1142  293D               	goto	u8365
 15155  1143                     l8467:
 15156  1143  083D               	movf	(___fldiv@a+3)^(0+128),w
 15157  1144  024A               	subwf	(___fldiv@rem+3)^(0+128),w
 15158  1145  1D03               	skipz
 15159  1146  2951               	goto	u8375
 15160  1147  083C               	movf	(___fldiv@a+2)^(0+128),w
 15161  1148  0249               	subwf	(___fldiv@rem+2)^(0+128),w
 15162  1149  1D03               	skipz
 15163  114A  2951               	goto	u8375
 15164  114B  083B               	movf	(___fldiv@a+1)^(0+128),w
 15165  114C  0248               	subwf	(___fldiv@rem+1)^(0+128),w
 15166  114D  1D03               	skipz
 15167  114E  2951               	goto	u8375
 15168  114F  083A               	movf	___fldiv@a^(0+128),w
 15169  1150  0247               	subwf	___fldiv@rem^(0+128),w
 15170  1151                     u8375:
 15171  1151  1C03               	skipc
 15172  1152  2954               	goto	u8371
 15173  1153  2955               	goto	u8370
 15174  1154                     u8371:
 15175  1154  295E               	goto	l8473
 15176  1155                     u8370:
 15177  1155                     l8469:
 15178  1155  1751               	bsf	(___fldiv@grs^(0+128)+3),6
 15179  1156                     l8471:
 15180  1156  083A               	movf	___fldiv@a^(0+128),w
 15181  1157  02C7               	subwf	___fldiv@rem^(0+128),f
 15182  1158  083B               	movf	(___fldiv@a+1)^(0+128),w
 15183  1159  3BC8               	subwfb	(___fldiv@rem+1)^(0+128),f
 15184  115A  083C               	movf	(___fldiv@a+2)^(0+128),w
 15185  115B  3BC9               	subwfb	(___fldiv@rem+2)^(0+128),f
 15186  115C  083D               	movf	(___fldiv@a+3)^(0+128),w
 15187  115D  3BCA               	subwfb	(___fldiv@rem+3)^(0+128),f
 15188  115E                     l8473:
 15189  115E  3001               	movlw	1
 15190  115F  00C2               	movwf	??___fldiv^(0+128)
 15191  1160  0842               	movf	??___fldiv^(0+128),w
 15192  1161  07D3               	addwf	___fldiv@aexp^(0+128),f
 15193  1162                     l8475:
 15194  1162  301A               	movlw	26
 15195  1163  0253               	subwf	___fldiv@aexp^(0+128),w
 15196  1164  1C03               	skipc
 15197  1165  2967               	goto	u8381
 15198  1166  2968               	goto	u8380
 15199  1167                     u8381:
 15200  1167  2924               	goto	l8457
 15201  1168                     u8380:
 15202  1168                     l8477:
 15203  1168  084A               	movf	(___fldiv@rem+3)^(0+128),w
 15204  1169  0449               	iorwf	(___fldiv@rem+2)^(0+128),w
 15205  116A  0448               	iorwf	(___fldiv@rem+1)^(0+128),w
 15206  116B  0447               	iorwf	___fldiv@rem^(0+128),w
 15207  116C  1903               	skipnz
 15208  116D  296F               	goto	u8391
 15209  116E  2970               	goto	u8390
 15210  116F                     u8391:
 15211  116F  2989               	goto	l8491
 15212  1170                     u8390:
 15213  1170                     l8479:
 15214  1170  144E               	bsf	___fldiv@grs^(0+128),0
 15215  1171  2989               	goto	l8491
 15216  1172                     l8481:
 15217  1172  3001               	movlw	1
 15218  1173                     u8405:
 15219  1173  35BE               	lslf	___fldiv@b^(0+128),f
 15220  1174  0DBF               	rlf	(___fldiv@b+1)^(0+128),f
 15221  1175  0DC0               	rlf	(___fldiv@b+2)^(0+128),f
 15222  1176  0DC1               	rlf	(___fldiv@b+3)^(0+128),f
 15223  1177  0B89               	decfsz	9,f
 15224  1178  2973               	goto	u8405
 15225  1179                     l8483:
 15226  1179  1FD1               	btfss	(___fldiv@grs+3)^(0+128),7
 15227  117A  297C               	goto	u8411
 15228  117B  297D               	goto	u8410
 15229  117C                     u8411:
 15230  117C  297E               	goto	l8487
 15231  117D                     u8410:
 15232  117D                     l8485:
 15233  117D  143E               	bsf	___fldiv@b^(0+128),0
 15234  117E                     l8487:
 15235  117E  3001               	movlw	1
 15236  117F                     u8425:
 15237  117F  35CE               	lslf	___fldiv@grs^(0+128),f
 15238  1180  0DCF               	rlf	(___fldiv@grs+1)^(0+128),f
 15239  1181  0DD0               	rlf	(___fldiv@grs+2)^(0+128),f
 15240  1182  0DD1               	rlf	(___fldiv@grs+3)^(0+128),f
 15241  1183  0B89               	decfsz	9,f
 15242  1184  297F               	goto	u8425
 15243  1185                     l8489:
 15244  1185  30FF               	movlw	255
 15245  1186  07CC               	addwf	___fldiv@new_exp^(0+128),f
 15246  1187  30FF               	movlw	255
 15247  1188  3DCD               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 15248  1189                     l8491:
 15249  1189  1FC0               	btfss	(___fldiv@b+2)^(0+128),7
 15250  118A  298C               	goto	u8431
 15251  118B  298D               	goto	u8430
 15252  118C                     u8431:
 15253  118C  2972               	goto	l8481
 15254  118D                     u8430:
 15255  118D                     l8493:
 15256  118D  01D3               	clrf	___fldiv@aexp^(0+128)
 15257  118E                     l8495:
 15258  118E  1FD1               	btfss	(___fldiv@grs+3)^(0+128),7
 15259  118F  2991               	goto	u8441
 15260  1190  2992               	goto	u8440
 15261  1191                     u8441:
 15262  1191  29AE               	goto	l8503
 15263  1192                     u8440:
 15264  1192                     l8497:
 15265  1192  30FF               	movlw	255
 15266  1193  054E               	andwf	___fldiv@grs^(0+128),w
 15267  1194  00C2               	movwf	??___fldiv^(0+128)
 15268  1195  30FF               	movlw	255
 15269  1196  054F               	andwf	(___fldiv@grs+1)^(0+128),w
 15270  1197  00C3               	movwf	(??___fldiv^(0+128)+1)
 15271  1198  30FF               	movlw	255
 15272  1199  0550               	andwf	(___fldiv@grs+2)^(0+128),w
 15273  119A  00C4               	movwf	(??___fldiv^(0+128)+2)
 15274  119B  307F               	movlw	127
 15275  119C  0551               	andwf	(___fldiv@grs+3)^(0+128),w
 15276  119D  00C5               	movwf	(??___fldiv^(0+128)+3)
 15277  119E  0845               	movf	(??___fldiv+3)^(0+128),w
 15278  119F  0444               	iorwf	(??___fldiv+2)^(0+128),w
 15279  11A0  0443               	iorwf	(??___fldiv+1)^(0+128),w
 15280  11A1  0442               	iorwf	??___fldiv^(0+128),w
 15281  11A2  1903               	skipnz
 15282  11A3  29A5               	goto	u8451
 15283  11A4  29A6               	goto	u8450
 15284  11A5                     u8451:
 15285  11A5  29A9               	goto	l2218
 15286  11A6                     u8450:
 15287  11A6                     l8499:
 15288  11A6  01D3               	clrf	___fldiv@aexp^(0+128)
 15289  11A7  0AD3               	incf	___fldiv@aexp^(0+128),f
 15290  11A8  29AE               	goto	l8503
 15291  11A9                     l2218:
 15292  11A9  1C3E               	btfss	___fldiv@b^(0+128),0
 15293  11AA  29AC               	goto	u8461
 15294  11AB  29AD               	goto	u8460
 15295  11AC                     u8461:
 15296  11AC  29AE               	goto	l8503
 15297  11AD                     u8460:
 15298  11AD  29A6               	goto	l8499
 15299  11AE                     l8503:
 15300  11AE  0853               	movf	___fldiv@aexp^(0+128),w
 15301  11AF  1903               	btfsc	3,2
 15302  11B0  29B2               	goto	u8471
 15303  11B1  29B3               	goto	u8470
 15304  11B2                     u8471:
 15305  11B2  29DB               	goto	l8513
 15306  11B3                     u8470:
 15307  11B3                     l8505:
 15308  11B3  3001               	movlw	1
 15309  11B4  07BE               	addwf	___fldiv@b^(0+128),f
 15310  11B5  3000               	movlw	0
 15311  11B6  3DBF               	addwfc	(___fldiv@b+1)^(0+128),f
 15312  11B7  3000               	movlw	0
 15313  11B8  3DC0               	addwfc	(___fldiv@b+2)^(0+128),f
 15314  11B9  3000               	movlw	0
 15315  11BA  3DC1               	addwfc	(___fldiv@b+3)^(0+128),f
 15316  11BB                     l8507:
 15317  11BB  1C41               	btfss	(___fldiv@b+3)^(0+128),0
 15318  11BC  29BE               	goto	u8481
 15319  11BD  29BF               	goto	u8480
 15320  11BE                     u8481:
 15321  11BE  29DB               	goto	l8513
 15322  11BF                     u8480:
 15323  11BF                     l8509:
 15324  11BF  083E               	movf	___fldiv@b^(0+128),w
 15325  11C0  00C2               	movwf	??___fldiv^(0+128)
 15326  11C1  083F               	movf	(___fldiv@b+1)^(0+128),w
 15327  11C2  00C3               	movwf	(??___fldiv^(0+128)+1)
 15328  11C3  0840               	movf	(___fldiv@b+2)^(0+128),w
 15329  11C4  00C4               	movwf	(??___fldiv^(0+128)+2)
 15330  11C5  0841               	movf	(___fldiv@b+3)^(0+128),w
 15331  11C6  00C5               	movwf	(??___fldiv^(0+128)+3)
 15332  11C7  3001               	movlw	1
 15333  11C8  00C6               	movwf	(??___fldiv+4)^(0+128)
 15334  11C9                     u8495:
 15335  11C9  37C5               	asrf	(??___fldiv^(0+128)+3),f
 15336  11CA  0CC4               	rrf	(??___fldiv^(0+128)+2),f
 15337  11CB  0CC3               	rrf	(??___fldiv^(0+128)+1),f
 15338  11CC  0CC2               	rrf	??___fldiv^(0+128),f
 15339  11CD                     u8490:
 15340  11CD  0BC6               	decfsz	(??___fldiv+4)^(0+128),f
 15341  11CE  29C9               	goto	u8495
 15342  11CF  0845               	movf	(??___fldiv+3)^(0+128),w
 15343  11D0  00C1               	movwf	(___fldiv@b+3)^(0+128)
 15344  11D1  0844               	movf	(??___fldiv+2)^(0+128),w
 15345  11D2  00C0               	movwf	(___fldiv@b+2)^(0+128)
 15346  11D3  0843               	movf	(??___fldiv+1)^(0+128),w
 15347  11D4  00BF               	movwf	(___fldiv@b+1)^(0+128)
 15348  11D5  0842               	movf	??___fldiv^(0+128),w
 15349  11D6  00BE               	movwf	___fldiv@b^(0+128)
 15350  11D7                     l8511:
 15351  11D7  3001               	movlw	1
 15352  11D8  07CC               	addwf	___fldiv@new_exp^(0+128),f
 15353  11D9  3000               	movlw	0
 15354  11DA  3DCD               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 15355  11DB                     l8513:
 15356  11DB  084D               	movf	(___fldiv@new_exp+1)^(0+128),w
 15357  11DC  3A80               	xorlw	128
 15358  11DD  00C2               	movwf	??___fldiv^(0+128)
 15359  11DE  3080               	movlw	128
 15360  11DF  0242               	subwf	??___fldiv^(0+128),w
 15361  11E0  1D03               	skipz
 15362  11E1  29E4               	goto	u8505
 15363  11E2  30FF               	movlw	255
 15364  11E3  024C               	subwf	___fldiv@new_exp^(0+128),w
 15365  11E4                     u8505:
 15366  11E4  1C03               	skipc
 15367  11E5  29E7               	goto	u8501
 15368  11E6  29E8               	goto	u8500
 15369  11E7                     u8501:
 15370  11E7  29F5               	goto	l2223
 15371  11E8                     u8500:
 15372  11E8                     l8515:
 15373  11E8  30FF               	movlw	255
 15374  11E9  0021               	movlb	1	; select bank1
 15375  11EA  00CC               	movwf	___fldiv@new_exp^(0+128)
 15376  11EB  3000               	movlw	0
 15377  11EC  00CD               	movwf	(___fldiv@new_exp^(0+128)+1)
 15378  11ED  3000               	movlw	0
 15379  11EE  00C1               	movwf	(___fldiv@b+3)^(0+128)
 15380  11EF  3000               	movlw	0
 15381  11F0  00C0               	movwf	(___fldiv@b+2)^(0+128)
 15382  11F1  3000               	movlw	0
 15383  11F2  00BF               	movwf	(___fldiv@b+1)^(0+128)
 15384  11F3  3000               	movlw	0
 15385  11F4  00BE               	movwf	___fldiv@b^(0+128)
 15386  11F5                     l2223:
 15387  11F5  0021               	movlb	1	; select bank1
 15388  11F6  084D               	movf	(___fldiv@new_exp+1)^(0+128),w
 15389  11F7  3A80               	xorlw	128
 15390  11F8  00C2               	movwf	??___fldiv^(0+128)
 15391  11F9  3080               	movlw	128
 15392  11FA  0242               	subwf	??___fldiv^(0+128),w
 15393  11FB  1D03               	skipz
 15394  11FC  29FF               	goto	u8515
 15395  11FD  3001               	movlw	1
 15396  11FE  024C               	subwf	___fldiv@new_exp^(0+128),w
 15397  11FF                     u8515:
 15398  11FF  1803               	skipnc
 15399  1200  2A02               	goto	u8511
 15400  1201  2A03               	goto	u8510
 15401  1202                     u8511:
 15402  1202  2A0F               	goto	l2224
 15403  1203                     u8510:
 15404  1203                     l8517:
 15405  1203  0021               	movlb	1	; select bank1
 15406  1204  01CC               	clrf	___fldiv@new_exp^(0+128)
 15407  1205  01CD               	clrf	(___fldiv@new_exp+1)^(0+128)
 15408  1206                     l8519:
 15409  1206  3000               	movlw	0
 15410  1207  00C1               	movwf	(___fldiv@b+3)^(0+128)
 15411  1208  3000               	movlw	0
 15412  1209  00C0               	movwf	(___fldiv@b+2)^(0+128)
 15413  120A  3000               	movlw	0
 15414  120B  00BF               	movwf	(___fldiv@b+1)^(0+128)
 15415  120C  3000               	movlw	0
 15416  120D  00BE               	movwf	___fldiv@b^(0+128)
 15417  120E                     l8521:
 15418  120E  01CB               	clrf	___fldiv@sign^(0+128)
 15419  120F                     l2224:
 15420  120F  0021               	movlb	1	; select bank1
 15421  1210  084C               	movf	___fldiv@new_exp^(0+128),w
 15422  1211  00C2               	movwf	??___fldiv^(0+128)
 15423  1212  0842               	movf	??___fldiv^(0+128),w
 15424  1213  00D2               	movwf	___fldiv@bexp^(0+128)
 15425  1214                     l8523:
 15426  1214  1C52               	btfss	___fldiv@bexp^(0+128),0
 15427  1215  2A17               	goto	u8521
 15428  1216  2A18               	goto	u8520
 15429  1217                     u8521:
 15430  1217  2A1A               	goto	l8527
 15431  1218                     u8520:
 15432  1218                     l8525:
 15433  1218  17C0               	bsf	(___fldiv@b^(0+128)+2),7
 15434  1219  2A1E               	goto	l2226
 15435  121A                     l8527:
 15436  121A  307F               	movlw	127
 15437  121B  00C2               	movwf	??___fldiv^(0+128)
 15438  121C  0842               	movf	??___fldiv^(0+128),w
 15439  121D  05C0               	andwf	(___fldiv@b^(0+128)+2),f
 15440  121E                     l2226:
 15441  121E  3652               	lsrf	___fldiv@bexp^(0+128),w
 15442  121F  00C2               	movwf	??___fldiv^(0+128)
 15443  1220  0842               	movf	??___fldiv^(0+128),w
 15444  1221  00C1               	movwf	(___fldiv@b^(0+128)+3)
 15445  1222  084B               	movf	___fldiv@sign^(0+128),w
 15446  1223  00C2               	movwf	??___fldiv^(0+128)
 15447  1224  0842               	movf	??___fldiv^(0+128),w
 15448  1225  04C1               	iorwf	(___fldiv@b^(0+128)+3),f
 15449  1226  28E3               	goto	l8437
 15450  1227                     l2204:
 15451  1227  0008               	return
 15452  1228                     __end_of___fldiv:
 15453                           
 15454                           	psect	intentry
 15455  0004                     __pintentry:	
 15456 ;; *************** function _INTERRUPT_InterruptManager *****************
 15457 ;; Defined at:
 15458 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;		None
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;		None
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      void 
 15465 ;; Registers used:
 15466 ;;		wreg, status,2, status,0, pclath, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15476 ;;Total ram usage:        0 bytes
 15477 ;; Hardware stack levels used: 1
 15478 ;; Hardware stack levels required when called: 4
 15479 ;; This function calls:
 15480 ;;		_TMR1_ISR
 15481 ;; This function is called by:
 15482 ;;		Interrupt level 1
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486  0004                     _INTERRUPT_InterruptManager:
 15487                           
 15488                           ;incstack = 0
 15489  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15490                           
 15491                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 15492  0005  3180               	pagesel	$
 15493  0006                     i1l7897:
 15494                           
 15495                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 15496  0006  1F0B               	btfss	11,6	;volatile
 15497  0007  2809               	goto	u746_21
 15498  0008  280A               	goto	u746_20
 15499  0009                     u746_21:
 15500  0009  2817               	goto	i1l464
 15501  000A                     u746_20:
 15502  000A                     i1l7899:
 15503                           
 15504                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15505  000A  0021               	movlb	1	; select bank1
 15506  000B  1C11               	btfss	17,0	;volatile
 15507  000C  280E               	goto	u747_21
 15508  000D  280F               	goto	u747_20
 15509  000E                     u747_21:
 15510  000E  2817               	goto	i1l464
 15511  000F                     u747_20:
 15512  000F                     i1l7901:
 15513  000F  0020               	movlb	0	; select bank0
 15514  0010  1C11               	btfss	17,0	;volatile
 15515  0011  2813               	goto	u748_21
 15516  0012  2814               	goto	u748_20
 15517  0013                     u748_21:
 15518  0013  2817               	goto	i1l464
 15519  0014                     u748_20:
 15520  0014                     i1l7903:
 15521                           
 15522                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 15523  0014  31A6  2670  3180   	fcall	_TMR1_ISR
 15524  0017                     i1l464:	
 15525                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 15526                           
 15527  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15528  0018  0009               	retfie
 15529  0019                     __end_of_INTERRUPT_InterruptManager:
 15530                           
 15531                           	psect	text48
 15532  2670                     __ptext48:	
 15533 ;; *************** function _TMR1_ISR *****************
 15534 ;; Defined at:
 15535 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;		None
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;		None
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      void 
 15542 ;; Registers used:
 15543 ;;		wreg, status,2, status,0, pclath, cstack
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;Total ram usage:        0 bytes
 15554 ;; Hardware stack levels used: 1
 15555 ;; Hardware stack levels required when called: 3
 15556 ;; This function calls:
 15557 ;;		_TMR1_CallBack
 15558 ;;		_TMR1_WriteTimer
 15559 ;; This function is called by:
 15560 ;;		_INTERRUPT_InterruptManager
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           
 15565                           ;psect for function _TMR1_ISR
 15566  2670                     _TMR1_ISR:
 15567  2670                     i1l7099:	
 15568                           ;incstack = 0
 15569                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15570                           
 15571                           
 15572                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 15573  2670  0020               	movlb	0	; select bank0
 15574  2671  1011               	bcf	17,0	;volatile
 15575  2672                     i1l7101:
 15576                           
 15577                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 15578  2672  0022               	movlb	2	; select bank2
 15579  2673  086C               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 15580  2674  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15581  2675  086B               	movf	_timer1ReloadVal^(0+256),w	;volatile
 15582  2676  00F0               	movwf	TMR1_WriteTimer@timerVal
 15583  2677  3198  2001  31A6   	fcall	_TMR1_WriteTimer
 15584                           
 15585                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
 15586  267A  31A6  2663  31A6   	fcall	_TMR1_CallBack
 15587  267D                     i1l437:
 15588  267D  0008               	return
 15589  267E                     __end_of_TMR1_ISR:
 15590                           
 15591                           	psect	text49
 15592  1801                     __ptext49:	
 15593 ;; *************** function _TMR1_WriteTimer *****************
 15594 ;; Defined at:
 15595 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15596 ;; Parameters:    Size  Location     Type
 15597 ;;  timerVal        2    0[COMMON] unsigned short 
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;		None
 15600 ;; Return value:  Size  Location     Type
 15601 ;;                  1    wreg      void 
 15602 ;; Registers used:
 15603 ;;		wreg, status,2
 15604 ;; Tracked objects:
 15605 ;;		On entry : 0/0
 15606 ;;		On exit  : 0/0
 15607 ;;		Unchanged: 0/0
 15608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15613 ;;Total ram usage:        2 bytes
 15614 ;; Hardware stack levels used: 1
 15615 ;; This function calls:
 15616 ;;		Nothing
 15617 ;; This function is called by:
 15618 ;;		_TMR1_ISR
 15619 ;;		_TMR1_Reload
 15620 ;; This function uses a non-reentrant model
 15621 ;;
 15622                           
 15623                           
 15624                           ;psect for function _TMR1_WriteTimer
 15625  1801                     _TMR1_WriteTimer:
 15626  1801                     i1l6991:	
 15627                           ;incstack = 0
 15628                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15629                           
 15630                           
 15631                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15632  1801  0020               	movlb	0	; select bank0
 15633  1802  1D18               	btfss	24,2	;volatile
 15634  1803  2805               	goto	u592_21
 15635  1804  2806               	goto	u592_20
 15636  1805                     u592_21:
 15637  1805  280D               	goto	i1l7001
 15638  1806                     u592_20:
 15639  1806                     i1l6993:
 15640                           
 15641                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15642  1806  1018               	bcf	24,0	;volatile
 15643  1807                     i1l6995:
 15644                           
 15645                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15646  1807  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15647  1808  0097               	movwf	23	;volatile
 15648  1809                     i1l6997:
 15649                           
 15650                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15651  1809  0870               	movf	TMR1_WriteTimer@timerVal,w
 15652  180A  0096               	movwf	22	;volatile
 15653  180B                     i1l6999:
 15654                           
 15655                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15656  180B  1418               	bsf	24,0	;volatile
 15657                           
 15658                           ;mcc_generated_files/tmr1.c: 133:     }
 15659  180C  2811               	goto	i1l425
 15660  180D                     i1l7001:
 15661                           
 15662                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15663  180D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15664  180E  0097               	movwf	23	;volatile
 15665  180F                     i1l7003:
 15666                           
 15667                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15668  180F  0870               	movf	TMR1_WriteTimer@timerVal,w
 15669  1810  0096               	movwf	22	;volatile
 15670  1811                     i1l425:
 15671  1811  0008               	return
 15672  1812                     __end_of_TMR1_WriteTimer:
 15673                           
 15674                           	psect	text50
 15675  2663                     __ptext50:	
 15676 ;; *************** function _TMR1_CallBack *****************
 15677 ;; Defined at:
 15678 ;;		line 169 in file "mcc_generated_files/tmr1.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;		None
 15681 ;; Auto vars:     Size  Location     Type
 15682 ;;		None
 15683 ;; Return value:  Size  Location     Type
 15684 ;;                  1    wreg      void 
 15685 ;; Registers used:
 15686 ;;		wreg, status,2, status,0, pclath, cstack
 15687 ;; Tracked objects:
 15688 ;;		On entry : 0/0
 15689 ;;		On exit  : 0/0
 15690 ;;		Unchanged: 0/0
 15691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15696 ;;Total ram usage:        0 bytes
 15697 ;; Hardware stack levels used: 1
 15698 ;; Hardware stack levels required when called: 2
 15699 ;; This function calls:
 15700 ;;		Absolute function
 15701 ;;		_T1_ROBOT_ISR
 15702 ;;		_TMR1_DefaultInterruptHandler
 15703 ;; This function is called by:
 15704 ;;		_TMR1_ISR
 15705 ;; This function uses a non-reentrant model
 15706 ;;
 15707                           
 15708                           
 15709                           ;psect for function _TMR1_CallBack
 15710  2663                     _TMR1_CallBack:
 15711  2663                     i1l7005:	
 15712                           ;incstack = 0
 15713                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15714                           
 15715                           
 15716                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
 15717  2663  0023               	movlb	3	; select bank3
 15718  2664  086E               	movf	_TMR1_InterruptHandler^(0+384),w
 15719  2665  046F               	iorwf	(_TMR1_InterruptHandler+1)^(0+384),w
 15720  2666  1903               	btfsc	3,2
 15721  2667  2E69               	goto	u593_21
 15722  2668  2E6A               	goto	u593_20
 15723  2669                     u593_21:
 15724  2669  2E6F               	goto	i1l441
 15725  266A                     u593_20:
 15726  266A                     i1l7007:
 15727                           
 15728                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
 15729  266A  086F               	movf	(_TMR1_InterruptHandler+1)^(0+384),w
 15730  266B  008A               	movwf	10
 15731  266C  086E               	movf	_TMR1_InterruptHandler^(0+384),w
 15732  266D  000A               	callw
 15733  266E  31A6               	pagesel	$
 15734  266F                     i1l441:
 15735  266F  0008               	return
 15736  2670                     __end_of_TMR1_CallBack:
 15737                           
 15738                           	psect	text51
 15739  0699                     __ptext51:	
 15740 ;; *************** function _T1_ROBOT_ISR *****************
 15741 ;; Defined at:
 15742 ;;		line 115 in file "main.c"
 15743 ;; Parameters:    Size  Location     Type
 15744 ;;		None
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;		None
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      void 
 15749 ;; Registers used:
 15750 ;;		wreg, status,2, status,0, pclath, cstack
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15760 ;;Total ram usage:        2 bytes
 15761 ;; Hardware stack levels used: 1
 15762 ;; Hardware stack levels required when called: 1
 15763 ;; This function calls:
 15764 ;;		i1___flge
 15765 ;;		i1___xxtofl
 15766 ;; This function is called by:
 15767 ;;		_main
 15768 ;;		_TMR1_CallBack
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           
 15773                           ;psect for function _T1_ROBOT_ISR
 15774  0699                     _T1_ROBOT_ISR:
 15775  0699                     i1l6735:	
 15776                           ;incstack = 0
 15777                           ; Regs used in _T1_ROBOT_ISR: [wreg+status,2+status,0+pclath+cstack]
 15778                           
 15779                           
 15780                           ;main.c: 117:     if (t_left != 1000){
 15781  0699  30E8               	movlw	232
 15782  069A  0022               	movlb	2	; select bank2
 15783  069B  0668               	xorwf	_t_left^(0+256),w
 15784  069C  3003               	movlw	3
 15785  069D  1903               	skipnz
 15786  069E  0669               	xorwf	(_t_left+1)^(0+256),w
 15787  069F  1903               	btfsc	3,2
 15788  06A0  2EA2               	goto	u549_21
 15789  06A1  2EA3               	goto	u549_20
 15790  06A2                     u549_21:
 15791  06A2  2EF0               	goto	i1l6745
 15792  06A3                     u549_20:
 15793  06A3                     i1l6737:
 15794                           
 15795                           ;main.c: 118:         if (cntLeft < (float)(t_left/2)) cntLeft++;
 15796  06A3  0023               	movlb	3	; select bank3
 15797  06A4  0864               	movf	_cntLeft^(0+384),w
 15798  06A5  00F0               	movwf	i1___xxtofl@val
 15799  06A6  0865               	movf	(_cntLeft+1)^(0+384),w
 15800  06A7  00F1               	movwf	i1___xxtofl@val+1
 15801  06A8  01F2               	clrf	i1___xxtofl@val+2
 15802  06A9  01F3               	clrf	i1___xxtofl@val+3
 15803  06AA  3000               	movlw	0
 15804  06AB  3199  21B1  3186   	fcall	i1___xxtofl
 15805  06AE  0873               	movf	?i1___xxtofl+3,w
 15806  06AF  0020               	movlb	0	; select bank0
 15807  06B0  00A3               	movwf	i1___flge@ff1+3
 15808  06B1  0872               	movf	?i1___xxtofl+2,w
 15809  06B2  00A2               	movwf	i1___flge@ff1+2
 15810  06B3  0871               	movf	?i1___xxtofl+1,w
 15811  06B4  00A1               	movwf	i1___flge@ff1+1
 15812  06B5  0870               	movf	?i1___xxtofl,w
 15813  06B6  00A0               	movwf	i1___flge@ff1
 15814  06B7  0022               	movlb	2	; select bank2
 15815  06B8  0869               	movf	(_t_left+1)^(0+256),w
 15816  06B9  0020               	movlb	0	; select bank0
 15817  06BA  00AD               	movwf	??_T1_ROBOT_ISR+1
 15818  06BB  0022               	movlb	2	; select bank2
 15819  06BC  0868               	movf	_t_left^(0+256),w
 15820  06BD  0020               	movlb	0	; select bank0
 15821  06BE  00AC               	movwf	??_T1_ROBOT_ISR
 15822  06BF  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 15823  06C0  0CAC               	rrf	??_T1_ROBOT_ISR,f
 15824  06C1  082C               	movf	??_T1_ROBOT_ISR,w
 15825  06C2  00F0               	movwf	i1___xxtofl@val
 15826  06C3  082D               	movf	??_T1_ROBOT_ISR+1,w
 15827  06C4  00F1               	movwf	i1___xxtofl@val+1
 15828  06C5  01F2               	clrf	i1___xxtofl@val+2
 15829  06C6  01F3               	clrf	i1___xxtofl@val+3
 15830  06C7  3000               	movlw	0
 15831  06C8  3199  21B1  3186   	fcall	i1___xxtofl
 15832  06CB  0873               	movf	?i1___xxtofl+3,w
 15833  06CC  0020               	movlb	0	; select bank0
 15834  06CD  00A7               	movwf	i1___flge@ff2+3
 15835  06CE  0872               	movf	?i1___xxtofl+2,w
 15836  06CF  00A6               	movwf	i1___flge@ff2+2
 15837  06D0  0871               	movf	?i1___xxtofl+1,w
 15838  06D1  00A5               	movwf	i1___flge@ff2+1
 15839  06D2  0870               	movf	?i1___xxtofl,w
 15840  06D3  00A4               	movwf	i1___flge@ff2
 15841  06D4  3198  209B  3186   	fcall	i1___flge
 15842  06D7  1803               	btfsc	3,0
 15843  06D8  2EDA               	goto	u550_21
 15844  06D9  2EDB               	goto	u550_20
 15845  06DA                     u550_21:
 15846  06DA  2EE1               	goto	i1l6741
 15847  06DB                     u550_20:
 15848  06DB                     i1l6739:
 15849  06DB  3001               	movlw	1
 15850  06DC  0023               	movlb	3	; select bank3
 15851  06DD  07E4               	addwf	_cntLeft^(0+384),f
 15852  06DE  3000               	movlw	0
 15853  06DF  3DE5               	addwfc	(_cntLeft+1)^(0+384),f
 15854  06E0  2EF0               	goto	i1l6745
 15855  06E1                     i1l6741:
 15856                           
 15857                           ;main.c: 120:             LATFbits.LATF2 = !LATFbits.LATF2;
 15858  06E1  1003               	clrc
 15859  06E2  0027               	movlb	7	; select bank7
 15860  06E3  1D0C               	btfss	12,2	;volatile
 15861  06E4  1403               	setc
 15862  06E5  1803               	btfsc	3,0
 15863  06E6  2EE8               	goto	u551_21
 15864  06E7  2EEB               	goto	u551_20
 15865  06E8                     u551_21:
 15866  06E8  0027               	movlb	7	; select bank7
 15867  06E9  150C               	bsf	12,2	;volatile
 15868  06EA  2EED               	goto	u552_24
 15869  06EB                     u551_20:
 15870  06EB  0027               	movlb	7	; select bank7
 15871  06EC  110C               	bcf	12,2	;volatile
 15872  06ED                     u552_24:
 15873  06ED                     i1l6743:
 15874                           
 15875                           ;main.c: 121:             cntLeft = 0;
 15876  06ED  0023               	movlb	3	; select bank3
 15877  06EE  01E4               	clrf	_cntLeft^(0+384)
 15878  06EF  01E5               	clrf	(_cntLeft+1)^(0+384)
 15879  06F0                     i1l6745:
 15880                           
 15881                           ;main.c: 124:     if (t_right != 1000){
 15882  06F0  30E8               	movlw	232
 15883  06F1  0022               	movlb	2	; select bank2
 15884  06F2  0666               	xorwf	_t_right^(0+256),w
 15885  06F3  3003               	movlw	3
 15886  06F4  1903               	skipnz
 15887  06F5  0667               	xorwf	(_t_right+1)^(0+256),w
 15888  06F6  1903               	btfsc	3,2
 15889  06F7  2EF9               	goto	u553_21
 15890  06F8  2EFA               	goto	u553_20
 15891  06F9                     u553_21:
 15892  06F9  2F47               	goto	i1l6755
 15893  06FA                     u553_20:
 15894  06FA                     i1l6747:
 15895                           
 15896                           ;main.c: 125:         if (cntRight < (float)(t_right/2)) cntRight++;
 15897  06FA  0023               	movlb	3	; select bank3
 15898  06FB  0862               	movf	_cntRight^(0+384),w
 15899  06FC  00F0               	movwf	i1___xxtofl@val
 15900  06FD  0863               	movf	(_cntRight+1)^(0+384),w
 15901  06FE  00F1               	movwf	i1___xxtofl@val+1
 15902  06FF  01F2               	clrf	i1___xxtofl@val+2
 15903  0700  01F3               	clrf	i1___xxtofl@val+3
 15904  0701  3000               	movlw	0
 15905  0702  3199  21B1  3186   	fcall	i1___xxtofl
 15906  0705  0873               	movf	?i1___xxtofl+3,w
 15907  0706  0020               	movlb	0	; select bank0
 15908  0707  00A3               	movwf	i1___flge@ff1+3
 15909  0708  0872               	movf	?i1___xxtofl+2,w
 15910  0709  00A2               	movwf	i1___flge@ff1+2
 15911  070A  0871               	movf	?i1___xxtofl+1,w
 15912  070B  00A1               	movwf	i1___flge@ff1+1
 15913  070C  0870               	movf	?i1___xxtofl,w
 15914  070D  00A0               	movwf	i1___flge@ff1
 15915  070E  0022               	movlb	2	; select bank2
 15916  070F  0867               	movf	(_t_right+1)^(0+256),w
 15917  0710  0020               	movlb	0	; select bank0
 15918  0711  00AD               	movwf	??_T1_ROBOT_ISR+1
 15919  0712  0022               	movlb	2	; select bank2
 15920  0713  0866               	movf	_t_right^(0+256),w
 15921  0714  0020               	movlb	0	; select bank0
 15922  0715  00AC               	movwf	??_T1_ROBOT_ISR
 15923  0716  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 15924  0717  0CAC               	rrf	??_T1_ROBOT_ISR,f
 15925  0718  082C               	movf	??_T1_ROBOT_ISR,w
 15926  0719  00F0               	movwf	i1___xxtofl@val
 15927  071A  082D               	movf	??_T1_ROBOT_ISR+1,w
 15928  071B  00F1               	movwf	i1___xxtofl@val+1
 15929  071C  01F2               	clrf	i1___xxtofl@val+2
 15930  071D  01F3               	clrf	i1___xxtofl@val+3
 15931  071E  3000               	movlw	0
 15932  071F  3199  21B1  3186   	fcall	i1___xxtofl
 15933  0722  0873               	movf	?i1___xxtofl+3,w
 15934  0723  0020               	movlb	0	; select bank0
 15935  0724  00A7               	movwf	i1___flge@ff2+3
 15936  0725  0872               	movf	?i1___xxtofl+2,w
 15937  0726  00A6               	movwf	i1___flge@ff2+2
 15938  0727  0871               	movf	?i1___xxtofl+1,w
 15939  0728  00A5               	movwf	i1___flge@ff2+1
 15940  0729  0870               	movf	?i1___xxtofl,w
 15941  072A  00A4               	movwf	i1___flge@ff2
 15942  072B  3198  209B  3186   	fcall	i1___flge
 15943  072E  1803               	btfsc	3,0
 15944  072F  2F31               	goto	u554_21
 15945  0730  2F32               	goto	u554_20
 15946  0731                     u554_21:
 15947  0731  2F38               	goto	i1l6751
 15948  0732                     u554_20:
 15949  0732                     i1l6749:
 15950  0732  3001               	movlw	1
 15951  0733  0023               	movlb	3	; select bank3
 15952  0734  07E2               	addwf	_cntRight^(0+384),f
 15953  0735  3000               	movlw	0
 15954  0736  3DE3               	addwfc	(_cntRight+1)^(0+384),f
 15955  0737  2F47               	goto	i1l6755
 15956  0738                     i1l6751:
 15957                           
 15958                           ;main.c: 127:             LATFbits.LATF6 = !LATFbits.LATF6;
 15959  0738  1003               	clrc
 15960  0739  0027               	movlb	7	; select bank7
 15961  073A  1F0C               	btfss	12,6	;volatile
 15962  073B  1403               	setc
 15963  073C  1803               	btfsc	3,0
 15964  073D  2F3F               	goto	u555_21
 15965  073E  2F42               	goto	u555_20
 15966  073F                     u555_21:
 15967  073F  0027               	movlb	7	; select bank7
 15968  0740  170C               	bsf	12,6	;volatile
 15969  0741  2F44               	goto	u556_24
 15970  0742                     u555_20:
 15971  0742  0027               	movlb	7	; select bank7
 15972  0743  130C               	bcf	12,6	;volatile
 15973  0744                     u556_24:
 15974  0744                     i1l6753:
 15975                           
 15976                           ;main.c: 128:             cntRight = 0;
 15977  0744  0023               	movlb	3	; select bank3
 15978  0745  01E2               	clrf	_cntRight^(0+384)
 15979  0746  01E3               	clrf	(_cntRight+1)^(0+384)
 15980  0747                     i1l6755:
 15981                           
 15982                           ;main.c: 131:     if (t_dp != 1000){
 15983  0747  30E8               	movlw	232
 15984  0748  0020               	movlb	0	; select bank0
 15985  0749  0660               	xorwf	_t_dp,w
 15986  074A  3003               	movlw	3
 15987  074B  1903               	skipnz
 15988  074C  0661               	xorwf	_t_dp+1,w
 15989  074D  1903               	btfsc	3,2
 15990  074E  2F50               	goto	u557_21
 15991  074F  2F51               	goto	u557_20
 15992  0750                     u557_21:
 15993  0750  2F9E               	goto	i1l6765
 15994  0751                     u557_20:
 15995  0751                     i1l6757:
 15996                           
 15997                           ;main.c: 132:         if (cntDp < (float)(t_dp/8)) cntDp++;
 15998  0751  0023               	movlb	3	; select bank3
 15999  0752  0860               	movf	_cntDp^(0+384),w
 16000  0753  00F0               	movwf	i1___xxtofl@val
 16001  0754  0861               	movf	(_cntDp+1)^(0+384),w
 16002  0755  00F1               	movwf	i1___xxtofl@val+1
 16003  0756  01F2               	clrf	i1___xxtofl@val+2
 16004  0757  01F3               	clrf	i1___xxtofl@val+3
 16005  0758  3000               	movlw	0
 16006  0759  3199  21B1  3186   	fcall	i1___xxtofl
 16007  075C  0873               	movf	?i1___xxtofl+3,w
 16008  075D  0020               	movlb	0	; select bank0
 16009  075E  00A3               	movwf	i1___flge@ff1+3
 16010  075F  0872               	movf	?i1___xxtofl+2,w
 16011  0760  00A2               	movwf	i1___flge@ff1+2
 16012  0761  0871               	movf	?i1___xxtofl+1,w
 16013  0762  00A1               	movwf	i1___flge@ff1+1
 16014  0763  0870               	movf	?i1___xxtofl,w
 16015  0764  00A0               	movwf	i1___flge@ff1
 16016  0765  0861               	movf	_t_dp+1,w
 16017  0766  00AD               	movwf	??_T1_ROBOT_ISR+1
 16018  0767  0860               	movf	_t_dp,w
 16019  0768  00AC               	movwf	??_T1_ROBOT_ISR
 16020  0769  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 16021  076A  0CAC               	rrf	??_T1_ROBOT_ISR,f
 16022  076B  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 16023  076C  0CAC               	rrf	??_T1_ROBOT_ISR,f
 16024  076D  36AD               	lsrf	??_T1_ROBOT_ISR+1,f
 16025  076E  0CAC               	rrf	??_T1_ROBOT_ISR,f
 16026  076F  082C               	movf	??_T1_ROBOT_ISR,w
 16027  0770  00F0               	movwf	i1___xxtofl@val
 16028  0771  082D               	movf	??_T1_ROBOT_ISR+1,w
 16029  0772  00F1               	movwf	i1___xxtofl@val+1
 16030  0773  01F2               	clrf	i1___xxtofl@val+2
 16031  0774  01F3               	clrf	i1___xxtofl@val+3
 16032  0775  3000               	movlw	0
 16033  0776  3199  21B1  3186   	fcall	i1___xxtofl
 16034  0779  0873               	movf	?i1___xxtofl+3,w
 16035  077A  0020               	movlb	0	; select bank0
 16036  077B  00A7               	movwf	i1___flge@ff2+3
 16037  077C  0872               	movf	?i1___xxtofl+2,w
 16038  077D  00A6               	movwf	i1___flge@ff2+2
 16039  077E  0871               	movf	?i1___xxtofl+1,w
 16040  077F  00A5               	movwf	i1___flge@ff2+1
 16041  0780  0870               	movf	?i1___xxtofl,w
 16042  0781  00A4               	movwf	i1___flge@ff2
 16043  0782  3198  209B  3186   	fcall	i1___flge
 16044  0785  1803               	btfsc	3,0
 16045  0786  2F88               	goto	u558_21
 16046  0787  2F89               	goto	u558_20
 16047  0788                     u558_21:
 16048  0788  2F8F               	goto	i1l6761
 16049  0789                     u558_20:
 16050  0789                     i1l6759:
 16051  0789  3001               	movlw	1
 16052  078A  0023               	movlb	3	; select bank3
 16053  078B  07E0               	addwf	_cntDp^(0+384),f
 16054  078C  3000               	movlw	0
 16055  078D  3DE1               	addwfc	(_cntDp+1)^(0+384),f
 16056  078E  2F9E               	goto	i1l6765
 16057  078F                     i1l6761:
 16058                           
 16059                           ;main.c: 134:             LATBbits.LATB1 = !LATBbits.LATB1;
 16060  078F  1003               	clrc
 16061  0790  0022               	movlb	2	; select bank2
 16062  0791  1C8D               	btfss	13,1	;volatile
 16063  0792  1403               	setc
 16064  0793  1803               	btfsc	3,0
 16065  0794  2F96               	goto	u559_21
 16066  0795  2F99               	goto	u559_20
 16067  0796                     u559_21:
 16068  0796  0022               	movlb	2	; select bank2
 16069  0797  148D               	bsf	13,1	;volatile
 16070  0798  2F9B               	goto	u560_24
 16071  0799                     u559_20:
 16072  0799  0022               	movlb	2	; select bank2
 16073  079A  108D               	bcf	13,1	;volatile
 16074  079B                     u560_24:
 16075  079B                     i1l6763:
 16076                           
 16077                           ;main.c: 135:             cntDp = 0;
 16078  079B  0023               	movlb	3	; select bank3
 16079  079C  01E0               	clrf	_cntDp^(0+384)
 16080  079D  01E1               	clrf	(_cntDp+1)^(0+384)
 16081  079E                     i1l6765:
 16082                           
 16083                           ;main.c: 138:     if(cntTime < totalTime) cntTime = cntTime + 1;
 16084  079E  0020               	movlb	0	; select bank0
 16085  079F  0855               	movf	_totalTime+1,w
 16086  07A0  0022               	movlb	2	; select bank2
 16087  07A1  025B               	subwf	(_cntTime+1)^(0+256),w
 16088  07A2  1D03               	skipz
 16089  07A3  2FA8               	goto	u561_25
 16090  07A4  0020               	movlb	0	; select bank0
 16091  07A5  0854               	movf	_totalTime,w
 16092  07A6  0022               	movlb	2	; select bank2
 16093  07A7  025A               	subwf	_cntTime^(0+256),w
 16094  07A8                     u561_25:
 16095  07A8  1803               	skipnc
 16096  07A9  2FAB               	goto	u561_21
 16097  07AA  2FAC               	goto	u561_20
 16098  07AB                     u561_21:
 16099  07AB  2FB3               	goto	i1l6769
 16100  07AC                     u561_20:
 16101  07AC                     i1l6767:
 16102  07AC  085A               	movf	_cntTime^(0+256),w
 16103  07AD  3E01               	addlw	1
 16104  07AE  00DA               	movwf	_cntTime^(0+256)
 16105  07AF  3000               	movlw	0
 16106  07B0  3D5B               	addwfc	(_cntTime+1)^(0+256),w
 16107  07B1  00DB               	movwf	(_cntTime+1)^(0+256)
 16108  07B2  2FCF               	goto	i1l1476
 16109  07B3                     i1l6769:
 16110                           
 16111                           ;main.c: 140:         flag_stop = 0;
 16112  07B3  0020               	movlb	0	; select bank0
 16113  07B4  01D9               	clrf	_flag_stop
 16114  07B5                     i1l6771:
 16115                           
 16116                           ;main.c: 141:         omega_sys = 0;
 16117  07B5  3000               	movlw	0
 16118  07B6  0024               	movlb	4	; select bank4
 16119  07B7  00E5               	movwf	(_omega_sys+3)^(0+512)
 16120  07B8  3000               	movlw	0
 16121  07B9  00E4               	movwf	(_omega_sys+2)^(0+512)
 16122  07BA  3000               	movlw	0
 16123  07BB  00E3               	movwf	(_omega_sys+1)^(0+512)
 16124  07BC  3000               	movlw	0
 16125  07BD  00E2               	movwf	_omega_sys^(0+512)
 16126  07BE                     i1l6773:
 16127                           
 16128                           ;main.c: 142:         velocity_sys = 0;
 16129  07BE  3000               	movlw	0
 16130  07BF  0022               	movlb	2	; select bank2
 16131  07C0  00C7               	movwf	(_velocity_sys+3)^(0+256)
 16132  07C1  3000               	movlw	0
 16133  07C2  00C6               	movwf	(_velocity_sys+2)^(0+256)
 16134  07C3  3000               	movlw	0
 16135  07C4  00C5               	movwf	(_velocity_sys+1)^(0+256)
 16136  07C5  3000               	movlw	0
 16137  07C6  00C4               	movwf	_velocity_sys^(0+256)
 16138  07C7                     i1l6775:
 16139                           
 16140                           ;main.c: 143:         t_left = 1000;
 16141  07C7  30E8               	movlw	232
 16142  07C8  00E8               	movwf	_t_left^(0+256)
 16143  07C9  3003               	movlw	3
 16144  07CA  00E9               	movwf	(_t_left^(0+256)+1)
 16145  07CB                     i1l6777:
 16146                           
 16147                           ;main.c: 144:         t_right = 1000;
 16148  07CB  30E8               	movlw	232
 16149  07CC  00E6               	movwf	_t_right^(0+256)
 16150  07CD  3003               	movlw	3
 16151  07CE  00E7               	movwf	(_t_right^(0+256)+1)
 16152  07CF                     i1l1476:
 16153  07CF  0008               	return
 16154  07D0                     __end_of_T1_ROBOT_ISR:
 16155                           
 16156                           	psect	text52
 16157  1800                     __ptext52:	
 16158 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 16159 ;; Defined at:
 16160 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;		None
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;		None
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      void 
 16167 ;; Registers used:
 16168 ;;		None
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16178 ;;Total ram usage:        0 bytes
 16179 ;; Hardware stack levels used: 1
 16180 ;; This function calls:
 16181 ;;		Nothing
 16182 ;; This function is called by:
 16183 ;;		_TMR1_Initialize
 16184 ;;		_TMR1_CallBack
 16185 ;; This function uses a non-reentrant model
 16186 ;;
 16187                           
 16188                           
 16189                           ;psect for function _TMR1_DefaultInterruptHandler
 16190  1800                     _TMR1_DefaultInterruptHandler:
 16191  1800                     i1l447:	
 16192                           ;incstack = 0
 16193                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 16194                           
 16195  1800  0008               	return
 16196  1801                     __end_of_TMR1_DefaultInterruptHandler:
 16197                           
 16198                           	psect	text53
 16199  19B1                     __ptext53:	
 16200 ;; *************** function i1___xxtofl *****************
 16201 ;; Defined at:
 16202 ;;		line 10 in file "D:\MPLAB XC8\pic\sources\c99\common\xxtofl.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;  sign            1    wreg     unsigned char 
 16205 ;;  val             4    0[COMMON] long 
 16206 ;; Auto vars:     Size  Location     Type
 16207 ;;  sign            1    8[COMMON] unsigned char 
 16208 ;;  arg             4   10[COMMON] unsigned long 
 16209 ;;  exp             1    9[COMMON] unsigned char 
 16210 ;; Return value:  Size  Location     Type
 16211 ;;                  4    0[COMMON] unsigned char 
 16212 ;; Registers used:
 16213 ;;		wreg, status,2, status,0
 16214 ;; Tracked objects:
 16215 ;;		On entry : 0/0
 16216 ;;		On exit  : 0/0
 16217 ;;		Unchanged: 0/0
 16218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16221 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;Total ram usage:       14 bytes
 16224 ;; Hardware stack levels used: 1
 16225 ;; This function calls:
 16226 ;;		Nothing
 16227 ;; This function is called by:
 16228 ;;		_T1_ROBOT_ISR
 16229 ;; This function uses a non-reentrant model
 16230 ;;
 16231                           
 16232                           
 16233                           ;psect for function i1___xxtofl
 16234  19B1                     i1___xxtofl:
 16235                           
 16236                           ;incstack = 0
 16237                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 16238                           ;i1___xxtofl@sign stored from wreg
 16239  19B1  00F8               	movwf	i1___xxtofl@sign
 16240  19B2                     i1l6565:
 16241  19B2  0878               	movf	i1___xxtofl@sign,w
 16242  19B3  1903               	btfsc	3,2
 16243  19B4  29B6               	goto	u531_21
 16244  19B5  29B7               	goto	u531_20
 16245  19B6                     u531_21:
 16246  19B6  29CB               	goto	i1l6571
 16247  19B7                     u531_20:
 16248  19B7                     i1l6567:
 16249  19B7  1FF3               	btfss	i1___xxtofl@val+3,7
 16250  19B8  29BA               	goto	u532_21
 16251  19B9  29BB               	goto	u532_20
 16252  19BA                     u532_21:
 16253  19BA  29CB               	goto	i1l6571
 16254  19BB                     u532_20:
 16255  19BB                     i1l6569:
 16256  19BB  0970               	comf	i1___xxtofl@val,w
 16257  19BC  00FA               	movwf	i1___xxtofl@arg
 16258  19BD  0971               	comf	i1___xxtofl@val+1,w
 16259  19BE  00FB               	movwf	i1___xxtofl@arg+1
 16260  19BF  0972               	comf	i1___xxtofl@val+2,w
 16261  19C0  00FC               	movwf	i1___xxtofl@arg+2
 16262  19C1  0973               	comf	i1___xxtofl@val+3,w
 16263  19C2  00FD               	movwf	i1___xxtofl@arg+3
 16264  19C3  0AFA               	incf	i1___xxtofl@arg,f
 16265  19C4  1903               	skipnz
 16266  19C5  0AFB               	incf	i1___xxtofl@arg+1,f
 16267  19C6  1903               	skipnz
 16268  19C7  0AFC               	incf	i1___xxtofl@arg+2,f
 16269  19C8  1903               	skipnz
 16270  19C9  0AFD               	incf	i1___xxtofl@arg+3,f
 16271  19CA  29D3               	goto	i1l2286
 16272  19CB                     i1l6571:
 16273  19CB  0873               	movf	i1___xxtofl@val+3,w
 16274  19CC  00FD               	movwf	i1___xxtofl@arg+3
 16275  19CD  0872               	movf	i1___xxtofl@val+2,w
 16276  19CE  00FC               	movwf	i1___xxtofl@arg+2
 16277  19CF  0871               	movf	i1___xxtofl@val+1,w
 16278  19D0  00FB               	movwf	i1___xxtofl@arg+1
 16279  19D1  0870               	movf	i1___xxtofl@val,w
 16280  19D2  00FA               	movwf	i1___xxtofl@arg
 16281  19D3                     i1l2286:
 16282  19D3  0873               	movf	i1___xxtofl@val+3,w
 16283  19D4  0472               	iorwf	i1___xxtofl@val+2,w
 16284  19D5  0471               	iorwf	i1___xxtofl@val+1,w
 16285  19D6  0470               	iorwf	i1___xxtofl@val,w
 16286  19D7  1D03               	skipz
 16287  19D8  29DA               	goto	u533_21
 16288  19D9  29DB               	goto	u533_20
 16289  19DA                     u533_21:
 16290  19DA  29E4               	goto	i1l6577
 16291  19DB                     u533_20:
 16292  19DB                     i1l6573:
 16293  19DB  3000               	movlw	0
 16294  19DC  00F3               	movwf	?i1___xxtofl+3
 16295  19DD  3000               	movlw	0
 16296  19DE  00F2               	movwf	?i1___xxtofl+2
 16297  19DF  3000               	movlw	0
 16298  19E0  00F1               	movwf	?i1___xxtofl+1
 16299  19E1  3000               	movlw	0
 16300  19E2  00F0               	movwf	?i1___xxtofl
 16301  19E3  2A5C               	goto	i1l2288
 16302  19E4                     i1l6577:
 16303  19E4  3096               	movlw	150
 16304  19E5  00F4               	movwf	??i1___xxtofl
 16305  19E6  0874               	movf	??i1___xxtofl,w
 16306  19E7  00F9               	movwf	i1___xxtofl@exp
 16307  19E8  29F4               	goto	i1l6581
 16308  19E9                     i1l6579:
 16309  19E9  3001               	movlw	1
 16310  19EA  00F4               	movwf	??i1___xxtofl
 16311  19EB  0874               	movf	??i1___xxtofl,w
 16312  19EC  07F9               	addwf	i1___xxtofl@exp,f
 16313  19ED  3001               	movlw	1
 16314  19EE                     u534_25:
 16315  19EE  36FD               	lsrf	i1___xxtofl@arg+3,f
 16316  19EF  0CFC               	rrf	i1___xxtofl@arg+2,f
 16317  19F0  0CFB               	rrf	i1___xxtofl@arg+1,f
 16318  19F1  0CFA               	rrf	i1___xxtofl@arg,f
 16319  19F2  0B89               	decfsz	9,f
 16320  19F3  29EE               	goto	u534_25
 16321  19F4                     i1l6581:
 16322  19F4  30FE               	movlw	254
 16323  19F5  057D               	andwf	i1___xxtofl@arg+3,w
 16324  19F6  1D03               	btfss	3,2
 16325  19F7  29F9               	goto	u535_21
 16326  19F8  29FA               	goto	u535_20
 16327  19F9                     u535_21:
 16328  19F9  29E9               	goto	i1l6579
 16329  19FA                     u535_20:
 16330  19FA  2A0E               	goto	i1l2292
 16331  19FB                     i1l6583:
 16332  19FB  3001               	movlw	1
 16333  19FC  00F4               	movwf	??i1___xxtofl
 16334  19FD  0874               	movf	??i1___xxtofl,w
 16335  19FE  07F9               	addwf	i1___xxtofl@exp,f
 16336  19FF                     i1l6585:
 16337  19FF  3001               	movlw	1
 16338  1A00  07FA               	addwf	i1___xxtofl@arg,f
 16339  1A01  3000               	movlw	0
 16340  1A02  3DFB               	addwfc	i1___xxtofl@arg+1,f
 16341  1A03  3000               	movlw	0
 16342  1A04  3DFC               	addwfc	i1___xxtofl@arg+2,f
 16343  1A05  3000               	movlw	0
 16344  1A06  3DFD               	addwfc	i1___xxtofl@arg+3,f
 16345  1A07                     i1l6587:
 16346  1A07  3001               	movlw	1
 16347  1A08                     u536_25:
 16348  1A08  36FD               	lsrf	i1___xxtofl@arg+3,f
 16349  1A09  0CFC               	rrf	i1___xxtofl@arg+2,f
 16350  1A0A  0CFB               	rrf	i1___xxtofl@arg+1,f
 16351  1A0B  0CFA               	rrf	i1___xxtofl@arg,f
 16352  1A0C  0B89               	decfsz	9,f
 16353  1A0D  2A08               	goto	u536_25
 16354  1A0E                     i1l2292:
 16355  1A0E  30FF               	movlw	255
 16356  1A0F  057D               	andwf	i1___xxtofl@arg+3,w
 16357  1A10  1D03               	btfss	3,2
 16358  1A11  2A13               	goto	u537_21
 16359  1A12  2A14               	goto	u537_20
 16360  1A13                     u537_21:
 16361  1A13  29FB               	goto	i1l6583
 16362  1A14                     u537_20:
 16363  1A14  2A1E               	goto	i1l6591
 16364  1A15                     i1l6589:
 16365  1A15  3001               	movlw	1
 16366  1A16  02F9               	subwf	i1___xxtofl@exp,f
 16367  1A17  3001               	movlw	1
 16368  1A18                     u538_25:
 16369  1A18  35FA               	lslf	i1___xxtofl@arg,f
 16370  1A19  0DFB               	rlf	i1___xxtofl@arg+1,f
 16371  1A1A  0DFC               	rlf	i1___xxtofl@arg+2,f
 16372  1A1B  0DFD               	rlf	i1___xxtofl@arg+3,f
 16373  1A1C  0B89               	decfsz	9,f
 16374  1A1D  2A18               	goto	u538_25
 16375  1A1E                     i1l6591:
 16376  1A1E  1BFC               	btfsc	i1___xxtofl@arg+2,7
 16377  1A1F  2A21               	goto	u539_21
 16378  1A20  2A22               	goto	u539_20
 16379  1A21                     u539_21:
 16380  1A21  2A28               	goto	i1l2299
 16381  1A22                     u539_20:
 16382  1A22                     i1l6593:
 16383  1A22  3002               	movlw	2
 16384  1A23  0279               	subwf	i1___xxtofl@exp,w
 16385  1A24  1803               	skipnc
 16386  1A25  2A27               	goto	u540_21
 16387  1A26  2A28               	goto	u540_20
 16388  1A27                     u540_21:
 16389  1A27  2A15               	goto	i1l6589
 16390  1A28                     u540_20:
 16391  1A28                     i1l2299:
 16392  1A28  1879               	btfsc	i1___xxtofl@exp,0
 16393  1A29  2A2B               	goto	u541_21
 16394  1A2A  2A2C               	goto	u541_20
 16395  1A2B                     u541_21:
 16396  1A2B  2A34               	goto	i1l2300
 16397  1A2C                     u541_20:
 16398  1A2C                     i1l6595:
 16399  1A2C  30FF               	movlw	255
 16400  1A2D  05FA               	andwf	i1___xxtofl@arg,f
 16401  1A2E  30FF               	movlw	255
 16402  1A2F  05FB               	andwf	i1___xxtofl@arg+1,f
 16403  1A30  307F               	movlw	127
 16404  1A31  05FC               	andwf	i1___xxtofl@arg+2,f
 16405  1A32  30FF               	movlw	255
 16406  1A33  05FD               	andwf	i1___xxtofl@arg+3,f
 16407  1A34                     i1l2300:
 16408  1A34  1003               	clrc
 16409  1A35  0CF9               	rrf	i1___xxtofl@exp,f
 16410  1A36                     i1l6597:
 16411  1A36  0879               	movf	i1___xxtofl@exp,w
 16412  1A37  00F4               	movwf	??i1___xxtofl
 16413  1A38  01F5               	clrf	??i1___xxtofl+1
 16414  1A39  01F6               	clrf	??i1___xxtofl+2
 16415  1A3A  01F7               	clrf	??i1___xxtofl+3
 16416  1A3B  3018               	movlw	24
 16417  1A3C                     u542_25:
 16418  1A3C  35F4               	lslf	??i1___xxtofl,f
 16419  1A3D  0DF5               	rlf	??i1___xxtofl+1,f
 16420  1A3E  0DF6               	rlf	??i1___xxtofl+2,f
 16421  1A3F  0DF7               	rlf	??i1___xxtofl+3,f
 16422  1A40                     u542_20:
 16423  1A40  0B89               	decfsz	9,f
 16424  1A41  2A3C               	goto	u542_25
 16425  1A42  0874               	movf	??i1___xxtofl,w
 16426  1A43  04FA               	iorwf	i1___xxtofl@arg,f
 16427  1A44  0875               	movf	??i1___xxtofl+1,w
 16428  1A45  04FB               	iorwf	i1___xxtofl@arg+1,f
 16429  1A46  0876               	movf	??i1___xxtofl+2,w
 16430  1A47  04FC               	iorwf	i1___xxtofl@arg+2,f
 16431  1A48  0877               	movf	??i1___xxtofl+3,w
 16432  1A49  04FD               	iorwf	i1___xxtofl@arg+3,f
 16433  1A4A                     i1l6599:
 16434  1A4A  0878               	movf	i1___xxtofl@sign,w
 16435  1A4B  1903               	btfsc	3,2
 16436  1A4C  2A4E               	goto	u543_21
 16437  1A4D  2A4F               	goto	u543_20
 16438  1A4E                     u543_21:
 16439  1A4E  2A54               	goto	i1l6605
 16440  1A4F                     u543_20:
 16441  1A4F                     i1l6601:
 16442  1A4F  1FF3               	btfss	i1___xxtofl@val+3,7
 16443  1A50  2A52               	goto	u544_21
 16444  1A51  2A53               	goto	u544_20
 16445  1A52                     u544_21:
 16446  1A52  2A54               	goto	i1l6605
 16447  1A53                     u544_20:
 16448  1A53                     i1l6603:
 16449  1A53  17FD               	bsf	i1___xxtofl@arg+3,7
 16450  1A54                     i1l6605:
 16451  1A54  087D               	movf	i1___xxtofl@arg+3,w
 16452  1A55  00F3               	movwf	?i1___xxtofl+3
 16453  1A56  087C               	movf	i1___xxtofl@arg+2,w
 16454  1A57  00F2               	movwf	?i1___xxtofl+2
 16455  1A58  087B               	movf	i1___xxtofl@arg+1,w
 16456  1A59  00F1               	movwf	?i1___xxtofl+1
 16457  1A5A  087A               	movf	i1___xxtofl@arg,w
 16458  1A5B  00F0               	movwf	?i1___xxtofl
 16459  1A5C                     i1l2288:
 16460  1A5C  0008               	return
 16461  1A5D                     __end_ofi1___xxtofl:
 16462                           
 16463                           	psect	text54
 16464  189B                     __ptext54:	
 16465 ;; *************** function i1___flge *****************
 16466 ;; Defined at:
 16467 ;;		line 4 in file "D:\MPLAB XC8\pic\sources\c99\common\flge.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;  ff1             4    0[BANK0 ] unsigned char 
 16470 ;;  ff2             4    4[BANK0 ] unsigned char 
 16471 ;; Auto vars:     Size  Location     Type
 16472 ;;		None
 16473 ;; Return value:  Size  Location     Type
 16474 ;;		None               void
 16475 ;; Registers used:
 16476 ;;		wreg, status,2, status,0
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16482 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;Total ram usage:       12 bytes
 16487 ;; Hardware stack levels used: 1
 16488 ;; This function calls:
 16489 ;;		Nothing
 16490 ;; This function is called by:
 16491 ;;		_T1_ROBOT_ISR
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           
 16496                           ;psect for function i1___flge
 16497  189B                     i1___flge:
 16498  189B                     i1l6545:	
 16499                           ;incstack = 0
 16500                           ; Regs used in i1___flge: [wreg+status,2+status,0]
 16501                           
 16502  189B  3000               	movlw	0
 16503  189C  0020               	movlb	0	; select bank0
 16504  189D  0520               	andwf	i1___flge@ff1,w
 16505  189E  00A8               	movwf	??i1___flge
 16506  189F  3000               	movlw	0
 16507  18A0  0521               	andwf	i1___flge@ff1+1,w
 16508  18A1  00A9               	movwf	??i1___flge+1
 16509  18A2  3080               	movlw	128
 16510  18A3  0522               	andwf	i1___flge@ff1+2,w
 16511  18A4  00AA               	movwf	??i1___flge+2
 16512  18A5  307F               	movlw	127
 16513  18A6  0523               	andwf	i1___flge@ff1+3,w
 16514  18A7  00AB               	movwf	??i1___flge+3
 16515  18A8  082B               	movf	??i1___flge+3,w
 16516  18A9  042A               	iorwf	??i1___flge+2,w
 16517  18AA  0429               	iorwf	??i1___flge+1,w
 16518  18AB  0428               	iorwf	??i1___flge,w
 16519  18AC  1D03               	skipz
 16520  18AD  28AF               	goto	u526_21
 16521  18AE  28B0               	goto	u526_20
 16522  18AF                     u526_21:
 16523  18AF  28B8               	goto	i1l2023
 16524  18B0                     u526_20:
 16525  18B0                     i1l6547:
 16526  18B0  3000               	movlw	0
 16527  18B1  00A3               	movwf	i1___flge@ff1+3
 16528  18B2  3000               	movlw	0
 16529  18B3  00A2               	movwf	i1___flge@ff1+2
 16530  18B4  3000               	movlw	0
 16531  18B5  00A1               	movwf	i1___flge@ff1+1
 16532  18B6  3000               	movlw	0
 16533  18B7  00A0               	movwf	i1___flge@ff1
 16534  18B8                     i1l2023:
 16535  18B8  3000               	movlw	0
 16536  18B9  0524               	andwf	i1___flge@ff2,w
 16537  18BA  00A8               	movwf	??i1___flge
 16538  18BB  3000               	movlw	0
 16539  18BC  0525               	andwf	i1___flge@ff2+1,w
 16540  18BD  00A9               	movwf	??i1___flge+1
 16541  18BE  3080               	movlw	128
 16542  18BF  0526               	andwf	i1___flge@ff2+2,w
 16543  18C0  00AA               	movwf	??i1___flge+2
 16544  18C1  307F               	movlw	127
 16545  18C2  0527               	andwf	i1___flge@ff2+3,w
 16546  18C3  00AB               	movwf	??i1___flge+3
 16547  18C4  082B               	movf	??i1___flge+3,w
 16548  18C5  042A               	iorwf	??i1___flge+2,w
 16549  18C6  0429               	iorwf	??i1___flge+1,w
 16550  18C7  0428               	iorwf	??i1___flge,w
 16551  18C8  1D03               	skipz
 16552  18C9  28CB               	goto	u527_21
 16553  18CA  28CC               	goto	u527_20
 16554  18CB                     u527_21:
 16555  18CB  28D4               	goto	i1l6551
 16556  18CC                     u527_20:
 16557  18CC                     i1l6549:
 16558  18CC  3000               	movlw	0
 16559  18CD  00A7               	movwf	i1___flge@ff2+3
 16560  18CE  3000               	movlw	0
 16561  18CF  00A6               	movwf	i1___flge@ff2+2
 16562  18D0  3000               	movlw	0
 16563  18D1  00A5               	movwf	i1___flge@ff2+1
 16564  18D2  3000               	movlw	0
 16565  18D3  00A4               	movwf	i1___flge@ff2
 16566  18D4                     i1l6551:
 16567  18D4  1FA3               	btfss	i1___flge@ff1+3,7
 16568  18D5  28D7               	goto	u528_21
 16569  18D6  28D8               	goto	u528_20
 16570  18D7                     u528_21:
 16571  18D7  28F0               	goto	i1l6555
 16572  18D8                     u528_20:
 16573  18D8                     i1l6553:
 16574  18D8  3000               	movlw	0
 16575  18D9  00A8               	movwf	??i1___flge
 16576  18DA  3000               	movlw	0
 16577  18DB  00A9               	movwf	??i1___flge+1
 16578  18DC  3000               	movlw	0
 16579  18DD  00AA               	movwf	??i1___flge+2
 16580  18DE  3080               	movlw	128
 16581  18DF  00AB               	movwf	??i1___flge+3
 16582  18E0  0820               	movf	i1___flge@ff1,w
 16583  18E1  02A8               	subwf	??i1___flge,f
 16584  18E2  0821               	movf	i1___flge@ff1+1,w
 16585  18E3  3BA9               	subwfb	??i1___flge+1,f
 16586  18E4  0822               	movf	i1___flge@ff1+2,w
 16587  18E5  3BAA               	subwfb	??i1___flge+2,f
 16588  18E6  0823               	movf	i1___flge@ff1+3,w
 16589  18E7  3BAB               	subwfb	??i1___flge+3,f
 16590  18E8  082B               	movf	??i1___flge+3,w
 16591  18E9  00A3               	movwf	i1___flge@ff1+3
 16592  18EA  082A               	movf	??i1___flge+2,w
 16593  18EB  00A2               	movwf	i1___flge@ff1+2
 16594  18EC  0829               	movf	??i1___flge+1,w
 16595  18ED  00A1               	movwf	i1___flge@ff1+1
 16596  18EE  0828               	movf	??i1___flge,w
 16597  18EF  00A0               	movwf	i1___flge@ff1
 16598  18F0                     i1l6555:
 16599  18F0  1FA7               	btfss	i1___flge@ff2+3,7
 16600  18F1  28F3               	goto	u529_21
 16601  18F2  28F4               	goto	u529_20
 16602  18F3                     u529_21:
 16603  18F3  290C               	goto	i1l2026
 16604  18F4                     u529_20:
 16605  18F4                     i1l6557:
 16606  18F4  3000               	movlw	0
 16607  18F5  00A8               	movwf	??i1___flge
 16608  18F6  3000               	movlw	0
 16609  18F7  00A9               	movwf	??i1___flge+1
 16610  18F8  3000               	movlw	0
 16611  18F9  00AA               	movwf	??i1___flge+2
 16612  18FA  3080               	movlw	128
 16613  18FB  00AB               	movwf	??i1___flge+3
 16614  18FC  0824               	movf	i1___flge@ff2,w
 16615  18FD  02A8               	subwf	??i1___flge,f
 16616  18FE  0825               	movf	i1___flge@ff2+1,w
 16617  18FF  3BA9               	subwfb	??i1___flge+1,f
 16618  1900  0826               	movf	i1___flge@ff2+2,w
 16619  1901  3BAA               	subwfb	??i1___flge+2,f
 16620  1902  0827               	movf	i1___flge@ff2+3,w
 16621  1903  3BAB               	subwfb	??i1___flge+3,f
 16622  1904  082B               	movf	??i1___flge+3,w
 16623  1905  00A7               	movwf	i1___flge@ff2+3
 16624  1906  082A               	movf	??i1___flge+2,w
 16625  1907  00A6               	movwf	i1___flge@ff2+2
 16626  1908  0829               	movf	??i1___flge+1,w
 16627  1909  00A5               	movwf	i1___flge@ff2+1
 16628  190A  0828               	movf	??i1___flge,w
 16629  190B  00A4               	movwf	i1___flge@ff2
 16630  190C                     i1l2026:
 16631  190C  3080               	movlw	128
 16632  190D  06A3               	xorwf	i1___flge@ff1+3,f
 16633  190E  3080               	movlw	128
 16634  190F  06A7               	xorwf	i1___flge@ff2+3,f
 16635  1910  0827               	movf	i1___flge@ff2+3,w
 16636  1911  0223               	subwf	i1___flge@ff1+3,w
 16637  1912  1D03               	skipz
 16638  1913  291E               	goto	u530_25
 16639  1914  0826               	movf	i1___flge@ff2+2,w
 16640  1915  0222               	subwf	i1___flge@ff1+2,w
 16641  1916  1D03               	skipz
 16642  1917  291E               	goto	u530_25
 16643  1918  0825               	movf	i1___flge@ff2+1,w
 16644  1919  0221               	subwf	i1___flge@ff1+1,w
 16645  191A  1D03               	skipz
 16646  191B  291E               	goto	u530_25
 16647  191C  0824               	movf	i1___flge@ff2,w
 16648  191D  0220               	subwf	i1___flge@ff1,w
 16649  191E                     u530_25:
 16650  191E  1803               	skipnc
 16651  191F  2921               	goto	u530_21
 16652  1920  2922               	goto	u530_20
 16653  1921                     u530_21:
 16654  1921  2924               	goto	i1l6561
 16655  1922                     u530_20:
 16656  1922                     i1l6559:
 16657  1922  1003               	clrc
 16658  1923  2925               	goto	i1l2031
 16659  1924                     i1l6561:
 16660  1924  1403               	setc
 16661  1925                     i1l2031:
 16662  1925  0008               	return
 16663  1926                     __end_ofi1___flge:
 16664  007E                     btemp	set	126	;btemp
 16665  007E                     int$flags	set	126
 16666  007E                     wtemp0	set	126
 16667                           
 16668                           	psect	config
 16669                           
 16670                           ;Config register CONFIG1 @ 0x8007
 16671                           ;	Oscillator Selection
 16672                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 16673                           ;	Watchdog Timer Enable
 16674                           ;	WDTE = OFF, WDT disabled
 16675                           ;	Power-up Timer Enable
 16676                           ;	PWRTE = OFF, PWRT disabled
 16677                           ;	MCLR Pin Function Select
 16678                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 16679                           ;	Flash Program Memory Code Protection
 16680                           ;	CP = OFF, Program memory code protection is disabled
 16681                           ;	Data Memory Code Protection
 16682                           ;	CPD = OFF, Data memory code protection is disabled
 16683                           ;	Brown-out Reset Enable
 16684                           ;	BOREN = OFF, Brown-out Reset disabled
 16685                           ;	Clock Out Enable
 16686                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 16687                           ;	Internal/External Switchover
 16688                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 16689                           ;	Fail-Safe Clock Monitor Enable
 16690                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 16691  8007                     	org	32775
 16692  8007  09E4               	dw	2532
 16693                           
 16694                           ;Config register CONFIG2 @ 0x8008
 16695                           ;	Flash Memory Self-Write Protection
 16696                           ;	WRT = OFF, Write protection off
 16697                           ;	Voltage Regulator Capacitor Enable
 16698                           ;	VCAPEN = OFF, VCAP pin functionality is disabled
 16699                           ;	PLL Enable
 16700                           ;	PLLEN = OFF, 4x PLL disabled
 16701                           ;	Stack Overflow/Underflow Reset Enable
 16702                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
 16703                           ;	Brown-out Reset Voltage Selection
 16704                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 16705                           ;	Low-Voltage Programming Enable
 16706                           ;	LVP = ON, Low-voltage programming enabled
 16707  8008                     	org	32776
 16708  8008  3CFF               	dw	15615

Data Sizes:
    Strings     5
    Constant    64
    Data        11
    BSS         257
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      66
    BANK1            80     79      80
    BANK2            80     36      77
    BANK3            80      0      80
    BANK4            80      0      80
    BANK5            80     10      78
    BANK6            80     38      38
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C2_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3332$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C2_DO_TX$3339$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1002$0$0	PTR void  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> TimeLapseHandle@bufferCamera_t(BANK6[20]), AutoLineHandle@bufferALine_t(BANK1[20]), AutoCircleHandle@bufferACircle_t(BANK1[20]), ManualHandle@bufferManual_t(BANK1[20]), 
		 -> buffer_sys(BANK5[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> TimeLapseHandle@bufferCamera_t(BANK6[20]), AutoLineHandle@bufferALine_t(BANK1[20]), AutoCircleHandle@bufferACircle_t(BANK1[20]), ManualHandle@bufferManual_t(BANK1[20]), 
		 -> buffer_sys(BANK5[50]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> TimeLapseHandle@bufferCamera_t(BANK6[20]), AutoLineHandle@bufferALine_t(BANK1[20]), AutoCircleHandle@bufferACircle_t(BANK1[20]), ManualHandle@bufferManual_t(BANK1[20]), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    I2C2_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@reg(COMMON[1]), I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@reg(COMMON[1]), I2C2_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C2_Write1ByteRegister@reg(COMMON[1]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@reg(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@reg(COMMON[1]), I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C2_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C2_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c2_master_example$F307(), wr2RegCompleteHandler@i2c2_master_example$F293(), wr1RegCompleteHandler@i2c2_master_example$F287(), 
		 -> rd2RegCompleteHandler@i2c2_master_example$F281(), rd1RegCompleteHandler@i2c2_master_example$F254(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), wr2RegCompleteHandler@i2c1_master_example$F166(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    i2c2_fsmStateTable	const PTR FTN()enum E4505[16] size(2) Largest target is 1
		 -> I2C2_DO_ADDRESS_NACK(), I2C2_DO_RESET(), I2C2_DO_RX_NACK_RESTART(), I2C2_DO_RX_NACK_STOP(), 
		 -> I2C2_DO_RX_ACK(), I2C2_DO_SEND_STOP(), I2C2_DO_SEND_RESTART(), I2C2_DO_SEND_RESTART_WRITE(), 
		 -> I2C2_DO_SEND_RESTART_READ(), I2C2_DO_TX_EMPTY(), I2C2_DO_RCEN(), I2C2_DO_RX(), 
		 -> I2C2_DO_TX(), I2C2_DO_SEND_ADR_WRITE(), I2C2_DO_SEND_ADR_READ(), I2C2_DO_IDLE(), 

    S1002$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@reg(COMMON[1]), I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@reg(COMMON[1]), I2C2_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C2_Write1ByteRegister@reg(COMMON[1]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@reg(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@reg(COMMON[1]), I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@reg(COMMON[1]), I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@reg(COMMON[1]), I2C2_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C2_Write1ByteRegister@reg(COMMON[1]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@reg(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@reg(COMMON[1]), I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1002$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C2_ReadDataBlock@bufferBlock(COMMON[3]), I2C2_Write2ByteRegister@data(COMMON[2]), I2C2_Write1ByteRegister@data(COMMON[1]), I2C2_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C2_Read1ByteRegister@returnValue(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S1002$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c2_master_example$F307(), wr2RegCompleteHandler@i2c2_master_example$F293(), wr1RegCompleteHandler@i2c2_master_example$F287(), 
		 -> rd2RegCompleteHandler@i2c2_master_example$F281(), rd1RegCompleteHandler@i2c2_master_example$F254(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), wr2RegCompleteHandler@i2c1_master_example$F166(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C2_CallbackReturnReset(), I2C2_CallbackReturnStop(), I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), 
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c2_master_example$F307(), wr2RegCompleteHandler@i2c2_master_example$F293(), wr1RegCompleteHandler@i2c2_master_example$F287(), 
		 -> rd2RegCompleteHandler@i2c2_master_example$F281(), rd1RegCompleteHandler@i2c2_master_example$F254(), rdBlkRegCompleteHandler@i2c1_master_example$F177(), wr2RegCompleteHandler@i2c1_master_example$F166(), 
		 -> wr1RegCompleteHandler@i2c1_master_example$F160(), rd2RegCompleteHandler@i2c1_master_example$F154(), rd1RegCompleteHandler@i2c1_master_example$F143(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E4505[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> T1_ROBOT_ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> T1_ROBOT_ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@i2c2_master_example$F307@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c1_master_example$F177@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _T1_ROBOT_ISR->i1___xxtofl
    i1___flge->i1___xxtofl

Critical Paths under _main in BANK0

    _main->_AutoLineControl
    _main->_TimeLapseControl
    _main->_TimeLapseHandle
    _TimeLapseHandle->___fltol
    _TimeLapseControl->___fltol
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _ManualHandle->___xxtofl
    _ManualControl->_ramp_step_function
    _AutoLineHandle->___xxtofl
    _AutoLineControl->___fltol
    _AutoCircleHandle->___xxtofl
    _atoi->___wmul
    _atoi->_isdigit
    _AutoCircleControl->_ramp_step_function
    ___xxtofl->_atoi
    _KE->___fltol
    ___flmul->___xxtofl
    ___flge->___xxtofl
    ___fleq->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_CallBack->_T1_ROBOT_ISR
    _T1_ROBOT_ISR->i1___flge

Critical Paths under _main in BANK1

    _main->_KE
    _main->_TimeLapseControl
    _TimeLapseHandle->___fltol
    _TimeLapseControl->___fltol
    _AutoLineControl->_KE
    _ramp_step_function->_KE
    _KE->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flge->___flmul
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _TimeLapseHandle->___fltol
    _TimeLapseControl->___fltol
    _ManualControl->_ramp_step_function
    _AutoLineControl->_KE
    _AutoCircleControl->_ramp_step_function
    _ramp_step_function->_KE
    _KE->___flsub

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    _ManualControl->_ramp_step_function
    _AutoCircleControl->_ramp_step_function

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_TimeLapseHandle

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  281822
                                             78 BANK1      1     1      0
                  _AutoCircleControl
                   _AutoCircleHandle
                    _AutoLineControl
                     _AutoLineHandle
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                      _EUSART2_Write
                                 _KE
                      _ManualControl
                       _ManualHandle
                  _SYSTEM_Initialize
                 _SetUpModeHalf_step
           _TMR1_SetInterruptHandler
                   _TimeLapseControl
                    _TimeLapseHandle
 ---------------------------------------------------------------------------------
 (1) _TimeLapseHandle                                     39    39      0   21456
                                             51 BANK0      1     1      0
                                              0 BANK6     38    38      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _TimeLapseControl                                     3     3      0    6732
                                             51 BANK0      1     1      0
                                             76 BANK1      2     2      0
                      _EUSART1_Write
                             ___fleq
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetUpModeHalf_step                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                 _EUSART1_Initialize
                 _EUSART2_Initialize
                    _I2C1_Initialize
                    _I2C2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             14 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ManualHandle                                        27    27      0    7631
                                             49 BANK0      1     1      0
                                              0 BANK1     26    26      0
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _ManualControl                                        0     0      0   66381
                             ___fleq
                             ___flge
                            ___flneg
                 _ramp_step_function
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Write                                        1     1      0      22
                                             14 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoLineHandle                                      31    31      0    8089
                                             49 BANK0      1     1      0
                                              0 BANK1     30    30      0
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _AutoLineControl                                      5     5      0   53052
                                             51 BANK0      1     1      0
                                             24 BANK2      4     4      0
                                 _KE
                            ___fladd
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _AutoCircleHandle                                    31    31      0    8089
                                             49 BANK0      1     1      0
                                              0 BANK1     30    30      0
                           ___xxtofl
                               _atoi
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     850
                                             14 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _atoi                                                15    13      2    3619
                                             20 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              5     3      2     259
                                             14 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     191
                                             14 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2296
                                             14 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _AutoCircleControl                                    8     8      0   79859
                                              0 BANK6      8     8      0
                            ___fldiv
                             ___fleq
                            ___flmul
                            ___fltol
                           ___xxtofl
                 _ramp_step_function
 ---------------------------------------------------------------------------------
 (2) _ramp_step_function                                  23    11     12   60910
                                             51 BANK0      1     1      0
                                             24 BANK2     12     0     12
                                              0 BANK5     10    10      0
                                 _KE
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    2606
                                             35 BANK0     14    10      4
                               _atoi (ARG)
 ---------------------------------------------------------------------------------
 (3) _KE                                                  18    10      8   29575
                                             76 BANK1      2     2      0
                                              8 BANK2     16     8      8
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4    1057
                                             49 BANK0      2     2      0
                                             72 BANK1      4     0      4
                                              0 BANK2      5     5      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    5347
                                              0 BANK2      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4562
                                             52 BANK1     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     425
                                             14 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    7465
                                              0 BANK1     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                             14 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    2036
                                             26 BANK1     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8    3010
                                              0 BANK1     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    4743
                                             26 BANK1     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    1056
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0    1056
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_CallBack                                        0     0      0     816
                   Absolute function *
                       _T1_ROBOT_ISR *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _T1_ROBOT_ISR                                         2     2      0     816
                                             12 BANK0      2     2      0
                           i1___flge
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (10) i1___xxtofl                                         14    10      4     478
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) i1___flge                                           12     4      8     338
                                              0 BANK0     12     4      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoCircleControl
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           _atoi (ARG)
             ___wmul
             _isdigit
             _isspace
       ___xxtofl (ARG)
     ___fleq
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
     ___xxtofl
     _ramp_step_function
       _KE
         ___fladd
         ___fldiv
         ___fleq
         ___flge
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flneg
         ___flsub
           ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
         ___fltol
       ___fladd
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___xxtofl
   _AutoCircleHandle
     ___xxtofl
     _atoi
     _strlen
   _AutoLineControl
     _KE
     ___fladd
     ___fldiv
     ___fleq
     ___flmul
     ___fltol
     ___xxtofl
   _AutoLineHandle
     ___xxtofl
     _atoi
     _strlen
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Write
   _KE
   _ManualControl
     ___fleq
     ___flge
     ___flneg
     _ramp_step_function
   _ManualHandle
     ___xxtofl
     _atoi
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _I2C1_Initialize
     _I2C2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _SetUpModeHalf_step
   _TMR1_SetInterruptHandler
   _TimeLapseControl
     _EUSART1_Write
     ___fleq
     ___fltol
     ___xxtofl
   _TimeLapseHandle
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _atoi
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _T1_ROBOT_ISR *
         i1___flge
           i1___xxtofl (ARG)
         i1___xxtofl
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      42       5       82.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     24      4D       9       96.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      A      4E      15       97.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50     26      26      17       47.5%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     201      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     201      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 05 18:06:51 2021

                                    ___fldiv@aexp 00D3                                      ___fldiv@bexp 00D2  
                                    ___fldiv@sign 00CB                                 ??_TimeLapseHandle 0053  
                                              _KE 13E4                               ___wmul@multiplicand 0030  
                               ?_TimeLapseControl 0070                                      i1___flge@ff1 0020  
                                    i1___flge@ff2 0024                              _I2C2_DO_ADDRESS_NACK 0000  
                             __Umul8_16@word_mpld 0034                                               ?_KE 0128  
                                      i1___xxtofl 19B1                                               l411 26F5  
                                             l346 103D                                               l515 25E4  
                                             l507 2781                                               l531 07F8  
                                             l524 267E                                               l444 263B  
                                             l382 25DB                                               l534 07FF  
                                             l528 268D                                               l552 2605  
                                             l376 26BF                                               l546 260E  
                                             l379 25FC                                               l549 2617  
                                             l659 2658                                               l994 2662  
                              ??_TimeLapseControl 0053                              _AutoLineControl$3326 0138  
                                     KE@OmegaLeft 0130            __end_of_EUSART2_SetFramingErrorHandler 262A  
         __size_of_EUSART2_SetFramingErrorHandler 0009                    _EUSART2_SetFramingErrorHandler 2621  
                                 _timer1ReloadVal 016B                     TimeLapseHandle@bufferCamera_t 0320  
                                             wreg 0009                              _I2C1_DO_RX_NACK_STOP 0000  
                                    ___flmul@aexp 00AE                                      ___flmul@bexp 00B3  
                                    ___flmul@sign 00AD                                      ___flmul@temp 00B8  
                                    ___flmul@prod 00B4                                              ??_KE 00EC  
                                    ___fltol@exp1 0052                                              l2020 084E  
                                            l2014 081D                                              l2015 0839  
                                            l2031 19B0                                              l2023 1943  
                                            l1312 2620                                              l2202 10CB  
                                            l2026 1997                                              l1306 2629  
                                            l2035 100B                                              l2204 1227  
                                            l2300 1AE1                                              l1309 2632  
                                   _ManualControl 03F7                                              l2150 09FE  
                                            l2046 1884                                              l2223 11F5  
                                            l2039 189A                                              l2224 120F  
                                            l2152 09DA                                              l2049 189A  
                                            l1513 1BC4                                              l2226 121E  
                                            l2218 11A9                                              l2242 0FFF  
                                            l2146 095D                                              l1530 1CB8  
                                            l2171 0AB2                                              l1291 2647  
                                            l1267 07F5                                              l2180 0B0B  
                                            l2332 1BB6                                              l1508 2644  
                                            l2261 274B                                              l2254 0FF3  
                                            l1294 264E                                              l1542 0540  
                                            l2263 275B                                              l2167 0A90  
                                            l2159 0B36                                              l2335 26A6  
                                            l2343 2737                                              l2319 1B47  
                                            l1631 16F1                                              l2248 0F7B  
                                            l2192 1073                                              l2177 0AD4  
                                            l1481 1538                                              l1625 1FFF  
                                            l1545 05A8                                              l1546 0698  
                                            l1642 0076                                              l1563 1235  
                                            l2188 0B2D                                              l1484 1595  
                                            l2292 1ABB                                              l2189 0B36  
                                            l1637 17FF                                              l2286 1A80  
                                            l1494 0CB4                                              l1558 0698  
                                            l1487 15EF                                              l1479 14F1  
                                            l2359 26D9                                              l2288 1B09  
                                            l1497 0D06                                              l1593 1E51  
                                            l1674 0885                                              l2299 1AD5  
                                            l1499 0D7B                                              l1588 13E3  
                                            l1668 03F6                                              l1845 2701  
                                            l1598 1E5F                                              l1847 2715  
                                            l1679 08FE                                              l7011 07FC  
                                            l7111 2685                                              l7103 25E0  
                                            l7113 268A                                              l7121 264B  
                                            l7009 07F8                                              l7115 268C  
                                            l7107 267E                   AutoCircleHandle@bufferACircle_t 00A0  
                                            l7109 2683                                              l8111 090E  
                                            l8103 08FF                                              l7119 2647  
                                            l8201 0A02                                              l8113 0913  
                                            l8121 0923                                              l8105 0905  
                                            l9001 060E                                              l8211 0A1C  
                                            l8203 0A07                                              l8131 093B  
                                            l8123 092B                                              l8115 0918  
                                            l8107 0909                                              l9011 0653  
                                            l9003 0614                                              l7139 263C  
                                            l8301 2743                                              l8221 0A2D  
                                            l8213 0A20                                              l8141 0952  
                                            l8133 093F                                              l8125 0930  
                                            l8117 0920                                              l8109 090D  
                                            l9101 13C3                                              l9021 0686  
                                            l9013 066E                                              l9005 0616  
                                            l8311 0800                                              l8303 2747  
                                            l8231 0A7A                                              l8223 0A35  
                                            l8215 0A26                                              l8207 0A10  
                                            l8151 096B                                              l8143 0953  
                                            l8135 0940                                              l8127 0936  
                                            l8119 0921                                              l9111 1DED  
                                            l9103 13C8                                              l9031 1238  
                                            l9023 068F                                              l9015 0677  
                                            l9007 063D                                              l8401 1083  
                                            l8313 0815                                              l8305 2752  
                                            l8233 0A7F                                              l8217 0A28  
                                            l8209 0A18                                              l8225 0A3A  
                                            l8161 097F                                              l8153 096F  
                                            l8137 0945                                              l8145 0955  
                                            l8129 0937                                              l9113 1E08  
                                            l9041 1260                                              l9033 123C  
                                            l9105 13CD                                              l9201 1FE4  
                                            l9121 1E52                                              l9025 0692  
                                            l9017 067A                                              l9009 064D  
                                            l6721 2633                                              l7097 26A7  
                                            l8403 1088                                              l8411 1098  
                                            l8315 0831                                              l8331 1963  
                                            l8323 1926                                              l8307 2757  
                                            l8251 0AB9                                              l8243 0AA6  
                                            l8227 0A50                                              l8235 0A88  
                                            l8219 0A2C                                              l8171 0993  
                                            l8163 0983                                              l8155 0973  
                                            l8147 0963                                              l8139 094A  
                                            l9115 1E0B                                              l9107 1CB9  
                                            l9051 12AB                                              l9043 126B  
                                            l9035 1243                                              l9027 1228  
                                            l9211 1601                                              l9131 1E72  
                                            l9203 1FE9                                              l9123 1E59  
                                            l9019 067D                                              l6723 2606  
                                            l6731 262A                                              l8421 10AE  
                                            l8413 10A0                                              l8405 108D  
                                            l8317 084B                                              l8333 197B  
                                            l8325 193B                                              l8261 0AC7  
                                            l8253 0ABB                                              l8245 0AAD  
                                            l8237 0A98                                              l8229 0A74  
                                            l8173 0997                                              l8165 0987  
                                            l8157 0977                                              l8149 0967  
                                            l8181 09A7                                              l9117 1E36  
                                            l9109 1CC0                                              l9061 12DF  
                                            l9053 12B6                                              l9045 1276  
                                            l9037 1249                                              l9029 122F  
                                            l9221 1690                                              l9213 160B  
                                            l9205 15F0                                              l9141 1EAA  
                                            l9133 1E7E                                              l9125 1E62  
                                            l6725 260F                                              l6733 2618  
                                            l9301 01BB                                              l8511 11D7  
                                            l8503 11AE                                              l8423 10B3  
                                            l8431 10C3                                              l8415 10A5  
                                            l8407 1095                                              l8319 084D  
                                            l8335 197F                                              l8327 1957  
                                            l8343 1000                                              l8271 0ADE  
                                            l8263 0ACB                                              l8255 0AC0  
                                            l8247 0AB1                                              l8239 0A9D  
                                            l8191 09E6                                              l8183 09A8  
                                            l8175 099B                                              l8167 098B  
                                            l8159 097B                                              l8351 1812  
                                            l9119 1E3F                                              l9071 132F  
                                            l9063 1305                                              l9055 12BB  
                                            l9047 1281                                              l9039 1255  
                                            l9231 1730                                              l9223 16C2  
                                            l9215 1614                                              l9207 15F7  
                                            l9151 1EFA                                              l9143 1ED0  
                                            l9135 1E89                                              l9127 1E65  
                                            l6727 25FD                                              l9311 01E9  
                                            l9303 01D1                                              l8521 120E  
                                            l8505 11B3                                              l8513 11DB  
                                            l8433 10D3                                              l8441 10EC  
                                            l8425 10B8                                              l8417 10A9  
                                            l8409 1096                                              l8337 19AD  
                                            l8329 195F                                              l8601 0EA1  
                                            l8345 1009                                              l8281 0B15  
                                            l8273 0AE6                                              l8265 0AD1  
                                            l8249 0AB6                                              l8257 0AC2  
                                            l8193 09EA                                              l8185 09BF  
                                            l8177 099F                                              l8169 098F  
                                            l8361 1848                                              l8353 1820  
                                            l9081 135C                                              l9065 1309  
                                            l9073 1331                                              l9057 12D1  
                                            l9049 12A7                                              l9241 17ED  
                                            l9233 17B7                                              l9225 170C  
                                            l9217 164E                                              l9209 15FC  
                                            l9161 1F27                                              l9145 1ED4  
                                            l9153 1EFC                                              l9137 1E94  
                                            l9129 1E6C                                              l6729 2621  
                                            l6921 101B                                              l9313 01F5  
                                            l9321 022A                                              l9305 01D3  
                                            l9401 27B4                                              l8523 1214  
                                            l8515 11E8                                              l8507 11BB  
                                            l8451 1112                                              l8443 10F1  
                                            l8435 10DF                                              l8427 10C0  
                                            l8419 10AD                                              l8339 19AF  
                                            l8611 0F05                                              l8603 0EBA  
                                            l8347 100B                                              l8291 0B29  
                                            l8283 0B1D                                              l8275 0AEA  
                                            l8259 0AC6                                              l8195 09EB  
                                            l8187 09DE                                              l8179 09A3  
                                            l8363 1850                                              l9091 138A  
                                            l9083 1361                                              l9075 133D  
                                            l9067 1314                                              l9059 12D3  
                                            l9243 17FD                                              l9235 17D2  
                                            l9227 171A                                              l9219 168E  
                                            l9171 1F5D                                              l9163 1F2C  
                                            l9155 1F08                                              l9147 1EDF  
                                            l9139 1E9F                                              l6931 264F  
                                            l6923 1035                                              l9331 084F  
                                            l9315 01FA                                              l9307 01DF  
                                            l9251 007D                                              l9323 022F  
                                            l9411 27D9                                              l9403 27BC  
                                            l8525 1218                                              l8517 1203  
                                            l8509 11BF                                              l8461 1137  
                                            l8453 111A                                              l8437 10E3  
                                            l8429 10C1                                              l8621 0F4B  
                                            l8613 0F1A                                              l8605 0EC1  
                                            l8541 0D8B                                              l8533 0D7C  
                                            l8293 0B31                                              l8285 0B22  
                                            l8277 0B07                                              l8269 0AD9  
                                            l8197 09F3                                              l8189 09E4  
                                            l8381 1879                                              l8373 185F  
                                            l8365 1853                                              l8357 182A  
                                            l8701 26F6                                              l9093 138E  
                                            l9085 1377                                              l9077 134D  
                                            l9069 1319                                              l9237 17D5  
                                            l9229 1729                                              l9173 1F61  
                                            l9181 1F89                                              l9165 1F42  
                                            l9157 1F18                                              l9149 1EE4  
                                            l6933 2654                                              l6941 265E  
                                            l6925 1037                                              l6917 100C  
                                            l9341 0873                                              l9333 0856  
                                            l9309 01E5                                              l9317 0211  
                                            l9261 00AC                                              l9253 0084  
                                            l9325 0245                                              l9245 0069  
                                            l9413 27DC                                              l9405 27C8  
                                            l8527 121A                                              l8519 1206  
                                            l8471 1156                                              l8463 113B  
                                            l8455 1122                                              l8447 10FA  
                                            l8631 0F5F                                              l8623 0F4F  
                                            l8615 0F31                                              l8607 0EDA  
                                            l8551 0DA7                                              l8543 0D90  
                                            l8535 0D82                                              l8295 0B35  
                                            l8287 0B23                                              l8279 0B10  
                                            l8199 09F7                                              l8383 1889  
                                            l8367 1857                                              l8375 1872  
                                            l8359 1846                                              l8711 2711  
                                            l8703 26F9                                              l9095 1399  
                                            l9079 1351                                              l9087 1379  
                                            l9239 17DE                                              l9191 1FAA  
                                            l9183 1F95                                              l9175 1F6C  
                                            l9159 1F1C                                              l9167 1F44  
                                            l6935 2655                                              l6943 265F  
                                            l6951 25FA                                              l6927 1039  
                                            l6919 1018                                              l9351 08E3  
                                            l9343 0877                                              l9335 0864  
                                            l9327 024C                                              l9319 0222  
                                            l9271 00F8                                              l9263 00B7  
                                            l9255 008A                                              l9247 0070  
                                            l9415 27DF                                              l9407 27D4  
                                            l8481 1172                                              l8473 115E  
                                            l8465 113C                                              l8457 1124  
                                            l8449 110A                                              l8393 1074  
                                            l8297 273A                                              l8641 0F80  
                                            l8633 0F60                                              l8625 0F50  
                                            l8617 0F38                                              l8609 0EEC  
                                            l8561 0DBA                                              l8553 0DAC  
                                            l8545 0D95                                              l8537 0D86  
                                            l8289 0B27                                              l8385 188E  
                                            l8721 1A78                                              l8801 0D2E  
                                            l8705 26FD                                              l9097 139E  
                                            l9089 1385                                              l9193 1FB5  
                                            l9185 1F9C                                              l9177 1F71  
                                            l9169 1F50                                              l6937 2657  
                                            l6945 2661                                              l6929 103B  
                                            l6961 26E0                                              l6953 25D8  
                                            l9353 08E6                                              l9345 0893  
                                            l9337 086A                                              l9329 03F0  
                                            l9281 0147                                              l9273 00FD  
                                            l9265 00C2                                              l9257 0096  
                                            l9249 0079                                              l9417 27E2  
                                            l9409 27D6                                              l8483 1179  
                                            l8491 1189                                              l8459 1129  
                                            l8467 1143                                              l8475 1162  
                                            l8395 107A                                              l8299 273C  
                                            l8643 0F85                                              l8651 0FAD  
                                            l8635 0F64                                              l8627 0F57  
                                            l8619 0F44                                              l8571 0DD6  
                                            l8563 0DBF                                              l8555 0DB0  
                                            l8547 0D9D                                              l8539 0D8A  
                                            l8387 103E                                              l8731 1AA1  
                                            l8723 1A88                                              l8715 1A5F  
                                            l8803 0D79                                              l8707 2706  
                                            l8811 1B16                                              l9099 13B5  
                                            l9195 1FBA                                              l9187 1FA2  
                                            l9179 1F87                                              l6971 275C  
                                            l6939 2659                                              l6947 25F6  
                                            l6963 26E1                                              l6955 26DA  
                                            l9355 08EE                                              l9347 08C5  
                                            l9339 086F                                              l9283 014B  
                                            l9291 0174                                              l9275 0113  
                                            l9267 00E8                                              l9259 00A1  
                                            l8493 118D                                              l8485 117D  
                                            l8477 1168                                              l8469 1155  
                                            l8397 107E                                              l8661 0FDD  
                                            l8653 0FBA                                              l8645 0F8D  
                                            l8637 0F78                                              l8629 0F5B  
                                            l8581 0E03                                              l8573 0DDB  
                                            l8565 0DC7                                              l8557 0DB4  
                                            l8549 0D9F                                              l8389 1041  
                                            l8741 1ACB                                              l8733 1AA8  
                                            l8717 1A64                                              l8709 270B  
                                            l8821 1B3C                                              l8813 1B20  
                                            l8805 1B0A                                              l9189 1FA7  
                                            l9197 1FD1                                              l8901 1C4A  
                                            l6973 2767                                              l6981 07D0  
                                            l6949 25F9                                              l6965 26E8  
                                            l6957 26DC                                              l9349 08E0  
                                            l9357 08F8                                              l9293 0180  
                                            l9285 0157                                              l9269 00EC  
                                            l9277 0115                                              l8495 118E  
                                            l8487 117E                                              l8479 1170  
                                            l8399 1082                                              l8663 0FEA  
                                            l8655 0FC4                                              l8647 0F91  
                                            l8591 0E68                                              l8583 0E22  
                                            l8567 0DC9                                              l8559 0DB5  
                                            l8751 1AFC                                              l8743 1ACF  
                                            l8735 1AAC                                              l8727 1A91  
                                            l8719 1A68                                              l9439 1B58  
                                            l8831 1B7E                                              l8823 1B43  
                                            l8815 1B34                                              l8807 1B10  
                                            l9199 1FDF                                              l8911 1C6F  
                                            l8903 1C4D                                              l6975 276F  
                                            l6983 07DB                                              l6967 26EA  
                                            l6959 26DE                                              l9359 08FC  
                                            l9295 01A6                                              l9287 015C  
                                            l9279 0121                                              l9391 278E  
                                            l8497 1192                                              l8489 1185  
                                            l8665 0FEE                                              l8657 0FD2  
                                            l8649 0FA9                                              l8593 0E6F  
                                            l8585 0E2F                                              l8577 0DE4  
                                            l8569 0DD1                                              l8681 14CB  
                                            l8673 13E4                                              l8753 1B00  
                                            l8745 1AD9                                              l8737 1AB4  
                                            l8729 1A96                                              l8761 2719  
                                            l8841 1BB2                                              l8825 1B4C  
                                            l8817 1B35                                              l8809 1B14  
                                            l8921 03F7                                              l8905 1C59  
                                            l8913 1C86                                              l6977 2777  
                                            l6985 07E3                                              l6969 26F2  
                                            l9297 01AA                                              l9289 0172  
                                            l9393 278F                                              l8499 11A6  
                                            l8667 0FEF                                              l8659 0FDB  
                                            l8595 0E81                                              l8587 0E4E  
                                            l8579 0DF6                                              l8691 153A  
                                            l8683 14EE                                              l8675 13ED  
                                            l8755 1B01                                              l8747 1AE3  
                                            l8739 1AC2                                              l8771 268E  
                                            l8763 2720                                              l8835 1B9A  
                                            l8827 1B60                                              l8851 26C6  
                                            l8931 0434                                              l8923 03FE  
                                            l8915 1C96                                              l8907 1C5F  
                                            l6979 277F                                              l6987 07EB  
                                            l9299 01B6                                              l9395 2791  
                                            l9387 2782                                              l8669 0FF7  
                                            l8597 0E88                                              l8589 0E5B  
                                            l8693 1559                                              l8685 14F3  
                                            l8677 1449                                              l8749 1AF7  
                                            l8781 0B5C                                              l8765 272F  
                                            l8837 1BA0                                              l8853 26CA  
                                            l8941 0488                                              l8933 0457  
                                            l8925 0400                                              l8909 1C6A  
                                            l8917 1C9D                                              l6989 07F3  
                                            l9397 2794                                              l9389 278D  
                                            l8599 0E9A                                              l8695 155F  
                                            l8687 1512                                              l8679 14AD  
                                            l8791 0C28                                              l8783 0B7B  
                                            l8775 0B37                                              l8767 2730  
                                            l8759 2716                                              l8839 1BA6  
                                            l8855 26D3                                              l8951 04E2  
                                            l8943 048A                                              l8935 045D  
                                            l8927 0405                                              l8919 1CA2  
                                            l9399 279C                                              l8697 15B3  
                                            l8689 1535                                              l8793 0C47  
                                            l8785 0B9A                                              l8777 0B50  
                                            l8849 26C0                                              l8961 050C  
                                            l8953 04E8                                              l8945 048F  
                                            l8937 0478                                              l8929 0415  
                                            l8881 1BCB                                              l8699 15B9  
                                            l8795 0C66                                              l8787 0BC1  
                                            l8779 0B53                                              l8971 0574  
                                            l8963 0511                                              l8947 049F  
                                            l8939 0482                                              l8891 1BFA  
                                            l8883 1BD2                                              l8875 1BB7  
                                            l8797 0CD3                                              l8789 0C09  
                                            l8981 05DC                                              l8973 0579  
                                            l8965 0530                                              l8949 04BF  
                                            l8957 0504                                              l8893 1C20  
                                            l8885 1BD8                                              l8877 1BBE  
                                            l8799 0D29                                              l8991 05F7  
                                            l8983 05E6                                              l8975 0598  
                                            l8959 050A                                              l8967 056C  
                                            l8895 1C24                                              l8887 1BE4  
                                            l8879 1BC7                                              STR_1 2840  
                                            l8993 05F9                                              l8985 05EA  
                                            l8969 0572                                              l8977 05D4  
                                            l8897 1C2F                                              l8889 1BEF  
                                            l8995 0603                                              l8987 05EF  
                                            l8979 05DA                                              l8899 1C34  
                                            l8997 0607                                              l8989 05F1  
                                            l8999 060C                                              _LATA 010C  
                                            _LATB 010D                                              _LATC 010E  
                                            _LATD 010F                                              _LATE 0110  
                                            _LATF 038C                                              _LATG 038D  
                                            u6110 2683                                              u6111 2682  
                                            u6120 268A                                              u6121 2689  
                                            u6130 264B                                              u6131 264A  
                                            u8000 0B27                                              u8001 0B26  
                                            u8010 0B35                                              u8011 0B34  
                                            u8100 1963                                              u8020 2747  
                                            u8101 1962                                              u8021 2746  
                                            u8110 197F                                              u8111 197E  
                                            u8120 19AD                                              u8040 2757  
                                            u8200 1878                                              u9000 1B00  
                                            u8121 19AC                                              u8041 2756  
                                            u8201 1877                                              u9001 1AFF  
                                            u8050 0815                                              u8130 1009  
                                            u9010 2720                                              u8051 0814  
                                            u8035 274C                                              u8131 1008  
                                            u9011 271F                                              u8300 10D3  
                                            u8060 0831                                              u8220 1889  
                                            u8140 1820                                              u9100 0C66  
                                            u9020 272F                                              u8301 10D2  
                                            u8061 0830                                              u8125 19A9  
                                            u8221 1888                                              u8141 181F  
                                            u9101 0C65                                              u9021 272E  
                                            u8310 10F1                                              u8070 084B  
                                            u8230 188E                                              u8150 183F  
                                            u9110 0CD3                                              u9030 269F  
                                            u8311 10F0                                              u8071 084A  
                                            u8231 188D                                              u8215 187A  
                                            u9111 0CD2                                              u9031 269D  
                                            u8320 1129                                              u8240 1082  
                                            u8080 193B                                              u7600 0913  
                                            u8160 1857                                              u9120 0D79  
                                            u9040 26A0                                              u9200 26D3  
                                            u8321 1128                                              u8241 1081  
                                            u8081 193A                                              u7601 0912  
                                            u8161 1856                                              u9121 0D78  
                                            u9201 26D2                                              u8410 117D  
                                            u8250 1088                                              u8090 1957  
                                            u7610 0918                                              u8170 185E  
                                            u9050 0B7B                                              u9130 1B20  
                                            u9210 1BBE                                              u8411 117C  
                                            u8251 1087                                              u8075 0847  
                                            u8091 1956                                              u7611 0917  
                                            u8171 185D                                              u8155 183B  
                                            u9051 0B7A                                              u9131 1B1F  
                                            u9211 1BBD                                              u8500 11E8  
                                            u8260 108D                                              u7700 09CA  
                                            u7620 0936                                              u9060 0B9A  
                                            u9140 1B34                                              u9300 1CB8  
                                            u9220 1BC4                                              u5940 07FC  
                                            u8501 11E7                                              u8405 1173  
                                            u8261 108C                                              u7621 0935  
                                            u9061 0B99                                              u9141 1B33  
                                            u9301 1CB7                                              u9221 1BC3  
                                            u5941 07FB                                              u8510 1203  
                                            u8430 118D                                              u8350 113B  
                                            u8270 10AD                                              u7710 09DE  
                                            u7630 093F                                              u8190 1871  
                                            u9070 0BC1                                              u9150 1B42  
                                            u9310 03FE                                              u9230 1BD2  
                                            u8511 1202                                              u8431 118C  
                                            u8351 113A                                              u8335 112A  
                                            u8271 10AC                                              u7711 09DD  
                                            u7631 093E                                              u8191 1870  
                                            u9071 0BC0                                              u9151 1B41  
                                            u9311 03FD                                              u9231 1BD1  
                                            u8520 1218                                              u8440 1192  
                                            u8280 10B3                                              u8600 0DDB  
                                            u7720 09EA                                              u7640 0945  
                                            u9080 0C28                                              u9160 1B93  
                                            u9400 0598                                              u9320 0434  
                                            u9240 1BE4                                              u8521 1217  
                                            u8505 11E4                                              u8441 1191  
                                            u8425 117F                                              u8345 1131  
                                            u8281 10B2                                              u8601 0DDA  
                                            u7721 09E9                                              u7641 0944  
                                            u8185 1860                                              u9081 0C27  
                                            u9161 1B91                                              u9401 0597  
                                            u9321 0433                                              u9305 1CB4  
                                            u9241 1BE3                                              u8450 11A6  
                                            u8370 1155                                              u8290 10B8  
                                            u8530 0D8A                                              u7810 0A50  
                                            u7650 094A                                              u9090 0C47  
                                            u9170 1B94                                              u9410 05DA  
                                            u9330 045D                                              u9250 1BEF  
                                            u8515 11FF                                              u8451 11A5  
                                            u8371 1154                                              u8291 10B7  
                                            u8531 0D89                                              u7811 0A4F  
                                            u7651 0949                                              u9091 0C46  
                                            u9411 05D9                                              u9331 045C  
                                            u9251 1BEE                                              u8460 11AD  
                                            u8380 1168                                              u8700 0F64  
                                            u8540 0D90                                              u7900 0ACB  
                                            u7820 0A7F                                              u7740 09FE  
                                            u7660 0963                                              u9180 1BA0  
                                            u9500 122F                                              u9420 05E6  
                                            u9340 0488                                              u9260 1BFA  
                                            u8461 11AC                                              u8381 1167  
                                            u8365 113D                                              u8701 0F63  
                                            u8541 0D8F                                              u7901 0ACA  
                                            u7821 0A7E                                              u7813 0A4C  
                                            u7805 0A2F                                              u7741 09FD  
                                            u7661 0962                                              u9181 1B9F  
                                            u9501 122E                                              u9421 05E5  
                                            u9341 0487                                              u9261 1BF9  
                                            u8470 11B3                                              u8390 1170  
                                            u8710 0F78                                              u8630 0F10  
                                            u8550 0D95                                              u7910 0AD1  
                                            u7830 0A98                                              u7750 0A02  
                                            u7670 0967                                              u7590 090D  
                                            u9190 1BA6                                              u9510 1235  
                                            u9430 05EF                                              u9350 04BF  
                                            u9270 1C4A                                              u8471 11B2  
                                            u8391 116F                                              u8375 1151  
                                            u8711 0F77                                              u8615 0E69  
                                            u8551 0D94                                              u7911 0AD0  
                                            u7831 0A97                                              u7751 0A01  
                                            u7735 09ED                                              u7671 0966  
                                            u7591 090C                                              u9191 1BA5  
                                            u9511 1234                                              u9431 05EE  
                                            u9351 04BE                                              u9271 1C49  
                                            u8480 11BF                                              u8720 0F7F  
                                            u8640 0F27                                              u8560 0DB4  
                                            u7920 0AD8                                              u7840 0A9D  
                                            u7760 0A07                                              u7680 09BF  
                                            u8800 1512                                              u9600 132F  
                                            u9520 1243                                              u9440 05F7  
                                            u9360 04E8                                              u9280 1C59  
                                            u8481 11BE                                              u8721 0F7E  
                                            u8625 0EA2                                              u8561 0DB3  
                                            u7921 0AD7                                              u7841 0A9C  
                                            u7761 0A06                                              u7681 09BE  
                                            u8801 1511                                              u9601 132E  
                                            u9521 1242                                              u9441 05F6  
                                            u9361 04E7                                              u9281 1C58  
                                            u8490 11CD                                              u8730 0F85  
                                            u8570 0DBA                                              u7930 0ADE  
                                            u7770 0A1C                                              u7690 09C9  
                                            u8810 1559                                              u9610 133D  
                                            u9530 1255                                              u9450 0603  
                                            u9370 050A                                              u9290 1C85  
                                            u8731 0F84                                              u8635 0F0C  
                                            u8571 0DB9                                              u7931 0ADD  
                                            u7771 0A1B                                              u7691 09C7  
                                            u8811 1558                                              u9611 133C  
                                            u9531 1254                                              u9451 0602  
                                            u9371 0509                                              u9291 1C84  
                                            u9275 1C46                                              u8740 0F91  
                                            u8580 0DBF                                              u7940 0AEA  
                                            u7860 0AB1                                              u7780 0A20  
                                            u8820 15B3                                              u9620 1377  
                                            u9540 1260                                              u9700 1E6C  
                                            u9460 060C                                              u9380 0530  
                                            u8741 0F90                                              u8645 0F23  
                                            u8581 0DBE                                              u7941 0AE9  
                                            u7861 0AB0                                              u7781 0A1F  
                                            u7685 09BB                                              u8821 15B2  
                                            u9621 1376                                              u9605 132B  
                                            u9541 125F                                              u9701 1E6B  
                                            u9461 060B                                              u9381 052F  
                                            u8750 0F9F                                              u8670 0F4F  
                                            u8590 0DD6                                              u7950 0AF8  
                                            u7870 0AB6                                              u7790 0A2C  
                                            u8910 1AA7                                              u8830 26FD  
                                            u9630 1385                                              u9550 126B  
                                            u9710 1E7E                                              u9470 0614  
                                            u9390 0572                                              u8495 11C9  
                                            u8671 0F4E                                              u8655 0F32  
                                            u8591 0DD5                                              u7871 0AB5  
                                            u7855 0AA7                                              u7791 0A2B  
                                            u8911 1AA6                                              u8831 26FC  
                                            u9631 1384                                              u9551 126A  
                                            u9711 1E7D                                              u9471 0613  
                                            u9391 0571                                              u9295 1C81  
                                            u8760 0FBA                                              u7960 0B07  
                                            u7880 0AC0                                              u9640 13B4  
                                            u9560 1276                                              u9800 1F87  
                                            u9720 1E89                                              u9480 063D  
                                            u8761 0FB9                                              u8665 0F45  
                                            u7961 0B06                                              u7881 0ABF  
                                            u8905 1A9B                                              u9641 13B3  
                                            u9625 1373                                              u9561 1275  
                                            u9801 1F86                                              u9721 1E88  
                                            u9481 063C                                              u8770 0FD2  
                                            u8690 0F5F                                              u7970 0B10  
                                            u7890 0AC6                                              u8930 1AC1  
                                            u9650 13E3                                              u9570 1281  
                                            u9810 1F95                                              u9730 1E94  
                                            u9490 0653                                              u8771 0FD1  
                                            u8755 0F9B                                              u8691 0F5E  
                                            u7971 0B0F                                              u7955 0AF4  
                                            u7891 0AC5                                              u8931 1AC0  
                                            u9651 13E2                                              u9571 1280  
                                            u9811 1F94                                              u9731 1E93  
                                            u9491 0652                                              u8780 0FEE  
                                            u7980 0B15                                              u9660 1CC0  
                                            u8860 2711                                              u9580 12D1  
                                            u9900 17B7                                              u9820 1F9C  
                                            u9740 1E9F                                              u8781 0FED  
                                            u8765 0FB6                                              u8685 0F51  
                                            u7981 0B14                                              u8925 1AB5  
                                            u9661 1CBF                                              u8861 2710  
                                            u8845 2702                                              u9645 13B0  
                                            u9581 12D0                                              u9901 17B6  
                                            u9821 1F9B                                              u9805 1F83  
                                            u9741 1E9E                                              u7990 0B22  
                                            u8790 14CB                                              u8950 1ACF  
                                            u8870 1A64                                              u9670 1DED  
                                            u9590 12DF                                              u9830 1FD0  
                                            u9750 1EAA                                              u9910 0070  
                                            u8775 0FCE                                              u7991 0B21  
                                            u8791 14CA                                              u8951 1ACE  
                                            u8871 1A63                                              u9671 1DEC  
                                            u8855 2707                                              u9655 13DF  
                                            u9591 12DE                                              u9831 1FCF  
                                            u9751 1EA9                                              u9911 006F  
                                            u8960 1AD5                                              u8880 1A68  
                                            u9840 1FFF                                              u9760 1EFA  
                                            u9680 1E59                                              u9920 0076  
                                            u8961 1AD4                                              u8945 1AC5  
                                            u8881 1A67                                              u9585 12CD  
                                            u9841 1FFE                                              u9761 1EF9  
                                            u9681 1E58                                              u9921 0075  
                                            u8970 1AD9                                              u8890 1A88  
                                            u9850 15F7                                              u9770 1F08  
                                            u9690 1E5F                                              u9930 0084  
                                            u8971 1AD8                                              u8891 1A87  
                                            u9851 15F6                                              u9835 1FCC  
                                            u9771 1F07                                              u9691 1E5E  
                                            u9931 0083                                              u8980 1AED  
                                            u9860 15FC                                              u9780 1F42  
                                            u9940 0096                                              u9861 15FB  
                                            u9845 1FFB                                              u9781 1F41  
                                            u9765 1EF6                                              u9941 0095  
                                            u8990 1AFC                                              u9870 16C2  
                                            u9790 1F50                                              u9950 00A1  
                                            u8991 1AFB                                              u9871 16C1  
                                            u9791 1F4F                                              u9951 00A0  
                                            u9880 171A                                              u9960 00AC  
                                            u8985 1AE9                                              u9881 1719  
                                            u9785 1F3E                                              u9961 00AB  
                                            u9890 1730                                              u9970 00B7  
                                            u9891 172F                                              u9971 00B6  
                                            u9980 00C2                                              u9885 1716  
                                            u9981 00C1                                              u9990 0113  
                                            u9991 0112                                              u9995 010F  
                                            _WPUB 020D                                              _WPUG 048D  
                                   _EUSART1_Write 07F6                                     _EUSART2_Write 2645  
                                   ?_ManualHandle 0070                                      KE@OmegaRight 0134  
                                            _atoi 1B0A                                              _main 2782  
                                            _t_dp 0060                          ramp_step_function@radius 013C  
                                   ?_EUSART1_Read 0070                                      KE@Omega_body 0128  
                                            fsr0h 0005                                              fsr1h 0007  
                                            indf0 0000                                              fsr0l 0004  
                                            indf1 0001                                              fsr1l 0006  
                                            btemp 007E                                              start 0019  
                                 ___fldiv@new_exp 00CC                              _TimeLapseHandle$3327 0338  
                            _TimeLapseHandle$3328 0334                        ??_TMR1_SetInterruptHandler 0030  
                  __size_of_OSCILLATOR_Initialize 0007                     __end_of_OSCILLATOR_Initialize 25FD  
                                   ___fltol@sign1 0051                                             ?_atoi 0034  
                                 __end_of___fladd 0B37                                             ?_main 0070  
                                 __end_of___fldiv 1228                                   __end_of___flneg 100C  
                                 __end_of___flmul 1000                                   __end_of___flsub 1074  
                                 __end_of___fltol 189B                                             u10000 0121  
                                           u10001 0120                                             u10010 0172  
                                           u10011 0171                                             u10100 086A  
                                           u10020 0180                                             u10101 0869  
                                           u10021 017F                                             u10110 0893  
                                           u10030 01D1                                             u10111 0892  
                                           u10031 01D0                                             u10015 016E  
                                           u10120 08C5                                             u10040 01DF  
                                           u10121 08C4                                             u10041 01DE  
                                           u10050 0210                                             u10115 088F  
                                           u10051 020F                                             u10035 01CD  
                                           u10060 0245                                             u10061 0244  
                                           u10070 024C                                             u10071 024B  
                                           u10055 020C                                             u10080 0856  
                                           u10160 279C                                             u10081 0855  
                                           u10065 0241                                             u10161 279B  
                                           u10090 0864                                             u10170 27C8  
                                           u10091 0863                                             u10171 27C7  
                                           u10095 0860                                             u10187 087B  
                                           u10197 0B57                                             _T1CON 0018  
                                           i1l441 266F                                             i1l425 1811  
                                           i1l437 267D                                             i1l447 1800  
                                           i1l464 0017                        __end_of_i2c1_fsmStateTable 2840  
                                           _TMR1H 0017                                             _TMR1L 0016  
                                           _TRISA 008C                                             _TRISB 008D  
                                           _TRISC 008E                                             _TRISD 008F  
                                           _TRISE 0090                                             _TRISF 030C  
                                           _TRISG 030D                                 ??_I2C1_Initialize 002E  
                                __end_of_TMR1_ISR 267E                                             _cntDp 01E0  
                                  ?_ManualControl 0070                                    _WDT_Initialize 25D8  
                                 __end_of_isdigit 26A7                                             _shift 0161  
                                           atoi@n 0041                                             atoi@s 0034  
                                 __end_of_isspace 2738                                  __end_ofi1___flge 1926  
                                  ?_EUSART1_Write 0070                           __end_of_TMR1_Initialize 26F6  
                                   ?_T1_ROBOT_ISR 0070                                    ?_EUSART2_Write 0070  
                                  ??_ManualHandle 0051                                             pclath 000A  
                            _I2C2_DO_RX_NACK_STOP 0000                                    ??_EUSART1_Read 002E  
                                           status 0003                                             wtemp0 007E  
              _EUSART1_DefaultFramingErrorHandler 0000                                   _TMR1_WriteTimer 1801  
                        __end_of_AutoCircleHandle 13E4                   ramp_step_function@velocity_ramp 02EA  
                               ??_I2C2_Initialize 002E                                   __initialization 001B  
                                    __end_of_atoi 1BB7                        __end_of_EUSART1_Initialize 2782  
                                    __end_of_main 2800                       ?_INTERRUPT_InterruptManager 0070  
                                          ??_atoi 0036                                            ??_main 00EE  
                                     ?i1___xxtofl 0070                                  ??_AutoLineHandle 0051  
                     _EUSART2_DefaultErrorHandler 0000                            __end_of_WDT_Initialize 25DC  
                        __size_of_AutoLineControl 0210                                  TimeLapseHandle@i 0344  
                                TimeLapseHandle@j 033C                        __end_of_EUSART2_Initialize 07F6  
                                          _APFCON 011D                                    ??_T1_ROBOT_ISR 002C  
                                          _ANSELA 018C                                            _ANSELE 0190  
                                          _ANSELF 040C                                            _ANSELG 040D  
                                          _BORCON 0116                                            _T1GCON 0019  
                                          _RC1REG 0199                                            _RC2REG 0491  
                                          _RC1STA 019D                                            _RC2STA 0495  
                         TMR1_WriteTimer@timerVal 0070                                            i1l2031 1925  
                                          i1l2023 18B8                                            i1l2026 190C  
                                          i1l2300 1A34                      __size_of_EUSART1_is_rx_ready 0005  
                                          i1l2292 1A0E                                            i1l1476 07CF  
                                          i1l2286 19D3                                            i1l2288 1A5C  
                                          i1l2299 1A28                                            i1l7001 180D  
                                          i1l7003 180F                                            i1l7005 2663  
                                          i1l7101 2672                                            i1l7007 266A  
                                          i1l6601 1A4F                                            i1l6603 1A53  
                                          i1l6605 1A54                                            i1l6551 18D4  
                                          i1l6561 1924                                            i1l6553 18D8  
                                          i1l6545 189B                                            i1l6555 18F0  
                                          i1l6547 18B0                                            i1l6571 19CB  
                                          i1l7099 2670                                            i1l6557 18F4  
                                          i1l6549 18CC                                            i1l6581 19F4  
                                          i1l6573 19DB                                            i1l6565 19B2  
                                          i1l6741 06E1                                            i1l6559 1922  
                                          i1l6591 1A1E                                            i1l6583 19FB  
                                          i1l6567 19B7                                            i1l6751 0738  
                                          i1l6743 06ED                                            i1l6735 0699  
                                          i1l6593 1A22                                            i1l6585 19FF  
                                          i1l6577 19E4                                            i1l6569 19BB  
                                          i1l6761 078F                                            i1l6753 0744  
                                          i1l6737 06A3                                            i1l6745 06F0  
                                          i1l6595 1A2C                                            i1l6587 1A07  
                                          i1l6579 19E9                                            i1l6771 07B5  
                                          i1l6763 079B                                            i1l6747 06FA  
                                          i1l6755 0747                                            i1l6739 06DB  
                                          i1l6597 1A36                                            i1l6589 1A15  
                                          i1l6773 07BE                                            i1l6757 0751  
                                          i1l6765 079E                                            i1l6749 0732  
                                          i1l7901 000F                                            i1l6599 1A4A  
                                          i1l6775 07C7                                            i1l6767 07AC  
                                          i1l6759 0789                                            i1l7903 0014  
                                          i1l6777 07CB                                            i1l6769 07B3  
                                          i1l6991 1801                                            i1l6993 1806  
                                          i1l6995 1807                                            i1l6997 1809  
                                          i1l6999 180B                                            i1l7897 0006  
                                          i1l7899 000A                                            u530_20 1922  
                                          u530_21 1921                                            u530_25 191E  
                                          u531_20 19B7                                            u531_21 19B6  
                                          u540_20 1A28                                            u532_20 19BB  
                                          u540_21 1A27                                            u532_21 19BA  
                                          u541_20 1A2C                                            u533_20 19DB  
                                          u541_21 1A2B                                            u533_21 19DA  
                                          u526_20 18B0                                            u542_20 1A40  
                                          u550_20 06DB                                            u526_21 18AF  
                                          u550_21 06DA                                            u542_25 1A3C  
                                          u534_25 19EE                                            u527_20 18CC  
                                          u543_20 1A4F                                            u535_20 19FA  
                                          u551_20 06EB                                            u527_21 18CB  
                                          u543_21 1A4E                                            u535_21 19F9  
                                          u551_21 06E8                                            u528_20 18D8  
                                          u544_20 1A53                                            u528_21 18D7  
                                          u544_21 1A52                                            u560_24 079B  
                                          u552_24 06ED                                            u536_25 1A08  
                                          u529_20 18F4                                            u537_20 1A14  
                                          u561_20 07AC                                            u553_20 06FA  
                                          u529_21 18F3                                            u537_21 1A13  
                                          u561_21 07AB                                            u553_21 06F9  
                                          u561_25 07A8                                            u554_20 0732  
                                          _OSCCON 0099                                            u554_21 0731  
                                          u538_25 1A18                                            u539_20 1A22  
                                          u555_20 0742                                            u539_21 1A21  
                                          u555_21 073F                                            u556_24 0744  
                                          u557_20 0751                                            u549_20 06A3  
                                          u557_21 0750                                            u549_21 06A2  
                                          u558_20 0789                                            u558_21 0788  
                                          u559_20 0799                                            u559_21 0796  
                                          u592_20 1806                                            u592_21 1805  
                                          u593_20 266A                                            u593_21 2669  
                                          u746_20 000A                                            u746_21 0009  
                                          u747_20 000F                                            u747_21 000E  
                                          u748_20 0014                                            u748_21 0013  
                                          _TX1REG 019A                                            _TX2REG 0492  
                        _I2C2_CallbackReturnReset 0000                                            _WDTCON 0097  
                                          _TX1STA 019E                                            _TX2STA 0496  
                                __end_of___xxtofl 1B0A                                  _I2C1_DO_TX_EMPTY 0000  
                                 AutoLineHandle@i 00BC                                   AutoLineHandle@j 00B4  
            __end_of_TMR1_DefaultInterruptHandler 1801             __size_of_TMR1_DefaultInterruptHandler 0001  
                    _TMR1_DefaultInterruptHandler 1800                                            ___flge 1926  
                                          ___fleq 0800                                         ??___fladd 00DC  
                                          ___wmul 26F6                                         ??___fldiv 00C2  
                                       ??___flneg 0032                                         ??___flmul 00A8  
                                       ??___flsub 0051                                         ??___fltol 0120  
                        ?_EUSART1_SetErrorHandler 002E                                _SetUpModeHalf_step 263C  
                                          _t_left 0168                       _EUSART2_FramingErrorHandler 02DE  
                ??_EUSART1_SetOverrunErrorHandler 0030                   ?_EUSART1_SetOverrunErrorHandler 002E  
                                          _strlen 26C0                             _I2C1_DO_SEND_ADR_READ 0000  
                                       ??_isdigit 0030                                __size_of__Umul8_16 0024  
                             ?_SetUpModeHalf_step 0070                                         ??_isspace 0030  
                                 ??_ManualControl 0054                                   ?_WDT_Initialize 0070  
                                 ??_EUSART1_Write 002E                                   ??_EUSART2_Write 002E  
        TMR1_SetInterruptHandler@InterruptHandler 002E                           __end_of_TMR1_WriteTimer 1812  
                              _ramp_step_function 0B37                           _I2C1_DO_RX_NACK_RESTART 0000  
                           __end_of_TMR1_CallBack 2670                                        ___flge@ff1 00BA  
                                      ___flge@ff2 00BE                                  ?_TMR1_Initialize 0070  
                                    ___xxtofl@arg 004D                                      ___xxtofl@exp 004C  
                               _SYSTEM_Initialize 26A7                                      ___xxtofl@val 0043  
                                      ___fleq@ff1 00A0                                        ___fleq@ff2 00A4  
                         __end_of__initialization 0065                               ramp_step_function@i 02E8  
                                      ___flneg@f1 002E                                   _TimeLapseHandle 0069  
                              ?_SYSTEM_Initialize 0070                               ?_ramp_step_function 0138  
                             __size_ofi1___xxtofl 00AC                                        ___fltol@f1 00E8  
                            ??_SetUpModeHalf_step 002E                                  _I2C2_DO_TX_EMPTY 0000  
                         _rdBlkRegCompleteHandler 0000                                    __pcstackCOMMON 0070  
                                    __pidataBANK0 0002                                      __pidataBANK2 25E5  
                                    __pidataBANK4 25DC                               ??_SYSTEM_Initialize 0030  
                                       ?_TMR1_ISR 0070                     ?_TMR1_DefaultInterruptHandler 0070  
                          AutoCircleHandle@j_2365 00B6                            AutoCircleHandle@j_2366 00B8  
                          AutoCircleHandle@j_2367 00BA                                        __end_of_KE 15F0  
                            __end_of_ManualHandle 1CB9                                         ?i1___flge 0020  
                            __end_of_EUSART1_Read 268E                              ??_ramp_step_function 0053  
                                  _OPTION_REGbits 0095                          ?_EUSART2_SetErrorHandler 002E  
                            AutoLineHandle@j_2373 00B6                              AutoLineHandle@j_2374 00B8  
                            AutoLineHandle@j_2375 00BA                         __end_of_SYSTEM_Initialize 26C0  
                       __size_of_TimeLapseControl 00B0                                        __pbssBANK0 0054  
                                      __pbssBANK1 00EF                                        __pbssBANK2 0144  
                                      __pbssBANK3 01A0                                        __pbssBANK4 0220  
                                      __pbssBANK5 02A0                                        _cntACircle 0056  
                               ??_AutoLineControl 0053                  ??_EUSART2_SetFramingErrorHandler 0030  
                 ?_EUSART2_SetFramingErrorHandler 002E                                    i1___xxtofl@arg 007A  
                                  i1___xxtofl@exp 0079                                    i1___xxtofl@val 0070  
                           _rd1RegCompleteHandler 0000                                 _I2C1_DO_SEND_STOP 0000  
                               __end_of__Umul8_16 275C                             _wr1RegCompleteHandler 0000  
                                      _flagCamera 015D                   __end_of_EUSART1_SetErrorHandler 2606  
                                      __pmaintext 2782                                        _angle_move 01A4  
                                         ?___flge 00BA                                           ?___fleq 00A0  
                                      _flagManual 015F                                           ?___wmul 002E  
                                      ??_TMR1_ISR 007E                                        __pintentry 0004  
                                 _I2C1_Initialize 264F                                     ManualHandle@i 00B8  
                                   ManualHandle@j 00B4                              __end_of_T1_ROBOT_ISR 07D0  
                     AutoLineHandle@bufferALine_t 00A0                                        ??i1___flge 0028  
                                         ?_strlen 002E            __end_of_EUSART1_SetFramingErrorHandler 260F  
         __size_of_EUSART1_SetFramingErrorHandler 0009                    _EUSART1_SetFramingErrorHandler 2606  
                                       ?___xxtofl 0043                        __end_of_i2c2_fsmStateTable 2820  
                                         _SP1BRGH 019C                                           _SP1BRGL 019B  
                                         _SP2BRGH 0494                                           _SP2BRGL 0493  
                               TimeLapseControl@i 00EC                                        _buffer_sys 02A8  
                                         _OSCTUNE 0098                                           _SSP1ADD 0212  
                                         _SSP2ADD 021A                           __end_of_TimeLapseHandle 03F7  
                                         _SSP1BUF 0211                                           _SSP2BUF 0219  
                                ?_TMR1_WriteTimer 0070                                   _I2C2_Initialize 2659  
                              _i2c1_fsmStateTable 2820    _rd1RegCompleteHandler@i2c1_master_example$F143 0000  
  _wr1RegCompleteHandler@i2c1_master_example$F160 0000    _rd2RegCompleteHandler@i2c1_master_example$F154 0000  
  _wr2RegCompleteHandler@i2c1_master_example$F166 0000  _rdBlkRegCompleteHandler@i2c1_master_example$F177 0000  
                           _I2C2_DO_SEND_ADR_READ 0000                                 ?_AutoCircleHandle 0070  
                                 __size_of___flge 008B                                   __size_of___fleq 004F  
                       _I2C2_DO_SEND_RESTART_READ 0000                                           ___fladd 08FF  
                                         ___fldiv 1074                                           ___flneg 1000  
                                         ___flmul 0D7C                                           ___flsub 103E  
                                         ___fltol 1812                                   __size_of___wmul 0020  
                              ??_AutoCircleHandle 0051                                      _direct_ALine 005E  
                                      _errorOmega 005A                               _EUSART1_is_rx_ready 25E0  
                 __end_of_EUSART2_SetErrorHandler 2621                                           _cntLeft 01E4  
                                    ??i1___xxtofl 0074                                           __ptext1 0069  
                                         __ptext2 084F                                           __ptext3 07F6  
                                         __ptext4 263C                                           __ptext5 26A7  
                                         __ptext6 25D8                                           __ptext7 26DA  
                                         __ptext8 2633                                           __ptext9 100C  
                                         _cntTime 015A                    ??_TMR1_DefaultInterruptHandler 0070  
                                         _cnt_sys 015C                                        _velACircle 0148  
                                 __size_of_strlen 001A                                         _T1CONbits 0018  
                                      _omegaALine 01B8                                           _in_ramp 016A  
              _EUSART2_DefaultOverrunErrorHandler 0000                             _OSCILLATOR_Initialize 25F6  
                                         _isdigit 268E                                        ??___xxtofl 0047  
               __size_of_TMR1_SetInterruptHandler 0009                                  _DistanceValueTop 01D4  
                              _EUSART1_Initialize 275C                          ??_PIN_MANAGER_Initialize 002E  
                                         _isspace 2716                         ?_TMR1_SetInterruptHandler 002E  
                                         _t_right 0166                               _DistanceValueBottom 01D0  
                                         atoi@neg 003A                        __size_of_SYSTEM_Initialize 0019  
                                         clrloop0 25EB                              end_of_initialization 0065  
                                      _valTime_TL 01A8                              ?_EUSART1_is_rx_ready 0070  
                             ?_EUSART1_Initialize 0070                                           init_ram 25F0  
                     _EUSART1_OverrunErrorHandler 02E2                                           initloop 25F1  
                          _I2C1_DO_SEND_ADR_WRITE 0000                                     _valVLength_TL 01AC  
                         __end_of_I2C1_Initialize 2659                                __end_ofi1___xxtofl 1A5D  
                           TimeLapseHandle@j_2381 033E                             TimeLapseHandle@j_2382 0340  
                           TimeLapseHandle@j_2383 0342                                _EUSART2_Initialize 07D0  
                                     _I2C1_Status 023D                                 _I2C2_DO_SEND_STOP 0000  
                                     _I2C2_Status 0220                                         _PID_Omega 01C8  
                           __size_of_ManualHandle 0102                             __size_of_EUSART1_Read 0010  
                            ??_EUSART1_Initialize 0030                        ManualHandle@bufferManual_t 00A0  
                      _I2C1_DO_SEND_RESTART_WRITE 0000                               ?_EUSART2_Initialize 0070  
                                         strlen@a 0030                                           strlen@s 002E  
                                ??_WDT_Initialize 002E                                      _distance_raw 025A  
                                     ___fladd@grs 00E7                           __end_of_I2C2_Initialize 2663  
                                   ___xxtofl@sign 004B                                       ___fldiv@grs 00CE  
                                     ___fldiv@rem 00C7                                  ?_TimeLapseHandle 0070  
                __size_of_EUSART1_SetErrorHandler 0009                               EUSART1_Write@txData 002E  
                           ??_EUSART1_is_rx_ready 002E                                  _TimeLapseControl 084F  
                            ??_EUSART2_Initialize 0030                                       ___flmul@grs 00AF  
                                    _ManualHandle 1BB7                                      _EUSART1_Read 267E  
                           __size_of_T1_ROBOT_ISR 0137                      ramp_step_function@omega_ramp 02E4  
                                  __end_of___flge 19B1                                    __end_of___fleq 084F  
                                  __end_of___wmul 2716                                    _I2C1_DO_RX_ACK 0000  
                               __size_of_TMR1_ISR 000E                            ?_OSCILLATOR_Initialize 0070  
                               __size_ofi1___flge 008B                                    __end_of_strlen 26DA  
                             start_initialization 001B                                    _I2C2_DO_RX_ACK 0000  
                                 _AutoLineControl 15F0                   __size_of_PIN_MANAGER_Initialize 0032  
                           __end_of_ManualControl 0699                             __end_of_EUSART1_Write 0800  
                           __end_of_EUSART2_Write 264F                                      _T1_ROBOT_ISR 0699  
                         __size_of_AutoLineHandle 01AE                  __size_of_EUSART2_SetErrorHandler 0009  
                         _I2C2_CallbackReturnStop 0000            __end_of_EUSART2_SetOverrunErrorHandler 2633  
         __size_of_EUSART2_SetOverrunErrorHandler 0009                    _EUSART2_SetOverrunErrorHandler 262A  
                                ?_I2C1_Initialize 0070                       __size_of_SetUpModeHalf_step 0009  
                        __size_of_TMR1_Initialize 001C                                          ??___flge 00C2  
                                        ??___fleq 00A8                                     _angle_ACircle 01DC  
                                        ??___wmul 0032                                    _errorOmega_pre 01CC  
                                  _errorOmega_sum 0154                                         __Umul8_16 2738  
                                     __pdataBANK0 0060                                       __pdataBANK2 0166  
                                     __pdataBANK4 026A                                      _length_ALine 01DE  
                          __size_of_TMR1_CallBack 000D                                          ??_strlen 0030  
                                       ___fladd@a 00D8                                         ___fladd@b 00D4  
                     __size_of_ramp_step_function 0245                      ramp_step_function@total_time 0140  
                                       ___fldiv@a 00BA                                         ___fldiv@b 00BE  
                                       ___flmul@a 00A4                                         ___flmul@b 00A0  
                                ?_I2C2_Initialize 0070                              _I2C1_DO_SEND_RESTART 0000  
                                       ___flsub@a 0120                                         ___flsub@b 0124  
                                       ___latbits 0003                                     __pcstackBANK0 0020  
                                   __pcstackBANK1 00A0                                     __pcstackBANK2 0120  
                                   __pcstackBANK5 02E4                                     __pcstackBANK6 0320  
                               __size_of___xxtofl 00AD                               EUSART2_Write@txData 002E  
                                 i1___xxtofl@sign 0078                                       _flagACircle 0057  
                ??_EUSART1_SetFramingErrorHandler 0030                   ?_EUSART1_SetFramingErrorHandler 002E  
                              _i2c2_fsmStateTable 2800                            _AutoCircleControl$3324 0320  
                          _AutoCircleControl$3325 0324                                         _atoi$2874 003C  
                                       _atoi$2875 0040                                         _atoi$2876 003E  
                                       __pnvBANK2 016B                                         __pnvBANK3 01EE  
                                       __pnvBANK4 026E                                         __pnvBANK5 02DA  
                           _rd2RegCompleteHandler 0000                                       _delay_frame 01DA  
                                       _flagALine 00EF                            _PIN_MANAGER_Initialize 100C  
                           _wr2RegCompleteHandler 0000                                         _cntCamera 015E  
                __end_of_TMR1_SetInterruptHandler 263C                                          ?___fladd 00D4  
                                        ?___fldiv 00BA                                          ?___flneg 002E  
                                       _cntManual 0158                                          ?___flmul 00A0  
                                        ?___flsub 0120                                          ?___fltol 00E8  
                                      ?__Umul8_16 002E                                         _flag_stop 0059  
                         __end_of_AutoLineControl 1800                      ??_INTERRUPT_InterruptManager 007E  
                                       _cnt_frame 01D8                                          _BAUD1CON 019F  
                                        _BAUD2CON 0497                                      _omegaACircle 01B4  
              _EUSART1_DefaultOverrunErrorHandler 0000                                          ?_isdigit 002E  
                            _EUSART1_ErrorHandler 02E0                                          ?_isspace 002E  
                       __size_of_AutoCircleHandle 01BC                           _EUSART1_SetErrorHandler 25FD  
                                     __size_of_KE 020C                              _I2C2_DO_SEND_RESTART 0000  
                                   _TMR1_CallBack 2663                                         _omega_sys 0262  
                                  ___wmul@product 0032           EUSART2_SetErrorHandler@interruptHandler 002E  
         EUSART1_SetErrorHandler@interruptHandler 002E                                          _LATBbits 010D  
                                        _LATCbits 010E                                          _LATFbits 038C  
                                      _I2C1_DO_RX 0000                                        _I2C1_DO_TX 0000  
_rdBlkRegCompleteHandler@i2c2_master_example$F307 0000    _rd1RegCompleteHandler@i2c2_master_example$F254 0000  
  _rd2RegCompleteHandler@i2c2_master_example$F281 0000    _wr2RegCompleteHandler@i2c2_master_example$F293 0000  
  _wr1RegCompleteHandler@i2c2_master_example$F287 0000                                        _I2C2_DO_RX 0000  
                                      _I2C2_DO_TX 0000                                         clear_ram0 25EA  
                                        _PIE1bits 0091                                          _PIE4bits 0094  
                                       _velManual 0150                                         _timeALine 014C  
                        __size_of_TMR1_WriteTimer 0011               __size_of_INTERRUPT_InterruptManager 0015  
                                        _PIR1bits 0011                                          _PIR2bits 0012  
                                        _PIR4bits 0014                                         _shift_one 0160  
                       _I2C1_DO_SEND_RESTART_READ 0000                                          _SSP1CON1 0215  
                                        _SSP1CON2 0216                                         _time_move 01A0  
                                        _SSP2CON1 021D                                          _SSP2CON2 021E  
                                        _TMR1_ISR 2670                                          _SSP1STAT 0214  
                                        _SSP2STAT 021C                          __end_of_TimeLapseControl 08FF  
                               ??_TMR1_Initialize 0030                                          i1___flge 189B  
                               ___wmul@multiplier 002E                                      _valRadius_AC 01EA  
                                    _valRadius_TL 01E6                                         _totalTime 0054  
                                       _sum_frame 0164                                      _isspace$2892 0032  
                                   _I2C1_DO_RESET 0000                                    ?_TMR1_CallBack 0070  
                                   _I2C2_DO_RESET 0000                                    _AutoLineHandle 1E52  
                         _EUSART2_SetErrorHandler 2618                       _EUSART2_OverrunErrorHandler 02DC  
                          _I2C2_DO_SEND_ADR_WRITE 0000                                  _distance_raw_one 02A0  
                               _AutoCircleControl 1CB9                           ??_OSCILLATOR_Initialize 002E  
                                     ??__Umul8_16 0030                                ?_AutoCircleControl 0070  
                                __size_of___fladd 0238                                  __size_of___fldiv 01B4  
                                __size_of___flneg 000C                                  __size_of___flmul 0284  
                                __size_of___flsub 0036                                  __size_of___fltol 0089  
                     __size_of_EUSART1_Initialize 0026                        _I2C2_DO_SEND_RESTART_WRITE 0000  
                                ?_AutoLineControl 0070                          _TMR1_SetInterruptHandler 2633  
                           _TMR1_InterruptHandler 01EE                         ??_EUSART1_SetErrorHandler 0030  
                     _EUSART1_DefaultErrorHandler 0000                               ??_AutoCircleControl 0054  
                     __end_of_EUSART1_is_rx_ready 25E5                                          ___xxtofl 1A5D  
                                        _cntALine 0058                              _EUSART2_ErrorHandler 02DA  
                                __size_of_isdigit 0019                                  __size_of_isspace 0022  
                                        __ptext10 25F6                                          __ptext11 2659  
                                        __ptext20 25FD                                          __ptext12 264F  
                                        __ptext21 1BB7                                          __ptext13 07D0  
                                      _T1GCONbits 0019                                          __ptext30 1B0A  
                                        __ptext22 03F7                                          __ptext14 262A  
                                        __ptext31 2716                                          __ptext23 2645  
                                        __ptext15 2621                                          __ptext40 08FF  
                                        __ptext32 268E                                          __ptext24 25E0  
                                        __ptext16 2618                                          __ptext41 1000  
                                        __ptext33 26F6                                          __ptext25 267E  
                                        __ptext17 275C                                          __ptext50 2663  
                                        __ptext42 0D7C                                          __ptext34 1CB9  
                                        __ptext26 1E52                                          __ptext18 260F  
                                        __ptext51 0699                                          __ptext43 2738  
                                        __ptext35 0B37                                          __ptext27 15F0  
                                        __ptext19 2606                                          __ptext52 1800  
                                        __ptext44 1926                                          __ptext36 1A5D  
                                        __ptext28 1228                                          __ptext53 19B1  
                                        __ptext45 0800                                          __ptext37 13E4  
                                        __ptext29 26C0                                          __ptext54 189B  
                                        __ptext46 1074                                          __ptext38 1812  
                                        __ptext39 103E                                          __ptext48 2670  
                                        __ptext49 1801                            __end_of_AutoLineHandle 2000  
                                        _cntRight 01E2                                      _SSP1CON1bits 0215  
                                    _SSP1CON2bits 0216                                      _SSP2CON1bits 021D  
                                    _SSP2CON2bits 021E                       __size_of_EUSART2_Initialize 0026  
                        _I2C1_CallbackReturnReset 0000                                     __size_of_atoi 00AD  
                                   __size_of_main 007E                _EUSART2_DefaultFramingErrorHandler 0000  
                                        _velALine 01BC                                          _omega_TL 0266  
                        __size_of_TimeLapseHandle 038E                                       _omegaManual 01C0  
                       __end_of_AutoCircleControl 1E52                                        _RC1STAbits 019D  
                                      _RC2STAbits 0495    EUSART2_SetOverrunErrorHandler@interruptHandler 002E  
  EUSART1_SetOverrunErrorHandler@interruptHandler 002E                                   KE@Velocity_body 012C  
                                        int$flags 007E                __end_of_INTERRUPT_InterruptManager 0019  
                      _INTERRUPT_InterruptManager 0004                                      _SSP1STATbits 0214  
                               ??_TMR1_WriteTimer 0072                       _EUSART1_FramingErrorHandler 026E  
                                    _I2C1_DO_IDLE 0000                                      _SSP2STATbits 021C  
                                    _I2C1_DO_RCEN 0000                                      _I2C2_DO_IDLE 0000  
                                    _I2C2_DO_RCEN 0000                  ??_EUSART2_SetOverrunErrorHandler 0030  
                 ?_EUSART2_SetOverrunErrorHandler 002E                                        _INTCONbits 000B  
                                _AutoCircleHandle 1228                                          isdigit@c 002E  
                                     _timeACircle 01B0                                   ??_TMR1_CallBack 007E  
                                 ?_AutoLineHandle 0070                                       _velManual_t 01C4  
                       ??_EUSART2_SetErrorHandler 0030                           __size_of_WDT_Initialize 0004  
                         _I2C2_DO_RX_NACK_RESTART 0000                                          intlevel1 0000  
                               AutoCircleHandle@i 00BC                                 AutoCircleHandle@j 00B4  
                                        isspace@c 002E                           ?_PIN_MANAGER_Initialize 0070  
                      __end_of_SetUpModeHalf_step 2645            __end_of_EUSART1_SetOverrunErrorHandler 2618  
         __size_of_EUSART1_SetOverrunErrorHandler 0009                    _EUSART1_SetOverrunErrorHandler 260F  
                         _I2C1_CallbackReturnStop 0000                              _I2C1_DO_ADDRESS_NACK 0000  
  EUSART2_SetFramingErrorHandler@interruptHandler 002E    EUSART1_SetFramingErrorHandler@interruptHandler 002E  
                          __size_of_ManualControl 02A2                        __end_of_ramp_step_function 0D7C  
                        __size_of_I2C1_Initialize 000A                            __size_of_EUSART1_Write 000A  
                              _eusart1RxLastError 0163                            __size_of_EUSART2_Write 000A  
                                   __pstringtext1 2800                                     __pstringtext2 2820  
                                   __pstringtext3 2840                                     __pstringtext4 0000  
                          __Umul8_16@multiplicand 002E                                      _velocity_sys 0144  
                                      _TX1STAbits 019E                                        _TX2STAbits 0496  
                                   ___fladd@signs 00E4                                       _velocity_TL 026A  
                  __end_of_PIN_MANAGER_Initialize 103E                          __size_of_I2C2_Initialize 000A  
                              _eusart2RxLastError 0162                                      ___fladd@aexp 00E5  
                                    ___fladd@bexp 00E6                              __Umul8_16@multiplier 0036  
                      __size_of_AutoCircleControl 0199                                ManualHandle@j_2358 00B6  
                                 _TMR1_Initialize 26DA                                 __Umul8_16@product 0032  
                      ramp_step_function@velocity 0138  
